{"ast":null,"code":"import _slicedToArray from \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/src/moduloCobros/components/Ventas.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Contenedor, { Alert } from '../../componentsPrincipales/Alert';\nimport Tabla from '../../componentsPrincipales/TablaL/TablaVentas';\nimport Fetch from '../../componentsPrincipales/Fetch/FetchN.js';\n\nvar TablaVentas = function TablaVentas(_ref) {\n  var FullScreen = _ref.FullScreen,\n      setFullScreen = _ref.setFullScreen,\n      setIdTicket = _ref.setIdTicket,\n      setTotal = _ref.setTotal,\n      setServicios = _ref.setServicios,\n      setProductos = _ref.setProductos,\n      setTipoVenta = _ref.setTipoVenta,\n      generarticket = _ref.generarticket,\n      IdTicket = _ref.IdTicket,\n      getdata = _ref.getdata,\n      Servicios = _ref.Servicios,\n      Productos = _ref.Productos;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Data = _useState2[0],\n      setData = _useState2[1];\n\n  var Columnas = [{\n    field: \"idtickets\",\n    header: \"Ticket\"\n  }, {\n    field: \"Tipo\",\n    header: \"Tipo\"\n  }, {\n    field: \"total\",\n    header: \"Total\"\n  }, {\n    field: \"fecha_creacion\",\n    header: \"Creado\"\n  }, {\n    field: \"Estatus\",\n    header: \"Estatus\"\n  }, {\n    field: \"fecha_pago\",\n    header: \"Fecha de Pago\"\n  }, {\n    field: \"Factura\",\n    header: \"Factura\"\n  }];\n\n  var eliminarticket = function eliminarticket() {\n    var idTT = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (idTT) {\n      var formData = new FormData();\n      formData.append(\"idTicket\", idTT);\n      Fetch(\"api/tickets/delete/tickets\", {\n        method: \"delete\",\n        body: formData\n      }).then(function (response) {\n        funget();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  };\n\n  useEffect(function () {\n    funget();\n  }, []);\n  useEffect(function () {\n    if (FullScreen === 0) {\n      if (Servicios === undefined && Productos.length === 0) {\n        eliminarticket(IdTicket);\n      } else {\n        funget();\n      }\n    }\n  }, [FullScreen]);\n\n  var funget = function funget() {\n    Fetch('api/tickets/listaventas').then(function (response) {\n      setData(response.data);\n    }).catch(function (err) {\n      console.log(err);\n      Alert('warn', err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Contenedor, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tabla, {\n    Data: Data,\n    Columnas: Columnas,\n    setIdTicket: setIdTicket,\n    setTotal: setTotal,\n    setServicios: setServicios,\n    setProductos: setProductos,\n    setTipoVenta: setTipoVenta,\n    getdata: getdata,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TablaVentas;","map":{"version":3,"sources":["/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/src/moduloCobros/components/Ventas.js"],"names":["React","useState","useEffect","Contenedor","Alert","Tabla","Fetch","TablaVentas","FullScreen","setFullScreen","setIdTicket","setTotal","setServicios","setProductos","setTipoVenta","generarticket","IdTicket","getdata","Servicios","Productos","Data","setData","Columnas","field","header","eliminarticket","idTT","formData","FormData","append","method","body","then","response","funget","catch","err","console","log","undefined","length","data"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport Contenedor,{Alert} from '../../componentsPrincipales/Alert'\nimport Tabla from '../../componentsPrincipales/TablaL/TablaVentas'\nimport Fetch from '../../componentsPrincipales/Fetch/FetchN.js'\n\nconst TablaVentas=({\n  FullScreen,\n  setFullScreen,\n  setIdTicket,\n  setTotal,\n  setServicios,\n  setProductos,\n  setTipoVenta,\n  generarticket,\n  IdTicket,\n  getdata,\n  Servicios,\n  Productos}\n) => {\n  const [Data,setData]=useState([])\n\n\n  const Columnas=[\n    {field: \"idtickets\",header: \"Ticket\"},\n    {field: \"Tipo\",header: \"Tipo\"},\n    {field: \"total\",header: \"Total\"},\n    {field: \"fecha_creacion\",header: \"Creado\"},\n    {field: \"Estatus\",header: \"Estatus\"},\n    {field: \"fecha_pago\",header: \"Fecha de Pago\"},\n    {field: \"Factura\",header: \"Factura\"},\n  ]\n\n  const eliminarticket=(idTT=false) => {\n    if(idTT) {\n      let formData=new FormData();\n      formData.append(\"idTicket\",idTT)\n      Fetch(`api/tickets/delete/tickets`,{\n        method: \"delete\",\n        body: formData\n      })\n        .then(response => {\n          funget();\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n\n  useEffect(() => {\n    funget();\n  },[]);\n\n  useEffect(() => {\n    if(FullScreen===0) {\n      if(Servicios===undefined&&Productos.length===0) {\n        eliminarticket(IdTicket)\n      } else {\n        funget();\n      }\n    }\n  },[FullScreen]);\n\n  const funget=() => {\n    Fetch('api/tickets/listaventas').then(response => {\n      setData(response.data)\n    }).catch(err => {\n      console.log(err);\n      Alert('warn',err);\n    });\n  }\n\n  return (\n    <React.Fragment>\n      <Contenedor />\n      <Tabla\n        Data={Data}\n        Columnas={Columnas}\n        setIdTicket={setIdTicket}\n        setTotal={setTotal}\n        setServicios={setServicios}\n        setProductos={setProductos}\n        setTipoVenta={setTipoVenta}\n        getdata={getdata}\n      />\n\n    </React.Fragment>\n  )\n\n}\n\n\n\nexport default TablaVentas;"]},"metadata":{},"sourceType":"module"}