{"ast":null,"code":"import _objectSpread from \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/src/moduloNomina/AppNomina.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Button } from 'primereact/button';\nimport { Calendar } from 'primereact/calendar';\nimport { InputText } from 'primereact/inputtext';\nimport Contenedor, { Alert } from '../componentsPrincipales/Alert.jsx';\nimport Fetch from '../componentsPrincipales/Fetch/FetchN.js';\nimport moment from 'moment';\nimport { Checkbox } from 'primereact/checkbox';\nimport { ProgressBar } from 'primereact/progressbar';\n\nvar AppNomina = /*#__PURE__*/function (_Component) {\n  _inherits(AppNomina, _Component);\n\n  var _super = _createSuper(AppNomina);\n\n  _createClass(AppNomina, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }]);\n\n  function AppNomina(props) {\n    var _this;\n\n    _classCallCheck(this, AppNomina);\n\n    _this = _super.call(this, props);\n\n    _this.onAddBono = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var empleadosConBono, obtenerNomina, existeDentroDelArray, indexEmpleado, _obtenerNomina;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                empleadosConBono = [];\n                if (_this.state.empleadosConBono != undefined) empleadosConBono = _toConsumableArray(_this.state.empleadosConBono); //Obtenemos a los empleados con bono\n\n                if (!e.checked) {\n                  _context.next = 10;\n                  break;\n                }\n\n                empleadosConBono.push(e.value.usuarioId); //Agregamos el usuario a empleados con bono\n                // this.setState({mostrarLoading : true});\n\n                _context.next = 6;\n                return _this.obtenerNomina(true, empleadosConBono);\n\n              case 6:\n                obtenerNomina = _context.sent;\n                if (obtenerNomina) Alert('success', 'Bono Modificado');\n                _context.next = 18;\n                break;\n\n              case 10:\n                existeDentroDelArray = function existeDentroDelArray(element) {\n                  return element == e.value.usuarioId;\n                };\n\n                indexEmpleado = empleadosConBono.findIndex(existeDentroDelArray);\n\n                if (!(indexEmpleado != -1)) {\n                  _context.next = 18;\n                  break;\n                }\n\n                empleadosConBono.splice(indexEmpleado, 1); //  this.setState({mostrarLoading : true});\n\n                _context.next = 16;\n                return _this.obtenerNomina(true, empleadosConBono);\n\n              case 16:\n                _obtenerNomina = _context.sent;\n                if (_obtenerNomina) Alert('success', 'Bono Modificado');\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.obtenerNomina = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(vieneDeAgregarBono, empleadosConBono) {\n        var obtuvoLaNomina, usuariosConBonoPeticionArray, request;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                obtuvoLaNomina = false; //Consumir Servicios y rellenar tabla\n\n                _this.setState({\n                  mostrarLoading: true,\n                  bloquearCheckbox: true\n                });\n\n                if (vieneDeAgregarBono) {\n                  usuariosConBonoPeticionArray = []; //Array para armar la peticion\n\n                  empleadosConBono.forEach(function (empleadoConBono) {\n                    var empleado = {\n                      bonosIDs: [2],\n                      usuarioID: empleadoConBono\n                    };\n                    usuariosConBonoPeticionArray.push(empleado);\n                  });\n                  request = {\n                    fecha_inicio: moment(_this.state.fechaInicial, 'DD/MM/YYYY').format('YYYY/MM/DD'),\n                    fecha_fin: moment(_this.state.fechaFinal, 'DD/MM/YYYY').format('YYYY/MM/DD'),\n                    usuarios_bonos: usuariosConBonoPeticionArray\n                  };\n                } else {\n                  console.log(_this.state.fechaInicial);\n                  console.log(_this.state.fechaFinal);\n                  request = {\n                    fecha_inicio: moment(_this.state.fechaInicial, 'DD/MM/YYYY').format('YYYY/MM/DD'),\n                    fecha_fin: moment(_this.state.fechaFinal, 'DD/MM/YYYY').format('YYYY/MM/DD')\n                  };\n                }\n\n                _context2.next = 5;\n                return Fetch('api/nominas', {\n                  method: 'POST',\n                  body: request\n                }).then(function (values) {\n                  if (values.status) {\n                    obtuvoLaNomina = true;\n                    console.log(values.data.usuarios); //Obtenemos los valores de la tabla\n\n                    var datosTabla = values.data.usuarios.map(function (post) {\n                      var valorTabla = {\n                        usuarioId: post.usuarioId,\n                        nombreE: post.nombreE,\n                        dias: post.dias,\n                        total: post.total,\n                        comision20: post.comision20,\n                        comision23: post.comision23,\n                        bonoPuntualidad: post.bonoPuntalidad,\n                        sueldoB: post.sueldoB,\n                        comisionesTotal: post.comisionesTotal,\n                        comisionesSinSueldo: post.comisionesSinSueldo,\n                        totalSemanal: post.totalSemanal\n                      };\n                      post.dias.forEach(function (element) {\n                        valorTabla[element.dia + '_' + moment(new Date(element.fecha)).format('YYYY/MM/DD').toString() + '_totalDesc'] = element.totalConDescuento;\n                        valorTabla[element.dia + '_' + moment(new Date(element.fecha)).format('YYYY/MM/DD').toString() + '_total'] = element.total;\n                      });\n                      return valorTabla;\n                    });\n                    console.log('DatosTabla:');\n                    console.log(datosTabla);\n                    console.log(values.data.usuarios);\n                    var arrayDiasTabla = []; //Obtenemos los dias que se van a mostrar y los agregamos a un array\n\n                    datosTabla.forEach(function (usuario) {\n                      usuario.dias.forEach(function (element) {\n                        if (!arrayDiasTabla.some(function (elm) {\n                          return elm.fecha.toString() === element.fecha;\n                        })) {\n                          var elemento = {\n                            fecha: element.fecha,\n                            //moment(new Date(element.fecha)).format('YYYY/MM/DD'),\n                            dia: element.dia\n                          };\n                          arrayDiasTabla.push(elemento);\n                        }\n                      });\n                    });\n                    console.log('ArrayDiasSinOrdenar:');\n                    console.log(arrayDiasTabla); //Ordenamos los dias\n\n                    var arrayDiasTablaOrdenado = arrayDiasTabla.slice().sort(function (a, b) {\n                      return b.fecha - a.fecha;\n                    });\n                    console.log('ArrayDiasOrdenados:');\n                    console.log(arrayDiasTabla); //Obtenemos los headers \"estaticos\"\n\n                    var headerTabla = _toConsumableArray(_this.state.headerTabla); //Limpiamos headers para borrar los anteriores si es que hacen una nueva consulta\n\n\n                    headerTabla = [// {label: \"UsuarioId\" , value: \"usuarioId\"},\n                    {\n                      label: \"Empleado\",\n                      value: \"nombreE\"\n                    }];\n                    console.log('headersTablaSinAgregar:');\n                    console.log(headerTabla); //Agregamos los headers dinamicos (que son los días)  \n\n                    arrayDiasTablaOrdenado.forEach(function (element) {\n                      //Se agregan 2 valores par aun mismo dia, el total y el total con descuento\n                      var dia = element.dia;\n                      var fecha = moment(new Date(element.fecha)).format('YYYY/MM/DD');\n                      var label = dia + \" - \" + fecha;\n                      var value = dia + '_' + fecha;\n                      var elemento = {\n                        label: label + \" totalDescuento\",\n                        value: value + '_totalDesc' //Estos valores se manejaron así al momento de obtenerlos para identificarlos y que matchen con la tabla\n\n                      };\n                      headerTabla.push(elemento);\n                      var elemento = {\n                        label: label + \" total\",\n                        value: value + '_total'\n                      };\n                      headerTabla.push(elemento);\n                    }); //Pusheamos al array en el orden que queremos que aparezcan los distintos valores\n\n                    headerTabla.push({\n                      label: \"Comisión 20\",\n                      value: \"comision20\"\n                    });\n                    headerTabla.push({\n                      label: \"Comisión 23\",\n                      value: \"comision23\"\n                    });\n                    headerTabla.push({\n                      label: \"Bono de Puntualidad\",\n                      value: \"bonoPuntualidad\"\n                    });\n                    headerTabla.push({\n                      label: \"Sueldo Base\",\n                      value: \"sueldoB\"\n                    });\n                    headerTabla.push({\n                      label: \"Comisiones Total\",\n                      value: \"comisionesTotaltal\"\n                    });\n                    headerTabla.push({\n                      label: \"Comisiones sin Sueldo\",\n                      value: \"comisionesSinSueldo\"\n                    });\n                    headerTabla.push({\n                      label: \"Total Semanal\",\n                      value: \"totalSemanal\"\n                    });\n                    console.log('headersTablaModificado:');\n                    console.log(headerTabla); //Agregamos los valores fijos del final\n\n                    if (arrayDiasTablaOrdenado[0] != undefined) {\n                      var llavesValoresFijos = [{\n                        titulo: 'INGRESO SEMANAL CON DESCUENTO',\n                        //Primero el Ingreso Semanal con Descuento\n                        llaveRequest: 'IngresoSemanalConDesc'\n                      }, {\n                        titulo: 'INGRESO NOMINA',\n                        llaveRequest: 'IngresoNomina'\n                      }, {\n                        titulo: 'INGRESOS APLICADOS AL USUARIO',\n                        llaveRequest: 'DescuentosAplicadosAlUsuario'\n                      }];\n                      llavesValoresFijos.forEach(function (element) {\n                        var valoresFijos = values.data;\n                        var valorTabla = {\n                          nombreE: element.titulo //El titulo lo ponemos como nombre de empleado para que lo pueda imprimir\n\n                        };\n                        valorTabla[arrayDiasTablaOrdenado[0].dia + \"_\" + moment(new Date(arrayDiasTablaOrdenado[0].fecha)).format('YYYY/MM/DD') + \"_totalDesc\"] = valoresFijos[element.llaveRequest];\n                        datosTabla.push(valorTabla);\n                      });\n                    }\n\n                    console.log({\n                      datosTabla\n                    });\n                    var mostrarLoading = false;\n                    var bloquearCheckbox = false;\n\n                    _this.setState({\n                      arrayDiasTablaOrdenado,\n                      datosTabla,\n                      headerTabla,\n                      empleadosConBono,\n                      mostrarLoading,\n                      bloquearCheckbox\n                    }); //Se actualiza el estado\n\n                  } else {\n                    _this.setState({\n                      mostrarLoading: false,\n                      bloquearCheckbox: false\n                    });\n\n                    Alert('Ocurrió un error al obtener la nomina');\n                  }\n                });\n\n              case 5:\n                return _context2.abrupt(\"return\", obtuvoLaNomina);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      fechaFinal: moment().startOf('week').add('days', 3).format('DD/MM/YYYY'),\n      fechaInicial: moment().startOf('week').add('days', 3).subtract(6, \"days\").format('DD/MM/YYYY'),\n      tipoPagoSeleccionado: 0,\n      tipoPagoSeleccionadoLabel: \"Todos los Usuarios\",\n      usuarioSeleccionado: 0,\n      usuarioSeleccionadoLabel: \"Mixto\",\n      listaUsuarios: [{\n        label: \"Todos los Usuarios\",\n        value: 0\n      }, {\n        label: \"Todos los Podologos\",\n        value: 1\n      }, {\n        label: \"Manuel Ortíz\",\n        value: 2\n      }],\n      listaTipoPago: [{\n        label: \"Mixto\",\n        value: 0\n      }, {\n        label: \"Efectivo\",\n        value: 1\n      }, {\n        label: \"Tarjeta\",\n        value: 2\n      }],\n      banderaSeleccion: false,\n      //Bandera para saber sí mostrar la tabla o los parametros de seleccion\n      globalFilter: null,\n      arrayDiasTablaOrdenado: null,\n      headerTabla: [// {label: \"UsuarioId\" , value: \"usuarioId\"},\n      {\n        label: \"Empleado\",\n        value: \"nombreE\"\n      }],\n      datosTabla: null,\n      empleadosConBono: [],\n      mostrarLoading: false,\n      bloquearCheckbox: false\n    };\n    _this.onChangeInitialDate = _this.onChangeInitialDate.bind(_assertThisInitialized(_this));\n    _this.onChangeEndDate = _this.onChangeEndDate.bind(_assertThisInitialized(_this));\n    _this.onUserChange = _this.onUserChange.bind(_assertThisInitialized(_this));\n    _this.onPaymentChange = _this.onPaymentChange.bind(_assertThisInitialized(_this));\n    _this.obtenerNomina = _this.obtenerNomina.bind(_assertThisInitialized(_this));\n    _this.exportCSV = _this.exportCSV.bind(_assertThisInitialized(_this));\n    _this.onAddBono = _this.onAddBono.bind(_assertThisInitialized(_this));\n    _this.actionBodyTemplateAgregarBono = _this.actionBodyTemplateAgregarBono.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AppNomina, [{\n    key: \"onChangeInitialDate\",\n    value: function onChangeInitialDate(e) {\n      var fechaInicial = _objectSpread({}, this.state.fechaInicial); // const dateTimeFormat = new Intl.DateTimeFormat('en-GB', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', hour12 : false })\n      // fechaInicial = dateTimeFormat.format(e.value).toString().replace(',', '').concat(':00');\n\n\n      fechaInicial = moment(e.value).format('DD/MM/YYYY');\n\n      var fechaFinal = _objectSpread({}, this.state.fechaFinal);\n\n      fechaFinal = moment(e.value).add('days', 8).format('DD/MM/YYYY'); //Le sumamos siempre 8 si cambian la fecha inicial\n\n      this.setState({\n        fechaInicial,\n        fechaFinal\n      });\n    }\n  }, {\n    key: \"onChangeEndDate\",\n    value: function onChangeEndDate(e) {\n      var fechaFinal = _objectSpread({}, this.state.fechaFinal); // const dateTimeFormat = new Intl.DateTimeFormat('en-GB', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', hour12 : false })\n      // fechaFinal = dateTimeFormat.format(e.value).toString().replace(',', '').concat(':00');\n\n\n      fechaFinal = moment(e.value).format('DD/MM/YYYY');\n      this.setState({\n        fechaFinal\n      });\n    }\n  }, {\n    key: \"onUserChange\",\n    value: function onUserChange(e) {\n      var usuarioSeleccionado = _objectSpread({}, this.state.usuarioSeleccionado);\n\n      var usuarioSeleccionadoLabel = _objectSpread({}, this.state.usuarioSeleccionadoLabel);\n\n      usuarioSeleccionado = e.value;\n      usuarioSeleccionadoLabel = e.label;\n      this.setState({\n        usuarioSeleccionado\n      });\n    }\n  }, {\n    key: \"onPaymentChange\",\n    value: function onPaymentChange(e) {\n      var tipoPagoSeleccionado = _objectSpread({}, this.state.tipoPagoSeleccionado);\n\n      var tipoPagoSeleccionadoLabel = _objectSpread({}, this.state.tipoPagoSeleccionadoLabel);\n\n      tipoPagoSeleccionado = e.value;\n      tipoPagoSeleccionadoLabel = e.label;\n      this.setState({\n        tipoPagoSeleccionado\n      });\n    }\n  }, {\n    key: \"exportCSV\",\n    value: function exportCSV() {\n      this.dt.exportCSV();\n    }\n  }, {\n    key: \"actionBodyTemplateAgregarBono\",\n    value: function actionBodyTemplateAgregarBono(rowData) {\n      var _this2 = this;\n\n      console.log({\n        rowData\n      });\n\n      if (rowData.usuarioId == undefined || rowData.usuarioId == 0) {\n        //Para identificar si es un usuario si lo es le agrega el checkbox\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-col-12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-col-12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          inputId: \"cb1\",\n          onChange: function onChange(e) {\n            return _this2.onAddBono(e);\n          },\n          value: rowData,\n          checked: rowData.bonoPuntualidad == 0 ? false : true,\n          disabled: this.state.bloquearCheckbox,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"cb1\",\n          className: \"p-checkbox-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"p-m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 15\n        }\n      }, \"Detalle Nomina \"), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"p-m-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 15\n        }\n      }, this.state.fechaInicial + '-' + this.state.fechaFinal), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"p-m-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }\n      }, this.state.usuarioSeleccionadoLabel + '-' + this.state.tipoPagoSeleccionadoLabel), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-input-icon-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(InputText, {\n        type: \"search\",\n        onInput: function onInput(e) {\n          return _this3.setState({\n            globalFilter: e.target.value\n          });\n        },\n        placeholder: \"Buscar...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        label: \"Exportar\",\n        icon: \"pi pi-upload\",\n        className: \"p-button-help\",\n        onClick: this.exportCSV,\n        disabled: this.state.datosTabla ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }\n      })); //Agregamos dinamicamente los headers y llaves para valores\n\n      var headersTabla = this.state.headerTabla.map(function (htabla) {\n        var columna;\n\n        if (htabla.value == 'nombreE') {\n          columna = /*#__PURE__*/React.createElement(Column, {\n            field: htabla.value,\n            header: htabla.label,\n            headerStyle: {\n              width: '250px'\n            },\n            sortable: true,\n            style: {\n              fontWeight: 'bold'\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 23\n            }\n          });\n        } else {\n          columna = /*#__PURE__*/React.createElement(Column, {\n            field: htabla.value,\n            header: htabla.label,\n            headerStyle: {\n              width: '250px'\n            },\n            sortable: true,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 24\n            }\n          });\n        }\n\n        return columna;\n      });\n      var progressBarNomina = this.state.mostrarLoading ? /*#__PURE__*/React.createElement(ProgressBar, {\n        mode: \"indeterminate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 61\n        }\n      }) : null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Contenedor, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 16\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card card-w-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }\n      }, \"Nomina\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-12 p-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 32\n        }\n      }, \"Fecha Inicial:\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-calendar-w-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Calendar, {\n        showIcon: true,\n        dateFormat: \"dd/mm/yy\",\n        value: new Date(moment(this.state.fechaInicial, 'DD/MM/YYYY')),\n        onChange: function onChange(e) {\n          return _this3.onChangeInitialDate(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-12 p-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 32\n        }\n      }, \"Fecha Final:\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-calendar-w-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Calendar, {\n        showIcon: true,\n        dateFormat: \"dd/mm/yy\",\n        value: new Date(moment(this.state.fechaFinal, 'DD/MM/YYYY')),\n        onChange: function onChange(e) {\n          return _this3.onChangeEndDate(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(Button, {\n        label: \"Obtener Nomina\",\n        icon: \"pi pi-tablet\",\n        className: \"p-button-success p-mr-2\",\n        onClick: function onClick() {\n          return _this3.obtenerNomina(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"p-progressbar-indeterminate-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"p-progressbar-value p-progressbar-value-animate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 68\n        }\n      }), progressBarNomina), /*#__PURE__*/React.createElement(DataTable, {\n        ref: function ref(el) {\n          return _this3.dt = el;\n        },\n        value: this.state.datosTabla,\n        scrollable: true,\n        scrollHeight: \"480px\",\n        style: {\n          width: '100%'\n        },\n        globalFilter: this.state.globalFilter,\n        header: header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        body: this.actionBodyTemplateAgregarBono,\n        header: \"Bono\",\n        headerStyle: {\n          width: '70px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 17\n        }\n      }), headersTabla)));\n    }\n  }]);\n\n  return AppNomina;\n}(Component);\n\nexport { AppNomina as default };","map":{"version":3,"sources":["/Users/leonardogutierrezjuarez/Documents/GitHub/Front-Podologo/src/moduloNomina/AppNomina.js"],"names":["React","Component","DataTable","Column","Button","Calendar","InputText","Contenedor","Alert","Fetch","moment","Checkbox","ProgressBar","AppNomina","props","onAddBono","e","empleadosConBono","state","undefined","checked","push","value","usuarioId","obtenerNomina","existeDentroDelArray","element","indexEmpleado","findIndex","splice","vieneDeAgregarBono","obtuvoLaNomina","setState","mostrarLoading","bloquearCheckbox","usuariosConBonoPeticionArray","forEach","empleadoConBono","empleado","bonosIDs","usuarioID","request","fecha_inicio","fechaInicial","format","fecha_fin","fechaFinal","usuarios_bonos","console","log","method","body","then","values","status","data","usuarios","datosTabla","map","post","valorTabla","nombreE","dias","total","comision20","comision23","bonoPuntualidad","bonoPuntalidad","sueldoB","comisionesTotal","comisionesSinSueldo","totalSemanal","dia","Date","fecha","toString","totalConDescuento","arrayDiasTabla","usuario","some","elm","elemento","arrayDiasTablaOrdenado","slice","sort","a","b","headerTabla","label","llavesValoresFijos","titulo","llaveRequest","valoresFijos","startOf","add","subtract","tipoPagoSeleccionado","tipoPagoSeleccionadoLabel","usuarioSeleccionado","usuarioSeleccionadoLabel","listaUsuarios","listaTipoPago","banderaSeleccion","globalFilter","onChangeInitialDate","bind","onChangeEndDate","onUserChange","onPaymentChange","exportCSV","actionBodyTemplateAgregarBono","dt","rowData","header","target","headersTabla","htabla","columna","width","fontWeight","progressBarNomina","el"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {Button} from 'primereact/button';\nimport { Calendar } from 'primereact/calendar';\nimport {InputText} from 'primereact/inputtext';\nimport Contenedor,{Alert} from '../componentsPrincipales/Alert.jsx'\nimport Fetch from '../componentsPrincipales/Fetch/FetchN.js'\nimport moment from 'moment';\nimport {Checkbox} from 'primereact/checkbox';\nimport { ProgressBar } from 'primereact/progressbar';\n\nexport default class AppNomina extends Component {\n\n    componentDidMount(){\n      \n\n    }\n\n    constructor(props){\n        super(props);\n        this.state = {\n            fechaFinal : moment().startOf('week').add('days', 3).format('DD/MM/YYYY'),\n            fechaInicial : moment().startOf('week').add('days', 3).subtract(6, \"days\").format('DD/MM/YYYY'),\n            tipoPagoSeleccionado : 0,\n            tipoPagoSeleccionadoLabel : \"Todos los Usuarios\",\n            usuarioSeleccionado : 0,\n            usuarioSeleccionadoLabel : \"Mixto\",\n            listaUsuarios : [{label :\"Todos los Usuarios\", value : 0}, {label : \"Todos los Podologos\", value : 1}, {label : \"Manuel Ortíz\", value: 2}],\n            listaTipoPago : [{label :\"Mixto\", value : 0}, {label : \"Efectivo\", value : 1}, {label : \"Tarjeta\", value: 2}],\n            banderaSeleccion : false, //Bandera para saber sí mostrar la tabla o los parametros de seleccion\n            globalFilter: null,\n            arrayDiasTablaOrdenado  : null,\n            headerTabla : [\n              // {label: \"UsuarioId\" , value: \"usuarioId\"},\n              {label: \"Empleado\" , value: \"nombreE\"},\n            ],\n            datosTabla : null,\n            empleadosConBono : [],\n            mostrarLoading : false,\n            bloquearCheckbox : false,\n        }\n\n        this.onChangeInitialDate = this.onChangeInitialDate.bind(this);\n        this.onChangeEndDate = this.onChangeEndDate.bind(this);\n        this.onUserChange = this.onUserChange.bind(this);\n        this.onPaymentChange = this.onPaymentChange.bind(this);\n        this.obtenerNomina = this.obtenerNomina.bind(this);\n        this.exportCSV=this.exportCSV.bind(this);\n        this.onAddBono = this.onAddBono.bind(this);\n        this.actionBodyTemplateAgregarBono = this.actionBodyTemplateAgregarBono.bind(this);\n\n\n\n    }\n\n    onChangeInitialDate(e){\n        let fechaInicial={...this.state.fechaInicial};\n        // const dateTimeFormat = new Intl.DateTimeFormat('en-GB', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', hour12 : false })\n        // fechaInicial = dateTimeFormat.format(e.value).toString().replace(',', '').concat(':00');\n        fechaInicial = moment(e.value).format('DD/MM/YYYY');\n\n        let fechaFinal = {...this.state.fechaFinal}\n\n        fechaFinal = moment(e.value).add('days', 8).format('DD/MM/YYYY')//Le sumamos siempre 8 si cambian la fecha inicial\n\n        this.setState({fechaInicial, fechaFinal});\n      }\n\n      onChangeEndDate(e){\n        let fechaFinal={...this.state.fechaFinal};\n        // const dateTimeFormat = new Intl.DateTimeFormat('en-GB', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', hour12 : false })\n        // fechaFinal = dateTimeFormat.format(e.value).toString().replace(',', '').concat(':00');\n        fechaFinal = moment(e.value).format('DD/MM/YYYY');\n        this.setState({fechaFinal});\n      }\n\n      onUserChange(e){\n        let usuarioSeleccionado={...this.state.usuarioSeleccionado};\n        let usuarioSeleccionadoLabel = {...this.state.usuarioSeleccionadoLabel};\n        usuarioSeleccionado = e.value;\n        usuarioSeleccionadoLabel = e.label;\n        this.setState({usuarioSeleccionado});\n      }\n\n      onPaymentChange(e){\n        let tipoPagoSeleccionado={...this.state.tipoPagoSeleccionado};\n        let tipoPagoSeleccionadoLabel = {...this.state.tipoPagoSeleccionadoLabel}\n        tipoPagoSeleccionado = e.value;\n        tipoPagoSeleccionadoLabel = e.label;\n        this.setState({tipoPagoSeleccionado});\n      }\n\n      onAddBono = async(e) => {\n        let empleadosConBono = [];\n        if(this.state.empleadosConBono != undefined) empleadosConBono = [...this.state.empleadosConBono] //Obtenemos a los empleados con bono\n        if(e.checked){\n\n        empleadosConBono.push(e.value.usuarioId); //Agregamos el usuario a empleados con bono\n        \n\n          // this.setState({mostrarLoading : true});\n        const obtenerNomina =  await this.obtenerNomina(true,empleadosConBono);\n         if(obtenerNomina) Alert('success', 'Bono Modificado') \n        \n         \n        }else{\n          const existeDentroDelArray = (element) => element == e.value.usuarioId;\n         const indexEmpleado  = empleadosConBono.findIndex(existeDentroDelArray)\n         if(indexEmpleado != -1){\n           empleadosConBono.splice(indexEmpleado,1);\n          //  this.setState({mostrarLoading : true});\n        const obtenerNomina =  await this.obtenerNomina(true,empleadosConBono);\n        if(obtenerNomina) Alert('success', 'Bono Modificado') \n  \n         }\n        }\n\n      }\n          \n      exportCSV() {\n        this.dt.exportCSV();\n      }\n      \n      obtenerNomina = async(vieneDeAgregarBono, empleadosConBono) =>{\n        let obtuvoLaNomina = false;\n        //Consumir Servicios y rellenar tabla\n        this.setState({mostrarLoading : true, bloquearCheckbox : true});\n       if (vieneDeAgregarBono){\n\n        let usuariosConBonoPeticionArray = []; //Array para armar la peticion\n\n        empleadosConBono.forEach(empleadoConBono => {\n          let empleado = {\n            bonosIDs : [2],\n            usuarioID : empleadoConBono\n          }\n          usuariosConBonoPeticionArray.push(empleado)\n        });\n        request = {\n          fecha_inicio : moment(this.state.fechaInicial, 'DD/MM/YYYY').format('YYYY/MM/DD'),\n          fecha_fin : moment(this.state.fechaFinal, 'DD/MM/YYYY').format('YYYY/MM/DD'),\n          usuarios_bonos : usuariosConBonoPeticionArray\n        }\n       }\n       else\n       {\n        console.log(this.state.fechaInicial);\n        console.log(this.state.fechaFinal);\n\n        var request = {\n          fecha_inicio : moment(this.state.fechaInicial, 'DD/MM/YYYY').format('YYYY/MM/DD'),\n          fecha_fin : moment(this.state.fechaFinal, 'DD/MM/YYYY').format('YYYY/MM/DD')\n        }\n     \n       }\n      await Fetch('api/nominas', {\n          method : 'POST',\n          body : request\n        }).then(values => {\n            if(values.status){\n              obtuvoLaNomina = true;\n              console.log(values.data.usuarios)\n              //Obtenemos los valores de la tabla\n             let datosTabla = values.data.usuarios.map(post => {           \n              let valorTabla = {\n                usuarioId : post.usuarioId,\n                nombreE : post.nombreE,\n                dias : post.dias,\n                total : post.total,\n                comision20 : post.comision20,\n                comision23 : post.comision23,\n                bonoPuntualidad : post.bonoPuntalidad,\n                sueldoB : post.sueldoB,\n                comisionesTotal : post.comisionesTotal,\n                comisionesSinSueldo : post.comisionesSinSueldo,\n                totalSemanal : post.totalSemanal\n                }\n\n                post.dias.forEach(element => {\n                  valorTabla[element.dia + '_' + (moment(new Date(element.fecha)).format('YYYY/MM/DD')).toString() + '_totalDesc'] =  element.totalConDescuento\n                  valorTabla[element.dia + '_' + (moment(new Date(element.fecha)).format('YYYY/MM/DD')).toString()+ '_total'] =  element.total\n                });\n                \n                return valorTabla;\n             })\n             console.log('DatosTabla:')\n             console.log(datosTabla)\n\n             console.log(values.data.usuarios)\n             let arrayDiasTabla = [];\n\n             //Obtenemos los dias que se van a mostrar y los agregamos a un array\n             datosTabla.forEach(usuario => {\n               usuario.dias.forEach(element => {\n                  if(!arrayDiasTabla.some(elm => elm.fecha.toString() === element.fecha)){\n                    let elemento = {\n                      fecha : element.fecha,//moment(new Date(element.fecha)).format('YYYY/MM/DD'),\n                      dia : element.dia,\n                    }\n                    arrayDiasTabla.push(elemento);\n                  }\n               });\n             });\n             \n             console.log('ArrayDiasSinOrdenar:')\n             console.log(arrayDiasTabla)\n             \n             //Ordenamos los dias\n          const arrayDiasTablaOrdenado = arrayDiasTabla.slice().sort((a, b) => b.fecha - a.fecha);\n\n\n          console.log('ArrayDiasOrdenados:')\n          console.log(arrayDiasTabla)\n\n          //Obtenemos los headers \"estaticos\"\n            let headerTabla = [...this.state.headerTabla]\n\n\n             //Limpiamos headers para borrar los anteriores si es que hacen una nueva consulta\n            headerTabla  = [\n              // {label: \"UsuarioId\" , value: \"usuarioId\"},\n              {label: \"Empleado\" , value: \"nombreE\"},\n            ]\n\n            console.log('headersTablaSinAgregar:')\n          console.log(headerTabla)\n\n          //Agregamos los headers dinamicos (que son los días)  \n            arrayDiasTablaOrdenado.forEach(element => { //Se agregan 2 valores par aun mismo dia, el total y el total con descuento\n              let dia = element.dia;\n              let fecha = moment(new Date(element.fecha)).format('YYYY/MM/DD');\n\n              let label = dia + \" - \" + fecha\n              let value = dia + '_' + fecha;\n              var elemento = {  \n                label : label + \" totalDescuento\", \n                value :  value + '_totalDesc'//Estos valores se manejaron así al momento de obtenerlos para identificarlos y que matchen con la tabla\n              };\n\n              headerTabla.push(elemento)\n\n               var elemento = {  \n                label : label + \" total\",\n                value : value + '_total'\n              };\n\n              headerTabla.push(elemento)\n               \n             });\n\n            //Pusheamos al array en el orden que queremos que aparezcan los distintos valores\n             headerTabla.push({label: \"Comisión 20\" , value: \"comision20\"})\n             headerTabla.push({label: \"Comisión 23\" , value: \"comision23\"})\n             headerTabla.push({label: \"Bono de Puntualidad\" , value: \"bonoPuntualidad\"})\n             headerTabla.push({label: \"Sueldo Base\" , value: \"sueldoB\"})\n             headerTabla.push({label: \"Comisiones Total\" , value: \"comisionesTotaltal\"})\n             headerTabla.push({label: \"Comisiones sin Sueldo\" , value: \"comisionesSinSueldo\"})\n             headerTabla.push({label: \"Total Semanal\" , value: \"totalSemanal\"})\n             \n             console.log('headersTablaModificado:')\n             console.log(headerTabla)\n             \n             //Agregamos los valores fijos del final\n             if(arrayDiasTablaOrdenado[0] != undefined){\n              let llavesValoresFijos = [\n                {\n                  titulo : 'INGRESO SEMANAL CON DESCUENTO',//Primero el Ingreso Semanal con Descuento\n                  llaveRequest  : 'IngresoSemanalConDesc'\n                },\n                {\n                  titulo : 'INGRESO NOMINA',\n                  llaveRequest  : 'IngresoNomina'\n                },\n                {\n                  titulo : 'INGRESOS APLICADOS AL USUARIO',\n                  llaveRequest  : 'DescuentosAplicadosAlUsuario'\n                },\n              ]\n\n              llavesValoresFijos.forEach(element => {\n\n                let valoresFijos = values.data;\n                let  valorTabla = {\n                  nombreE : element.titulo, //El titulo lo ponemos como nombre de empleado para que lo pueda imprimir\n                }\n                valorTabla[arrayDiasTablaOrdenado[0].dia + \"_\" + moment(new Date(arrayDiasTablaOrdenado[0].fecha)).format('YYYY/MM/DD')+ \"_totalDesc\"]= valoresFijos[element.llaveRequest];\n                datosTabla.push(valorTabla) \n               });\n            }  \n            \n            console.log({datosTabla});\n\n            let mostrarLoading = false;\n            let bloquearCheckbox = false;\n\n             this.setState({arrayDiasTablaOrdenado, datosTabla, headerTabla, empleadosConBono, mostrarLoading, bloquearCheckbox});//Se actualiza el estado\n           \n\n            }else{\n              this.setState({mostrarLoading : false, bloquearCheckbox : false});\n              Alert('Ocurrió un error al obtener la nomina');\n            }\n        })\n        return obtuvoLaNomina;\n      }\n\n\n      actionBodyTemplateAgregarBono(rowData) {\n        console.log({rowData})\n       if(rowData.usuarioId == undefined || rowData.usuarioId == 0){ //Para identificar si es un usuario si lo es le agrega el checkbox\n\n        return (\n          <>\n            <div className=\"p-col-12\">\n            {/* vacio */}\n            </div>\n          </>\n\n        );\n       }else{\n       \n        return (\n          <>\n            <div className=\"p-col-12\">\n            <Checkbox inputId=\"cb1\" onChange={(e) => this.onAddBono(e)} value={rowData} checked={rowData.bonoPuntualidad == 0? false : true} disabled = {this.state.bloquearCheckbox}></Checkbox>\n            <label htmlFor=\"cb1\" className=\"p-checkbox-label\"></label>\n            </div>\n          </>\n        );\n  \n       }\n      }\n\n\n    render(){\n\n        const header=(\n            <div className=\"table-header\">\n              <h5 className=\"p-m-0\">Detalle Nomina </h5>\n              <h6 className=\"p-m-1\">{this.state.fechaInicial + '-' + this.state.fechaFinal}</h6>\n              <h6 className=\"p-m-1\">{this.state.usuarioSeleccionadoLabel + '-' + this.state.tipoPagoSeleccionadoLabel}</h6>\n              <span className=\"p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Buscar...\" />\n              </span>\n              <Button label=\"Exportar\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} disabled = {this.state.datosTabla ?  false  : true} />\n            </div>\n          );\n\n          //Agregamos dinamicamente los headers y llaves para valores\n          const headersTabla = this.state.headerTabla.map( htabla => {\n            let columna;\n            if(htabla.value == 'nombreE' ){\n            columna = <Column field={htabla.value} header={htabla.label} headerStyle={{ width: '250px' }} sortable={true} style={{fontWeight: 'bold'}} />\n            }else {\n             columna = <Column field={htabla.value} header={htabla.label} headerStyle={{ width: '250px' }} sortable={true} />\n            }\n            return columna;\n          })\n        \n\n        let progressBarNomina = this.state.mostrarLoading ? <ProgressBar mode=\"indeterminate\"/> : null\n\n        return(\n         \n            <div>\n               <Contenedor/>\n                <div className=\"card card-w-title\">\n                    <h1>Nomina</h1>\n                    <div className=\"p-grid\">\n                        <div className=\"p-col-12 p-md-6\">\n                            <p><b>Fecha Inicial:</b></p>\n                            <div className=\"p-calendar-w-btn\">\n                                <Calendar showIcon={true}\n                                dateFormat = 'dd/mm/yy'\n                                value={\n                                new Date(moment(this.state.fechaInicial, 'DD/MM/YYYY'))\n                                } \n                                onChange={(e) => this.onChangeInitialDate(e)}>\n                              </Calendar>\n                            </div>\n                        </div>\n          \n                        <div className=\"p-col-12 p-md-6\">\n                            <p><b>Fecha Final:</b></p>\n                            <div className=\"p-calendar-w-btn\">\n                                <Calendar showIcon={true}\n                                dateFormat = 'dd/mm/yy'\n                                value={\n                                new Date(moment(this.state.fechaFinal, 'DD/MM/YYYY'))\n                                } \n                                onChange={(e) => this.onChangeEndDate(e)}>\n                            </Calendar>\n                            </div>\n                        </div>\n                    </div>\n\n                <Button label=\"Obtener Nomina\" icon=\"pi pi-tablet\" className=\"p-button-success p-mr-2\" onClick={() => this.obtenerNomina(false)} />\n                  \n                </div>\n\n                \n                <div className=\"card\">\n                \n                <div class=\"p-progressbar-indeterminate-container\"><div class=\"p-progressbar-value p-progressbar-value-animate\"></div>\n                {progressBarNomina}\n                </div>\n                \n                <DataTable ref={(el) => this.dt = el} value={this.state.datosTabla} scrollable scrollHeight=\"480px\" style={{ width: '100%' }} globalFilter={this.state.globalFilter}  header={header} >\n                <Column  body={this.actionBodyTemplateAgregarBono} header=\"Bono\" headerStyle={{ width: '70px' }}/>\n                  {headersTabla}\n                  \n                </DataTable>\n                </div>\n\n            </div>\n        );\n\n    }\n}"]},"metadata":{},"sourceType":"module"}