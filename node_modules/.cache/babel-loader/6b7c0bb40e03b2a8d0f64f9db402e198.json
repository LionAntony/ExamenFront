{"ast":null,"code":"import _objectSpread from \"/Users/leonardogutierrezjuarez/Documents/examen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/leonardogutierrezjuarez/Documents/examen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/leonardogutierrezjuarez/Documents/examen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"/Users/leonardogutierrezjuarez/Documents/examen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/leonardogutierrezjuarez/Documents/examen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/leonardogutierrezjuarez/Documents/examen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/leonardogutierrezjuarez/Documents/examen/src/moduloReportes/AppReportes.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Calendar } from 'primereact/calendar';\nimport { InputText } from 'primereact/inputtext';\nimport Contenedor, { Alert } from '../componentsPrincipales/Alert.jsx';\nimport Fetch from '../componentsPrincipales/Fetch/FetchN.js';\nimport axios from 'axios';\nimport moment from 'moment';\n\nvar AppReportes = /*#__PURE__*/function (_Component) {\n  _inherits(AppReportes, _Component);\n\n  var _super = _createSuper(AppReportes);\n\n  _createClass(AppReportes, [{\n    key: \"getStatusCitas\",\n    value: function getStatusCitas() {\n      var _this2 = this;\n\n      Fetch('api/citas/estatus', {\n        method: 'GET'\n      }).then(function (response) {\n        var estatusCitas = response.data; //console.log('STatus CITAS', response.data);\n        //response.data\n\n        _this2.setState({\n          estatusCitas\n        }); //idcat_cita_status\n        //descripcion\n\n      });\n    }\n  }, {\n    key: \"getPodologos\",\n    value: function getPodologos() {\n      var _this3 = this;\n\n      Fetch('api/users/podologos', {\n        method: 'GET'\n      }).then(function (response) {\n        var podologos = response.data.map(function (item) {\n          var name = \"\".concat(item.nombre, \" \").concat(item.apellidoP, \" \").concat(item.apellidoM);\n          var id = item.idcat_usuario;\n          return {\n            id,\n            name\n          };\n        });\n\n        _this3.setState({\n          podologos\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getStatusCitas();\n      this.getPodologos();\n    }\n  }]);\n\n  function AppReportes(props) {\n    var _this;\n\n    _classCallCheck(this, AppReportes);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fechaFinal: moment().day() >= 3 ? moment().startOf('week').add('days', 3).format('DD/MM/YYYY') : moment().format('DD/MM/YYYY'),\n      fechaInicial: moment().startOf('week').add('days', 3).subtract(6, \"days\").format('DD/MM/YYYY'),\n      tipoPagoSeleccionado: 0,\n      tipoPagoSeleccionadoLabel: \"Todos los Usuarios\",\n      usuarioSeleccionado: 0,\n      usuarioSeleccionadoLabel: \"Mixto\",\n      listaUsuarios: [{\n        label: \"Todos los Usuarios\",\n        value: 0\n      }, {\n        label: \"Todos los Podologos\",\n        value: 1\n      }, {\n        label: \"Manuel Ortíz\",\n        value: 2\n      }],\n      listaTipoPago: [{\n        label: \"Mixto\",\n        value: 0\n      }, {\n        label: \"Efectivo\",\n        value: 1\n      }, {\n        label: \"Tarjeta\",\n        value: 2\n      }],\n      banderaSeleccion: false,\n      //Bandera para saber sí mostrar la tabla o los parametros de seleccion\n      globalFilter: null,\n      arrayDiasTablaOrdenado: null,\n      headerTabla: [{\n        label: \"IdConsulta\",\n        value: \"idcita_consulta\"\n      }, {\n        label: \"Fecha\",\n        value: \"fecha\"\n      }, {\n        label: \"Preferencia\",\n        value: \"preferencia\"\n      }, {\n        label: \"Tipo de Cita\",\n        value: \"tipoCita\"\n      }, {\n        label: \"Estatus\",\n        value: \"estatusCita\"\n      }, {\n        label: \"Podologo\",\n        value: \"podologo\"\n      }, {\n        label: \"Cliente\",\n        value: \"cliente\"\n      }, {\n        label: \"Servicios\",\n        value: \"servicios\"\n      }, {\n        label: \"Medicamentos\",\n        value: \"medicamentos\"\n      }],\n      datosTabla: null,\n      estatusCitas: [],\n      statusCita: 0,\n      podologos: [],\n      seleectedPodologos: []\n    };\n    _this.onChangeInitialDate = _this.onChangeInitialDate.bind(_assertThisInitialized(_this));\n    _this.onChangeEndDate = _this.onChangeEndDate.bind(_assertThisInitialized(_this));\n    _this.onUserChange = _this.onUserChange.bind(_assertThisInitialized(_this));\n    _this.obtenerReporte = _this.obtenerReporte.bind(_assertThisInitialized(_this));\n    _this.exportCSV = _this.exportCSV.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AppReportes, [{\n    key: \"onChangeStatusCita\",\n    value: function onChangeStatusCita(e) {\n      var statusCita = e.target.value;\n      this.setState({\n        statusCita\n      });\n    }\n  }, {\n    key: \"onChangePodologos\",\n    value: function onChangePodologos(e) {\n      var seleectedPodologos = e.target.value;\n      this.setState({\n        seleectedPodologos\n      });\n    }\n  }, {\n    key: \"onChangeInitialDate\",\n    value: function onChangeInitialDate(e) {\n      console.log('Entro a cambiar fecha Inicial');\n\n      var fechaInicial = _objectSpread({}, this.state.fechaInicial); // const dateTimeFormat = new Intl.DateTimeFormat('en-GB', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', hour12 : false })\n      // fechaInicial = dateTimeFormat.format(e.value).toString().replace(',', '').concat(':00');\n\n\n      fechaInicial = moment(e.value).format('DD/MM/YYYY');\n\n      var fechaFinal = _objectSpread({}, this.state.fechaFinal);\n\n      fechaFinal = moment(e.value).add('days', 8).format('DD/MM/YYYY'); //Le sumamos siempre 8 si cambian la fecha inicial\n\n      this.setState({\n        fechaInicial,\n        fechaFinal\n      });\n    }\n  }, {\n    key: \"onChangeEndDate\",\n    value: function onChangeEndDate(e) {\n      console.log('Entro a cambiar fecha Final');\n\n      var fechaFinal = _objectSpread({}, this.state.fechaFinal); // const dateTimeFormat = new Intl.DateTimeFormat('en-GB', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', hour12 : false })\n      // fechaFinal = dateTimeFormat.format(e.value).toString().replace(',', '').concat(':00');\n\n\n      fechaFinal = moment(e.value).format('DD/MM/YYYY');\n      this.setState({\n        fechaFinal\n      });\n    }\n  }, {\n    key: \"onUserChange\",\n    value: function onUserChange(e) {\n      var usuarioSeleccionado = _objectSpread({}, this.state.usuarioSeleccionado);\n\n      var usuarioSeleccionadoLabel = _objectSpread({}, this.state.usuarioSeleccionadoLabel);\n\n      usuarioSeleccionado = e.value;\n      usuarioSeleccionadoLabel = e.label;\n      this.setState({\n        usuarioSeleccionado\n      });\n    }\n  }, {\n    key: \"exportCSV\",\n    value: function exportCSV() {\n      this.dt.exportCSV();\n    }\n  }, {\n    key: \"obtenerReporte\",\n    value: function obtenerReporte() {\n      var _this4 = this;\n\n      //Consumir Servicios y rellenar tabla\n      var fechaFin = moment(new Date(this.state.fechaFinal)).format('YYYY-MM-DD');\n      var request = {\n        fecha_inicio: moment(this.state.fechaInicial, 'DD/MM/YYYY').format('YYYY-MM-DD'),\n        fecha_fin: moment(this.state.fechaFinal, 'DD/MM/YYYY').format('YYYY-MM-DD'),\n        status_cita: this.state.statusCita,\n        podologos: this.state.seleectedPodologos\n      };\n      Fetch('api/citas/getFromDate', {\n        method: 'POST',\n        body: request\n      }).then(function (values) {\n        if (values.status) {\n          //Obtenemos los valores de la tabla\n          var datosTabla = values.data.map(function (post) {\n            var valorTabla = {\n              idcita_consulta: post.idcita_consulta,\n              fecha: post.fecha,\n              preferencia: post.preferencia ? 'Sí' : 'No',\n              tipoCita: post.tipoCita,\n              estatusCita: post.estatusCita,\n              podologo: post.podologo.nombre,\n              cliente: post.cliente.nombre,\n              servicios: post.servicios.length == 0 ? \"N/A\" : post.servicios.map(function (serv) {\n                return serv.nombre + \" : \" + serv.cantidad + \" \";\n              }).toString(),\n              medicamentos: post.medicamentos.length == 0 ? \"N/A\" : post.medicamentos.map(function (med) {\n                return med.producto + \" : \" + med.cantidad + \" \";\n              }).toString()\n            };\n            return valorTabla;\n          });\n\n          _this4.setState({\n            datosTabla\n          }); //Se actualiza el estado\n\n        } else {\n          Alert('Ocurrió un error al obtener el reporte');\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"p-m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }\n      }, \"Reportes \"), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"p-m-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      }, this.state.fechaInicial + '-' + this.state.fechaFinal), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-input-icon-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(InputText, {\n        type: \"search\",\n        onInput: function onInput(e) {\n          return _this5.setState({\n            globalFilter: e.target.value\n          });\n        },\n        placeholder: \"Buscar...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        label: \"Exportar\",\n        icon: \"pi pi-upload\",\n        className: \"p-button-help\",\n        onClick: this.exportCSV,\n        disabled: this.state.datosTabla ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      })); //Agregamos dinamicamente los headers y llaves para valores\n\n      var headersTabla = this.state.headerTabla.map(function (htabla, i) {\n        var columna;\n\n        if (htabla.value == 'fecha') {\n          columna = /*#__PURE__*/React.createElement(Column, {\n            field: htabla.value,\n            header: htabla.label,\n            sortable: true,\n            key: i,\n            style: {\n              'fontWeight': 'bold'\n            },\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 23\n            }\n          });\n        } else {\n          columna = /*#__PURE__*/React.createElement(Column, {\n            field: htabla.value,\n            header: htabla.label,\n            sortable: true,\n            key: i,\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 24\n            }\n          });\n        }\n\n        return columna;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card card-w-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }\n      }, \"Reportes\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-12 p-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 32\n        }\n      }, \"Fecha Inicial:\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-calendar-w-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Calendar, {\n        showIcon: true,\n        dateFormat: \"dd/mm/yy\",\n        value: new Date(moment(this.state.fechaInicial, 'DD/MM/YYYY')),\n        onChange: function onChange(e) {\n          return _this5.onChangeInitialDate(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-12 p-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 32\n        }\n      }, \"Fecha Final:\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-calendar-w-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Calendar, {\n        showIcon: true,\n        dateFormat: \"dd/mm/yy\",\n        value: new Date(moment(this.state.fechaFinal, 'DD/MM/YYYY')),\n        onChange: function onChange(e) {\n          return _this5.onChangeEndDate(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-12 p-md-2 p-col-align-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 30\n        }\n      }, \"Estatus de citas:\")), /*#__PURE__*/React.createElement(Dropdown, {\n        optionLabel: \"descripcion\",\n        optionValue: \"idcat_cita_status\",\n        value: this.state.statusCita,\n        options: this.state.estatusCitas,\n        onChange: function onChange(e) {\n          return _this5.onChangeStatusCita(e);\n        },\n        placeholder: \"Filtrar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-12 p-md-6 p-col-align-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 30\n        }\n      }, \"Pod\\xF3logos:\")), /*#__PURE__*/React.createElement(MultiSelect, {\n        optionLabel: \"name\",\n        optionValue: \"id\",\n        value: this.state.seleectedPodologos,\n        options: this.state.podologos,\n        onChange: function onChange(e) {\n          return _this5.onChangePodologos(e);\n        },\n        placeholder: \"Filtrar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Button, {\n        label: \"Obtener Reporte\",\n        icon: \"pi pi-tablet\",\n        className: \"p-button-success p-mr-2\",\n        onClick: this.obtenerReporte,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        ref: function ref(el) {\n          return _this5.dt = el;\n        },\n        value: this.state.datosTabla,\n        globalFilter: this.state.globalFilter,\n        header: header,\n        paginatorPosition: \"both\",\n        selectionMode: \"single\",\n        paginator: true,\n        rows: 10,\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }\n      }, headersTabla)));\n    }\n  }]);\n\n  return AppReportes;\n}(Component);\n\nexport { AppReportes as default };","map":{"version":3,"sources":["/Users/leonardogutierrezjuarez/Documents/examen/src/moduloReportes/AppReportes.js"],"names":["React","Component","DataTable","Column","Button","Dropdown","MultiSelect","Calendar","InputText","Contenedor","Alert","Fetch","axios","moment","AppReportes","method","then","response","estatusCitas","data","setState","podologos","map","item","name","nombre","apellidoP","apellidoM","id","idcat_usuario","getStatusCitas","getPodologos","props","state","fechaFinal","day","startOf","add","format","fechaInicial","subtract","tipoPagoSeleccionado","tipoPagoSeleccionadoLabel","usuarioSeleccionado","usuarioSeleccionadoLabel","listaUsuarios","label","value","listaTipoPago","banderaSeleccion","globalFilter","arrayDiasTablaOrdenado","headerTabla","datosTabla","statusCita","seleectedPodologos","onChangeInitialDate","bind","onChangeEndDate","onUserChange","obtenerReporte","exportCSV","e","target","console","log","dt","fechaFin","Date","request","fecha_inicio","fecha_fin","status_cita","body","values","status","post","valorTabla","idcita_consulta","fecha","preferencia","tipoCita","estatusCita","podologo","cliente","servicios","length","serv","cantidad","toString","medicamentos","med","producto","header","headersTabla","htabla","i","columna","onChangeStatusCita","onChangePodologos","el"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {Button} from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Calendar } from 'primereact/calendar';\nimport {InputText} from 'primereact/inputtext';\nimport Contenedor,{Alert} from '../componentsPrincipales/Alert.jsx'\nimport Fetch from '../componentsPrincipales/Fetch/FetchN.js'\nimport axios from 'axios';\nimport moment from 'moment';\n\nexport default class AppReportes extends Component {\n\n\n  getStatusCitas(){\n    Fetch('api/citas/estatus', {\n      method : 'GET',\n    }).then(response => {\n      let estatusCitas = response.data;\n      //console.log('STatus CITAS', response.data);\n      //response.data\n      this.setState({estatusCitas});\n      //idcat_cita_status\n      //descripcion\n    });\n  }\n\n  getPodologos(){\n    Fetch('api/users/podologos', {\n      method : 'GET',\n    }).then(response => {\n      let podologos = response.data.map( item => {\n        let name = `${item.nombre} ${item.apellidoP} ${item.apellidoM}`\n        let id = item.idcat_usuario;\n        return {id, name};\n      });\n      this.setState({podologos});\n\n    });\n  }\n\n  componentDidMount(){\n    this.getStatusCitas();\n    this.getPodologos();\n  }\n\n    constructor(props){\n        super(props);\n        this.state = {\n            fechaFinal : moment().day() >= 3 ? moment().startOf('week').add('days', 3).format('DD/MM/YYYY') : moment().format('DD/MM/YYYY'),\n            fechaInicial : moment().startOf('week').add('days', 3).subtract(6, \"days\").format('DD/MM/YYYY'),\n            tipoPagoSeleccionado : 0,\n            tipoPagoSeleccionadoLabel : \"Todos los Usuarios\",\n            usuarioSeleccionado : 0,\n            usuarioSeleccionadoLabel : \"Mixto\",\n            listaUsuarios : [{label :\"Todos los Usuarios\", value : 0}, {label : \"Todos los Podologos\", value : 1}, {label : \"Manuel Ortíz\", value: 2}],\n            listaTipoPago : [{label :\"Mixto\", value : 0}, {label : \"Efectivo\", value : 1}, {label : \"Tarjeta\", value: 2}],\n            banderaSeleccion : false, //Bandera para saber sí mostrar la tabla o los parametros de seleccion\n            globalFilter: null,\n            arrayDiasTablaOrdenado  : null,\n            headerTabla : [\n              {label: \"IdConsulta\" , value: \"idcita_consulta\"},\n              {label: \"Fecha\" , value: \"fecha\"},\n              {label: \"Preferencia\" , value: \"preferencia\"},\n              {label: \"Tipo de Cita\" , value: \"tipoCita\"},\n              {label: \"Estatus\" , value: \"estatusCita\"},\n              {label: \"Podologo\" , value: \"podologo\"},\n              {label: \"Cliente\" , value: \"cliente\"},\n              {label: \"Servicios\" , value: \"servicios\"},\n              {label: \"Medicamentos\" , value: \"medicamentos\"},\n            ],\n            datosTabla : null,\n            estatusCitas: [],\n            statusCita:0,\n            podologos: [],\n            seleectedPodologos:[]\n        }\n\n        this.onChangeInitialDate = this.onChangeInitialDate.bind(this);\n        this.onChangeEndDate = this.onChangeEndDate.bind(this);\n        this.onUserChange = this.onUserChange.bind(this);\n        this.obtenerReporte = this.obtenerReporte.bind(this);\n        this.exportCSV=this.exportCSV.bind(this);\n\n\n\n    }\n\n    onChangeStatusCita(e){\n      \n      let statusCita = e.target.value;\n      this.setState({statusCita});\n    }\n\n    onChangePodologos(e){\n      \n      let seleectedPodologos = e.target.value;\n      this.setState({seleectedPodologos});\n    }\n\n    onChangeInitialDate(e){\n        console.log('Entro a cambiar fecha Inicial');\n        let fechaInicial={...this.state.fechaInicial};\n        // const dateTimeFormat = new Intl.DateTimeFormat('en-GB', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', hour12 : false })\n        // fechaInicial = dateTimeFormat.format(e.value).toString().replace(',', '').concat(':00');\n        fechaInicial = moment(e.value).format('DD/MM/YYYY');\n\n        let fechaFinal = {...this.state.fechaFinal}\n\n        fechaFinal = moment(e.value).add('days', 8).format('DD/MM/YYYY')//Le sumamos siempre 8 si cambian la fecha inicial\n\n        this.setState({fechaInicial, fechaFinal});\n      }\n\n      onChangeEndDate(e){\n        console.log('Entro a cambiar fecha Final');\n        let fechaFinal={...this.state.fechaFinal};\n        // const dateTimeFormat = new Intl.DateTimeFormat('en-GB', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', hour12 : false })\n        // fechaFinal = dateTimeFormat.format(e.value).toString().replace(',', '').concat(':00');\n        fechaFinal = moment(e.value).format('DD/MM/YYYY');\n        this.setState({fechaFinal});\n      }\n\n      onUserChange(e){\n        let usuarioSeleccionado={...this.state.usuarioSeleccionado};\n        let usuarioSeleccionadoLabel = {...this.state.usuarioSeleccionadoLabel};\n        usuarioSeleccionado = e.value;\n        usuarioSeleccionadoLabel = e.label;\n        this.setState({usuarioSeleccionado});\n      }\n   \n      exportCSV() {\n        this.dt.exportCSV();\n      }\n      \n      \n      obtenerReporte(){\n        //Consumir Servicios y rellenar tabla\n        \n        let fechaFin = moment(new Date(this.state.fechaFinal)).format('YYYY-MM-DD')\n\n\n        var request = {\n          fecha_inicio : moment(this.state.fechaInicial, 'DD/MM/YYYY').format('YYYY-MM-DD'),\n          fecha_fin : moment(this.state.fechaFinal, 'DD/MM/YYYY').format('YYYY-MM-DD'),\n          status_cita: this.state.statusCita,\n          podologos: this.state.seleectedPodologos,\n        }\n\n        Fetch('api/citas/getFromDate', {\n          method : 'POST',\n          body : request\n        }).then(values => {\n            if(values.status){\n\n              //Obtenemos los valores de la tabla\n             let datosTabla = values.data.map(post => {   \n\n              let valorTabla = {\n                idcita_consulta : post.idcita_consulta,\n                fecha : post.fecha,\n                preferencia : post.preferencia ? 'Sí' : 'No' ,\n                tipoCita : post.tipoCita,\n                estatusCita : post.estatusCita,\n                podologo : post.podologo.nombre,\n                cliente : post.cliente.nombre,\n                servicios : post.servicios.length == 0 ? \"N/A\": (post.servicios.map(serv => \n                  ( \n                     serv.nombre +\" : \" + serv.cantidad + \" \"\n                  )\n                  ).toString()),\n                medicamentos : post.medicamentos.length == 0 ? \"N/A\": (post.medicamentos.map(med => \n                    ( \n                       med.producto +\" : \" + med.cantidad + \" \"\n                    )\n                    ).toString())\n                }\n                return valorTabla;\n             })\n\n             this.setState({datosTabla});//Se actualiza el estado\n           \n\n            }else{\n              Alert('Ocurrió un error al obtener el reporte');\n            }\n        })\n      }\n\n    render(){\n\n        const header=(\n            <div className=\"table-header\">\n              <h5 className=\"p-m-0\">Reportes </h5>\n              <h6 className=\"p-m-1\">{this.state.fechaInicial + '-' + this.state.fechaFinal}</h6>\n              <span className=\"p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Buscar...\" />\n              </span>\n              <Button label=\"Exportar\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} disabled = {this.state.datosTabla ?  false  : true} />\n            </div>\n          );\n\n          //Agregamos dinamicamente los headers y llaves para valores\n          const headersTabla = this.state.headerTabla.map( (htabla, i) => {\n            let columna;\n            if(htabla.value == 'fecha' ){\n            columna = <Column field={htabla.value} header={htabla.label} sortable={true} key={i}  style={{'fontWeight' : 'bold'}} />\n            }else {\n             columna = <Column field={htabla.value} header={htabla.label} sortable={true} key={i}/>\n            }\n            return columna;\n          })\n\n        return(\n            <div>\n                <div className=\"card card-w-title\">\n                    <h1>Reportes</h1>\n                    <div className=\"p-grid\">\n                        <div className=\"p-col-12 p-md-2\">\n                            <p><b>Fecha Inicial:</b></p>\n                            <div className=\"p-calendar-w-btn\">\n                                <Calendar showIcon={true}\n                                dateFormat = 'dd/mm/yy'\n                                value={\n                                new Date(moment(this.state.fechaInicial, 'DD/MM/YYYY'))\n                                } \n                                onChange={(e) => this.onChangeInitialDate(e)}>\n                              </Calendar>\n                            </div>\n                        </div>\n          \n                        <div className=\"p-col-12 p-md-2\">\n                            <p><b>Fecha Final:</b></p>\n                            <div className=\"p-calendar-w-btn\">\n                                <Calendar showIcon={true}\n                                dateFormat = 'dd/mm/yy'\n                                value={\n                                new Date(moment(this.state.fechaFinal, 'DD/MM/YYYY'))\n                                } \n                                onChange={(e) => this.onChangeEndDate(e)}>\n                            </Calendar>\n                            </div>\n                        </div>\n                        <div className=\"p-col-12 p-md-2 p-col-align-start\">\n                          <p><b>Estatus de citas:</b></p>\n                          <Dropdown optionLabel=\"descripcion\" optionValue=\"idcat_cita_status\" value={this.state.statusCita} options={this.state.estatusCitas} onChange={(e)=>this.onChangeStatusCita(e)} placeholder=\"Filtrar\"/>\n                        </div>\n                        <div className=\"p-col-12 p-md-6 p-col-align-start\">\n                          <p><b>Podólogos:</b></p>\n                          <MultiSelect optionLabel=\"name\" optionValue=\"id\" value={this.state.seleectedPodologos} options={this.state.podologos} onChange={(e) => this.onChangePodologos(e)} placeholder=\"Filtrar\"/>\n                          </div>\n                    </div>\n\n                    {/* <p><b>Usuarios:</b></p>\n                    <Dropdown \n                    key = \"DropDownUsuarios\"\n                    placeholder = \"Selecciona un usuario\"\n                    value = {this.state.usuarioSeleccionado}\n                    options = {this.state.listaUsuarios}\n                    onChange = {(e) => this.onUserChange(e)}\n                    dataKey = \"value\"\n                    filter\n                    />\n\n                    <p><b>Tipo Pago:</b></p>\n                    <Dropdown \n                    key = \"DropDownTipoPago\"\n                    placeholder = \"Selecciona un tipo pago\"\n                    value = {this.state.tipoPagoSeleccionado}\n                    options = {this.state.listaTipoPago}\n                    onChange = {(e) => this.onPaymentChange(e)}\n                    dataKey = \"value\"\n                    /> */}\n\n                <Button label=\"Obtener Reporte\" icon=\"pi pi-tablet\" className=\"p-button-success p-mr-2\" onClick={this.obtenerReporte} />\n                </div>\n                <div className=\"card\">\n                <DataTable ref={(el) => this.dt = el} value={this.state.datosTabla}  globalFilter={this.state.globalFilter}  header={header} paginatorPosition=\"both\" selectionMode=\"single\"  paginator={true} rows={10}\n        responsive={true}>\n                {headersTabla}\n        </DataTable>\n                </div>\n\n            </div>\n        );\n\n    }\n}"]},"metadata":{},"sourceType":"module"}