{"ast":null,"code":"import _slicedToArray from \"/Users/leonardogutierrezjuarez/Documents/examenFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/leonardogutierrezjuarez/Documents/examenFront/src/moduloCobros/components/EditPagos.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Fetch from '../../componentsPrincipales/Fetch/FetchN.js';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Alert } from '../../componentsPrincipales/Alert.jsx';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { Panel } from 'primereact/panel';\nimport { Button } from 'primereact/button';\nimport Tickets from '../../moduloTickets/components/tools.js';\nimport { InputText } from \"primereact/inputtext\";\n\nvar AdminTiposPAgo = function AdminTiposPAgo(_ref) {\n  var IdTicket = _ref.IdTicket,\n      Total = _ref.Total,\n      State = _ref.State,\n      getFormaPagos = _ref.getFormaPagos,\n      FormaPagos = _ref.FormaPagos,\n      getdata = _ref.getdata;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      CatTipoPago = _useState2[0],\n      setCatTipoPago = _useState2[1]; // const [FormaPagos,setFormaPagos]=useState([])\n\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      SelectFormasPago = _useState4[0],\n      setSelectFormasPago = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      MontoFP = _useState6[0],\n      setMontoFP = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      OnOff = _useState8[0],\n      setOnOff = _useState8[1];\n\n  useEffect(function () {\n    Fetch('api/formas-de-pago/get').then(function (_ref2) {\n      var response = _ref2.response;\n      setCatTipoPago(response);\n    });\n  }, []);\n\n  var addFormasPago = function addFormasPago() {\n    if (SelectFormasPago !== undefined && MontoFP !== undefined) {\n      if (MontoFP > 0) {\n        Fetch(\"api/tickets/add/forma-pago\", {\n          method: \"POST\",\n          body: {\n            idTicket: parseInt(IdTicket),\n            formasPago: [{\n              type: SelectFormasPago.idcat_tipo_pago,\n              cantidad: MontoFP\n            }]\n          }\n        }).then(function (response) {\n          getFormaPagos();\n          getdata();\n          Alert('success', 'Se arregistrado correctamente');\n        });\n      } else {\n        Alert('error', 'Debes ingresar una cantidad mayor a 0');\n      }\n    } else {\n      Alert('error', 'Debes seleccionar una forma de pago y una cantidad mayor a 0');\n    }\n  };\n\n  var deletFormaPagos = function deletFormaPagos(rowData) {\n    Fetch(\"api/tickets/delete/forma-pago\", {\n      method: \"delete\",\n      body: {\n        idTicket: IdTicket,\n        idPago: rowData.id\n      }\n    }).then(function () {\n      getFormaPagos();\n      getdata();\n      Alert('success', 'Se elimino correctamente');\n    });\n  };\n\n  var actionCitasEnEsperaBodyTemplate = function actionCitasEnEsperaBodyTemplate(rowData) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      icon: \"pi pi-times\",\n      className: \"p-button-rounded p-button-danger p-mr-2\",\n      onClick: function onClick() {\n        return deletFormaPagos(rowData);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"Datos de Pago\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-grid p-fluid dashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, State === 'no pagado' ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-col-12 p-lg-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    value: SelectFormasPago,\n    options: CatTipoPago,\n    onChange: function onChange(e) {\n      console.log(e.target.value);\n      setSelectFormasPago(e.target.value);\n    },\n    optionLabel: \"descripcion\",\n    placeholder: \"Seleccionar Metodo de Pago\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-field p-col-12 p-md-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-inputgroup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-inputgroup-addon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, \"$\"), /*#__PURE__*/React.createElement(InputText, {\n    keyfilter: \"pnum\",\n    value: MontoFP,\n    type: \"number\",\n    onChange: function onChange(e) {\n      return setMontoFP(e.target.value);\n    },\n    max: Total,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    label: \"Agregar Forma de Pago \",\n    className: \"p-button-raised p-button-rounded\",\n    onClick: function onClick() {\n      return addFormasPago();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  })) : '', /*#__PURE__*/React.createElement(DataTable, {\n    value: FormaPagos,\n    paginator: true,\n    paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n    currentPageReportTemplate: \"{first} - {last} de {totalRecords}\",\n    rows: 10,\n    rowsPerPageOptions: [10, 20, 50],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    field: \"nombre\",\n    header: \"Tipo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"monto\",\n    header: \"Monto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    body: actionCitasEnEsperaBodyTemplate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })), State === 'pagado' ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(Tickets, {\n    tipo: \"0\",\n    IdTicket: IdTicket,\n    OnOff: OnOff,\n    setOnOff: setOnOff,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })) : ''))) // <Tabla\n  //   title=\"Metodos de Pagos\"\n  //   columnas={columnas}\n  //   emptyData={emptyData}\n  //   funGet={funget}\n  //   funInsert={funInsert}\n  //   funUpdate={funUpdate}\n  //   funDeleted={funDeleted}\n  //   validSaveUpdate={validSaveUpdate}\n  //   formulario={formulario} />\n  ;\n};\n\nexport default AdminTiposPAgo;","map":{"version":3,"sources":["/Users/leonardogutierrezjuarez/Documents/examenFront/src/moduloCobros/components/EditPagos.js"],"names":["React","useState","useEffect","Fetch","Dropdown","Alert","InputNumber","Column","DataTable","Panel","Button","Tickets","InputText","AdminTiposPAgo","IdTicket","Total","State","getFormaPagos","FormaPagos","getdata","CatTipoPago","setCatTipoPago","SelectFormasPago","setSelectFormasPago","MontoFP","setMontoFP","OnOff","setOnOff","then","response","addFormasPago","undefined","method","body","idTicket","parseInt","formasPago","type","idcat_tipo_pago","cantidad","deletFormaPagos","rowData","idPago","id","actionCitasEnEsperaBodyTemplate","e","console","log","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport Fetch from '../../componentsPrincipales/Fetch/FetchN.js'\nimport {Dropdown} from 'primereact/dropdown';\nimport {Alert} from '../../componentsPrincipales/Alert.jsx'\n\nimport {InputNumber} from 'primereact/inputnumber';\nimport {Column} from 'primereact/column';\nimport {DataTable} from 'primereact/datatable';\nimport {Panel} from 'primereact/panel';\nimport {Button} from 'primereact/button';\nimport Tickets from '../../moduloTickets/components/tools.js'\nimport {InputText} from \"primereact/inputtext\";\n\n\n\n\nconst AdminTiposPAgo=({IdTicket,Total,State,getFormaPagos,FormaPagos,getdata}) => {\n\n  const [CatTipoPago,setCatTipoPago]=useState([])\n  // const [FormaPagos,setFormaPagos]=useState([])\n  const [SelectFormasPago,setSelectFormasPago]=useState()\n  const [MontoFP,setMontoFP]=useState()\n  const [OnOff,setOnOff]=useState(false)\n\n\n\n  useEffect(() => {\n    Fetch('api/formas-de-pago/get')\n      .then(({response}) => {\n        setCatTipoPago(response)\n      })\n\n  },[]);\n\n  const addFormasPago=() => {\n\n    if(SelectFormasPago!==undefined&&MontoFP!==undefined) {\n      if(MontoFP>0) {\n        Fetch(`api/tickets/add/forma-pago`,{\n          method: \"POST\",body: {\n            idTicket: parseInt(IdTicket),\n            formasPago: [{type: SelectFormasPago.idcat_tipo_pago,cantidad: MontoFP}]\n          }\n        }\n        ).then(response => {\n          getFormaPagos();\n          getdata()\n          Alert('success','Se arregistrado correctamente')\n        })\n      }\n      else {\n        Alert('error','Debes ingresar una cantidad mayor a 0')\n      }\n    } else {\n      Alert('error','Debes seleccionar una forma de pago y una cantidad mayor a 0')\n    }\n  }\n\n  const deletFormaPagos=(rowData) => {\n\n    Fetch(`api/tickets/delete/forma-pago`,{\n      method: \"delete\",body: {\n        idTicket: IdTicket,\n        idPago: rowData.id\n      }\n    }).then(() => {\n      getFormaPagos();\n      getdata()\n      Alert('success','Se elimino correctamente')\n    })\n  }\n\n  const actionCitasEnEsperaBodyTemplate=(rowData) => {\n    return (\n      <>\n        <Button\n          icon=\"pi pi-times\"\n          className=\"p-button-rounded p-button-danger p-mr-2\"\n          onClick={() => deletFormaPagos(rowData)} />\n      </>\n    );\n  }\n\n  return (\n    <div className=\"p-col\">\n      <Panel header=\"Datos de Pago\">\n        <div className=\"p-grid p-fluid dashboard\">\n          {State==='no pagado'?\n            <React.Fragment>\n              <div className=\"p-col-12 p-lg-6\">\n                <Dropdown\n                  value={SelectFormasPago}\n                  options={CatTipoPago}\n                  onChange={(e) => {\n                    console.log(e.target.value)\n                    setSelectFormasPago(e.target.value)\n                  }}\n                  optionLabel=\"descripcion\"\n                  placeholder=\"Seleccionar Metodo de Pago\" />\n              </div>\n              <div className=\"p-field p-col-12 p-md-6\">\n                <div className=\"p-inputgroup\">\n                  <span className=\"p-inputgroup-addon\">$</span>\n                  <InputText keyfilter=\"pnum\"\n                    value={MontoFP}\n                    type=\"number\"\n                    onChange={(e) => setMontoFP(e.target.value)}\n                    max={Total}\n                  />\n                </div>\n              </div>\n              <Button\n                label=\"Agregar Forma de Pago \"\n                className=\"p-button-raised p-button-rounded\"\n                onClick={() => addFormasPago()} />\n              <hr></hr>\n            </React.Fragment>:''}\n\n\n          <DataTable\n            value={FormaPagos}\n            paginator\n            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n            currentPageReportTemplate=\"{first} - {last} de {totalRecords}\"\n            rows={10}\n            rowsPerPageOptions={[10,20,50]}>\n            <Column field=\"nombre\" header=\"Tipo\"></Column>\n            <Column field=\"monto\" header=\"Monto\"></Column>\n            <Column body={actionCitasEnEsperaBodyTemplate}></Column>\n          </DataTable>\n\n          {/* <div className=\"p-col-12 p-lg-6\">\n            <div className=\"card summary\">\n              <span className=\"title\">Status</span>\n              <span className=\"detail\"></span>\n              <span className=\"count revenue\">${Total}</span>\n            </div>\n          </div> */}\n          {State==='pagado'? <React.Fragment>\n            <Tickets tipo=\"0\" IdTicket={IdTicket} OnOff={OnOff} setOnOff={setOnOff} />\n          </React.Fragment>:''}\n\n        </div>\n      </Panel>\n    </div>\n\n    // <Tabla\n    //   title=\"Metodos de Pagos\"\n    //   columnas={columnas}\n    //   emptyData={emptyData}\n    //   funGet={funget}\n    //   funInsert={funInsert}\n    //   funUpdate={funUpdate}\n    //   funDeleted={funDeleted}\n    //   validSaveUpdate={validSaveUpdate}\n    //   formulario={formulario} />\n  )\n}\n\nexport default AdminTiposPAgo\n\n\n"]},"metadata":{},"sourceType":"module"}