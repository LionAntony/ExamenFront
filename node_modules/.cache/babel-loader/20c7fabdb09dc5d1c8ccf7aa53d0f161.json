{"ast":null,"code":"import _slicedToArray from \"/Users/leonardogutierrezjuarez/Documents/examen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/leonardogutierrezjuarez/Documents/examen/src/moduloPruebas/index.js\";\n\nimport React, { useState, useEffect, Component } from 'react';\nimport { Button, Card, CardBody, CardHeader } from 'reactstrap';\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Dialog } from 'primereact/dialog';\nimport AppCitas from '../moduloCitas/AppCitas';\nimport Fetch from '../componentsPrincipales/Fetch/FetchN.js';\nimport Tickets from '../moduloTickets/components/tools.js';\n\nvar MyCalendar = function MyCalendar() {\n  BigCalendar.setLocalizer(BigCalendar.momentLocalizer(moment));\n  var currDate = new Date();\n  var currYear = currDate.getFullYear();\n  var currMonth = currDate.getMonth();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Events = _useState2[0],\n      setEvents = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      citaPodologoDialog = _useState4[0],\n      setcitaPodologoDialog = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      OnOff = _useState6[0],\n      setOnOff = _useState6[1];\n\n  var handleSelect = function handleSelect(_ref) {\n    var start = _ref.start,\n        end = _ref.end;\n    setcitaPodologoDialog(true);\n  };\n\n  var crearCitaService = function crearCitaService(cita) {\n    console.log('[CrearCitaService]' + JSON.stringify(cita));\n    var serviciosBack = cita.arrayServicios.map(function (s) {\n      return {\n        servicioID: s.idServicioSeleccionado,\n        costoMomento: s.costoMomento,\n        cantidad: s.cantidad\n      };\n    });\n    Fetch('api/citas', {\n      method: \"POST\",\n      body: {\n        clienteID: cita.clienteId,\n        fecha: cita.fecha,\n        podologoID: cita.podologoId,\n        tipoCitaID: cita.tipoCitaId,\n        estatusCitaID: cita.estatusId,\n        preferencia: cita.preferencia,\n        servicios: serviciosBack\n      }\n    }).then(function (values) {\n      console.log('[CrearCitaService-R]' + JSON.stringify(cita));\n\n      if (values.status) {\n        //Actualizamos citas y dashboard\n        _this.obtenerCitasService();\n      } else {\n        console.log(\"error:\" + values.err);\n      }\n    });\n  };\n\n  var obtenerCitasService = function obtenerCitasService() {\n    Fetch('api/citas').then(function (values) {\n      var citas = values.data.map(function (post) {\n        return {\n          title: \"\".concat(post.podologo.nombre, \" - \").concat(post.cliente.nombre),\n          start: new Date(\"\".concat(post.fecha.split(\" \")[0].split(\"/\")[2], \"/\").concat(post.fecha.split(\" \")[0].split(\"/\")[1], \"/\").concat(post.fecha.split(\" \")[0].split(\"/\")[0], \" \").concat(post.fecha.split(\" \")[1].split(\":\")[0], \":\").concat(post.fecha.split(\" \")[1].split(\":\")[1], \":\").concat(post.fecha.split(\" \")[1].split(\":\")[2])),\n          end: new Date(new Date(\"\".concat(post.fecha.split(\" \")[0].split(\"/\")[2], \"/\").concat(post.fecha.split(\" \")[0].split(\"/\")[1], \"/\").concat(post.fecha.split(\" \")[0].split(\"/\")[0], \" \").concat(post.fecha.split(\" \")[1].split(\":\")[0], \":\").concat(post.fecha.split(\" \")[1].split(\":\")[1], \":\").concat(post.fecha.split(\" \")[1].split(\":\")[2])) + 1000 * 60 * 60 * 24 * 7),\n          color: post.podologo.idcat_usuario\n        };\n      });\n      console.log(citas);\n      setEvents(citas);\n    });\n  };\n\n  useEffect(function () {\n    obtenerCitasService();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animated\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tickets, {\n    tipo: \"1\",\n    idCita: \"54\",\n    OnOff: OnOff,\n    setOnOff: setOnOff,\n    despuesDeImprimir: function despuesDeImprimir() {\n      alert('Yo me ejecuto despues de imprimir');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    visible: citaPodologoDialog,\n    style: {\n      width: '60%'\n    },\n    header: \"Detalles de Cita\",\n    modal: true,\n    className: \"p-fluid\",\n    onHide: function onHide() {\n      return setcitaPodologoDialog(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppCitas, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-calendar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), \"Calendar\", ' '), /*#__PURE__*/React.createElement(CardBody, {\n    style: {\n      height: '40em'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BigCalendar // lassName=\"d-sm-down-none\"\n  , {\n    selectable: true,\n    onSelectEvent: function onSelectEvent(event) {\n      return alert(event.title);\n    },\n    onSelectSlot: handleSelect,\n    eventPropGetter: function eventPropGetter(event, start, end, isSelected) {\n      var backgroundColor = '#' + event.hexColor;\n      console.log(backgroundColor);\n      console.log('backgroundColor');\n      var simbolos, color;\n      simbolos = \"0123456789ABCDEF\";\n      color = \"#\";\n\n      for (var i = 0; i < 6; i++) {\n        color = color + simbolos[Math.floor(Math.random(1) * 16)];\n      }\n\n      var style = {\n        backgroundColor: color,\n        // borderRadius: '1000px',\n        // opacity: 1,\n        // color: 'black',\n        border: '0px',\n        // display: 'block'\n        whitespace: 'normal'\n      };\n      return {\n        style: style\n      };\n    },\n    events: Events,\n    views: ['month', 'week', 'day', 'work_week', 'agenda'],\n    step: 30,\n    defaultDate: new Date(currYear, currMonth, 1),\n    defaultView: \"month\",\n    toolbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["/Users/leonardogutierrezjuarez/Documents/examen/src/moduloPruebas/index.js"],"names":["React","useState","useEffect","Component","Button","Card","CardBody","CardHeader","BigCalendar","moment","Dialog","AppCitas","Fetch","Tickets","MyCalendar","setLocalizer","momentLocalizer","currDate","Date","currYear","getFullYear","currMonth","getMonth","Events","setEvents","citaPodologoDialog","setcitaPodologoDialog","OnOff","setOnOff","handleSelect","start","end","crearCitaService","cita","console","log","JSON","stringify","serviciosBack","arrayServicios","map","s","servicioID","idServicioSeleccionado","costoMomento","cantidad","method","body","clienteID","clienteId","fecha","podologoID","podologoId","tipoCitaID","tipoCitaId","estatusCitaID","estatusId","preferencia","servicios","then","values","status","obtenerCitasService","err","citas","data","post","title","podologo","nombre","cliente","split","color","idcat_usuario","alert","width","height","event","isSelected","backgroundColor","hexColor","simbolos","i","Math","floor","random","style","border","whitespace"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,Component} from 'react';\nimport {Button,Card,CardBody,CardHeader} from 'reactstrap';\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport {Dialog} from 'primereact/dialog';\nimport AppCitas from '../moduloCitas/AppCitas';\nimport Fetch from '../componentsPrincipales/Fetch/FetchN.js'\nimport Tickets from '../moduloTickets/components/tools.js'\n\n\nconst MyCalendar=() => {\n  BigCalendar.setLocalizer(\n    BigCalendar.momentLocalizer(moment),\n  );\n  const currDate=new Date();\n  const currYear=currDate.getFullYear();\n  const currMonth=currDate.getMonth();\n\n  const [Events,setEvents]=useState([])\n  const [citaPodologoDialog,setcitaPodologoDialog]=useState(false)\n\n  const [OnOff,setOnOff]=useState(false)\n\n  let handleSelect=({start,end}) => {\n    setcitaPodologoDialog(true)\n  }\n\n  let crearCitaService=(cita) => {\n    console.log('[CrearCitaService]'+JSON.stringify(cita))\n    const serviciosBack=cita.arrayServicios.map(s =>\n      ({\n        servicioID: s.idServicioSeleccionado,\n        costoMomento: s.costoMomento,\n        cantidad: s.cantidad\n      })\n    )\n\n    Fetch('api/citas',{\n      method: \"POST\",\n      body: {\n        clienteID: cita.clienteId,\n        fecha: cita.fecha,\n        podologoID: cita.podologoId,\n        tipoCitaID: cita.tipoCitaId,\n        estatusCitaID: cita.estatusId,\n        preferencia: cita.preferencia,\n        servicios: serviciosBack\n      }\n    }).then(values => {\n      console.log('[CrearCitaService-R]'+JSON.stringify(cita))\n      if(values.status) {\n        //Actualizamos citas y dashboard\n        this.obtenerCitasService()\n      } else {\n        console.log(\"error:\"+values.err)\n      }\n    });\n  }\n\n\n  let obtenerCitasService=() => {\n\n    Fetch('api/citas')\n      .then(values => {\n        const citas=values.data.map(post => ({\n          title: `${post.podologo.nombre} - ${post.cliente.nombre}`,\n          start: new Date(`${post.fecha.split(\" \")[0].split(\"/\")[2]}/${post.fecha.split(\" \")[0].split(\"/\")[1]}/${post.fecha.split(\" \")[0].split(\"/\")[0]} ${post.fecha.split(\" \")[1].split(\":\")[0]}:${post.fecha.split(\" \")[1].split(\":\")[1]}:${post.fecha.split(\" \")[1].split(\":\")[2]}`),\n          end: new Date(new Date(`${post.fecha.split(\" \")[0].split(\"/\")[2]}/${post.fecha.split(\" \")[0].split(\"/\")[1]}/${post.fecha.split(\" \")[0].split(\"/\")[0]} ${post.fecha.split(\" \")[1].split(\":\")[0]}:${post.fecha.split(\" \")[1].split(\":\")[1]}:${post.fecha.split(\" \")[1].split(\":\")[2]}`)+(1000*60*60*24*7)),\n          color: post.podologo.idcat_usuario\n        }\n        ));\n        console.log(citas)\n        setEvents(citas);\n      });\n  }\n\n\n\n  useEffect(() => {\n    obtenerCitasService()\n\n  },[]);\n\n  return (\n    <div className=\"animated\">\n\n      <Tickets tipo=\"1\" idCita='54' OnOff={OnOff} setOnOff={setOnOff} despuesDeImprimir={() => {alert('Yo me ejecuto despues de imprimir')}} />\n\n      <Dialog\n        visible={citaPodologoDialog}\n        style={{width: '60%'}}\n        header=\"Detalles de Cita\"\n        modal\n        className=\"p-fluid\"\n        onHide={() => setcitaPodologoDialog(false)}\n      >\n        <AppCitas></AppCitas>\n      </Dialog>\n      <Card>\n        <CardHeader>\n          <i className=\"icon-calendar\"></i>Calendar{' '}\n        </CardHeader>\n        <CardBody style={{height: '40em'}}>\n          <BigCalendar\n            // lassName=\"d-sm-down-none\"\n            selectable\n            onSelectEvent={event => alert(event.title)}\n            onSelectSlot={handleSelect}\n            eventPropGetter={function(event,start,end,isSelected) {\n              var backgroundColor='#'+event.hexColor;\n              console.log(backgroundColor);\n              console.log('backgroundColor');\n              var simbolos,color;\n              simbolos=\"0123456789ABCDEF\";\n              color=\"#\";\n\n              for(var i=0;i<6;i++) {\n                color=color+simbolos[Math.floor(Math.random(1)*16)];\n              }\n              var style={\n                backgroundColor: color,\n                // borderRadius: '1000px',\n                // opacity: 1,\n                // color: 'black',\n                border: '0px',\n                // display: 'block'\n                whitespace: 'normal'\n              };\n              return {\n                style: style\n              };\n            }}\n            events={Events}\n            views={['month','week','day','work_week','agenda']}\n            step={30}\n            defaultDate={new Date(currYear,currMonth,1)}\n            defaultView='month'\n            toolbar={true}\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default MyCalendar;\n"]},"metadata":{},"sourceType":"module"}