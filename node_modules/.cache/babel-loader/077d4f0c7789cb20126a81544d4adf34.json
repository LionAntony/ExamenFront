{"ast":null,"code":"import _objectSpread from \"/Users/leonardogutierrezjuarez/Documents/examenFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/leonardogutierrezjuarez/Documents/examenFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/leonardogutierrezjuarez/Documents/examenFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/leonardogutierrezjuarez/Documents/examenFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/leonardogutierrezjuarez/Documents/examenFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/leonardogutierrezjuarez/Documents/examenFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"/Users/leonardogutierrezjuarez/Documents/examenFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/leonardogutierrezjuarez/Documents/examenFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/leonardogutierrezjuarez/Documents/examenFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/leonardogutierrezjuarez/Documents/examenFront/src/moduloCitas/AppCitas.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Button } from 'primereact/button';\nimport { FileUpload } from 'primereact/fileupload';\nimport { Rating } from 'primereact/rating';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Panel } from 'primereact/panel';\nimport DashBoardCitas from './components/DashBoardCitas/DashBoardCitas';\nimport Servicios from './components/Servicios/Servicios';\nimport { Accordion, AccordionTab } from 'primereact/accordion';\nimport { Checkbox } from 'primereact/checkbox';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Fetch from '../componentsPrincipales/Fetch/FetchN.js';\nimport Contenedor, { Alert } from '../componentsPrincipales/Alert.jsx';\nimport Tickets from '../moduloTickets/components/tools.js';\nimport { InputNumber } from 'primereact/inputnumber';\nimport NuevoCliente from './components/NuevoCliente/NuevoCliente.js';\nimport NumPad from 'react-numpad';\n\nvar AppCitas = /*#__PURE__*/function (_Component) {\n  _inherits(AppCitas, _Component);\n\n  var _super = _createSuper(AppCitas);\n\n  _createClass(AppCitas, [{\n    key: \"obtenerCitasService\",\n    value: function obtenerCitasService() {\n      var _this2 = this;\n\n      console.log(['Entro A Obtener las CITAS']);\n      Fetch(this.urlGetCitas).then(function (values) {\n        //TODO: Parsear datos de mercacias, receta, cita.\n        var estatus = _this2.state.estatus;\n        var citas = values.data.map(function (post) {\n          return {\n            id: post.idcita_consulta,\n            fecha: post.fecha,\n            tipo: post.tipoCita,\n            podologoName: post.podologo.nombre,\n            preferencia: post.preferencia,\n            clienteName: post.cliente.nombre,\n            estatus: post.estatusCita,\n            estatusId: post.estatusCita != null ? estatus[estatus.findIndex(function (es) {\n              return es.label == post.estatusCita;\n            })].value : null,\n            servicios: post.servicios.length == 0 ? \"Sin servicios seleccionados\" : post.servicios.map(function (serv) {\n              return serv.nombre + \" : \" + serv.cantidad + \" \";\n            }).toString(),\n            arrayServicios: post.servicios.map(function (serv) {\n              return {\n                servicio: serv.nombre,\n                cantidad: serv.cantidad,\n                idServicioSeleccionado: serv.fk_servicios,\n                costoMomento: serv.costoMomento\n              };\n            }),\n            costo: 0,\n            tipoCitaId: post.tipoCitaID,\n            podologoId: post.podologo.idcat_usuario,\n            clienteId: post.cliente.idcat_clientes,\n            calificacion: 1,\n            //Calificación valor 0 TEMPORAL hasta que veamos en que punto se va a calificar para que funcione el put\n            direccion: post.cliente.direccion ? post.cliente.direccion : ''\n          };\n        });\n        var citasEnEspera = citas.filter(function (c) {\n          return c.estatus == \"En agenda\" || c.estatus == \"En espera\";\n        });\n        var citasEnAtencion = citas.filter(function (c) {\n          return c.estatus == \"En atención\";\n        });\n        var citasAtendidas = citas.filter(function (c) {\n          return c.estatus == \"Atendido\";\n        });\n\n        _this2.setState({\n          citasEnEspera,\n          citasEnAtencion,\n          citasAtendidas\n        });\n\n        _this2.actualizarDashboards();\n      });\n    }\n  }, {\n    key: \"actualizarDashboards\",\n    value: function actualizarDashboards() {\n      var _this3 = this;\n\n      var dateTimeFormat = new Intl.DateTimeFormat('en-GB', {\n        year: 'numeric',\n        day: '2-digit',\n        month: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n      var fechaActual = dateTimeFormat.format(Date.now()).toString().replace(',', '');\n      console.log('Entro a actualizar Dashboards');\n      var citasEnEspera = this.state.citasEnEspera;\n      var citasEnAtencion = this.state.citasEnAtencion;\n      Fetch(this.urlGetPodologosDisponibles, {\n        method: \"GET\",\n        params: {\n          'fecha': fechaActual\n        }\n      }).then(function (values) {\n        var podologosDisponibles = values.data;\n\n        var dashboard = _toConsumableArray(_this3.state.dashboard);\n\n        dashboard[0].count = podologosDisponibles.length;\n        dashboard[1].count = citasEnEspera.length;\n        dashboard[2].count = citasEnAtencion.length;\n\n        _this3.setState({\n          dashboard\n        });\n\n        console.log('Actualizo Dashboards');\n      });\n    }\n  }, {\n    key: \"cancelarCitaService\",\n    value: function cancelarCitaService(cita) {\n      var _this4 = this;\n\n      Fetch(this.urlSetEstatus, {\n        method: \"PATCH\",\n        body: {\n          citaID: cita.id,\n          estatusID: 5 //Estatus cancelado\n\n        }\n      }).then(function (values) {\n        if (values.status) {\n          //Toast de cita actualizada y actualizar dashboards\n          _this4.obtenerCitasService();\n        } else {\n          console.log(\"error:\" + values.err);\n        }\n      });\n    }\n  }, {\n    key: \"tomarCitaService\",\n    value: function tomarCitaService(cita) {\n      var _this5 = this;\n\n      Fetch(this.urlSetEstatus, {\n        method: 'PATCH',\n        body: {\n          citaID: cita.id,\n          estatusID: 3 //Estatus en Atención\n\n        }\n      }).then(function (values) {\n        if (values.status) {\n          //Toast de cita actualizada y actualizar dashboards\n          Alert('success', 'Cita en Atención'); //Obtenemos alergias del cliente\n\n          Fetch(_this5.urlGetClientes, {\n            method: \"GET\",\n            params: {\n              'id': _this5.state.cita.clienteId\n            }\n          }).then(function (values) {\n            if (values.status) {\n              _this5.setState({\n                cita: _this5.emptyCita,\n                //Borra el pin que se puso\n                pinDialog: false,\n                //Deja de Mostrar el Dialog Pin\n                dialogAlergias: true\n              });\n\n              _this5.obtenerCitasService();\n            } else {\n              Alert('error', 'Ocurrió un error al obtener informacion del cliente');\n              console.log(\"error:\" + values.err);\n            }\n          });\n        } else {\n          Alert('error', values.err);\n          console.log(\"error:\" + values.err);\n        }\n      });\n    }\n  }, {\n    key: \"despuesDeImprimirTicket\",\n    value: function despuesDeImprimirTicket() {\n      this.setState({\n        generoTicket: false,\n        citaPodologoDialog: false,\n        onOffTicket: false\n      });\n    }\n  }, {\n    key: \"getDataInicial\",\n    value: function getDataInicial() {\n      var dateTimeFormat = new Intl.DateTimeFormat('en-GB', {\n        year: 'numeric',\n        day: '2-digit',\n        month: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n      var fechaActual = dateTimeFormat.format(Date.now()).toString().replace(',', '');\n      var obtenerCitas = Fetch(this.urlGetCitas);\n      var obtenerClientes = Fetch(this.urlGetClientes);\n      var obtenerEstatus = Fetch(this.urlGetEstatus);\n      var obtenerTipoCita = Fetch(this.urlGetTipoCitas);\n      var obtenerServicios = Fetch(this.urlGetServicios);\n      var obtenerPodologos = Fetch(this.urlGetPodologos);\n      var obtenerPodologosDosponibles = Fetch(this.urlGetPodologosDisponibles, {\n        method: \"GET\",\n        params: {\n          'fecha': fechaActual\n        }\n      });\n      var obtenerMercancia = Fetch(this.urlGetMercancia);\n      var self = this;\n      axios.all([obtenerCitas, obtenerClientes, obtenerEstatus, obtenerTipoCita, obtenerServicios, obtenerPodologos, obtenerPodologosDosponibles, obtenerMercancia]).then(function (values) {\n        console.log(values);\n        var clientes = values[1].data.map(function (post) {\n          return {\n            idC: post.idcat_clientes,\n            label: post.nombre + ' ' + post.apellidoP + ' ' + post.apellidoM,\n            value: post.idcat_clientes\n          };\n        });\n        var estatus = values[2].data.map(function (post) {\n          return {\n            idE: post.idcat_cita_status,\n            label: post.descripcion,\n            value: post.idcat_cita_status\n          };\n        });\n        var tipoCita = values[3].data.map(function (post) {\n          return {\n            idT: post.idcat_tipo_cita,\n            label: post.descripcion,\n            value: post.idcat_tipo_cita\n          };\n        });\n        var servicios = values[4].data.map(function (post) {\n          return {\n            idS: post.idservicios,\n            label: post.nombre,\n            value: post.idservicios,\n            precio: post.precio\n          };\n        });\n        var podologos = values[5].data.map(function (post) {\n          return {\n            idP: post.idcat_usuario,\n            label: post.nombre + ' ' + post.apellidoP + ' ' + post.apellidoM,\n            value: post.idcat_usuario\n          };\n        });\n        var mercancia = values[6].data.map(function (post) {\n          return {\n            idP: post.idmedicamentos,\n            label: post.nombre,\n            value: post.idmedicamentos\n          };\n        });\n        var citas = values[0].data.map(function (post) {\n          return {\n            //TODO: Parsear datos de mercacias, receta, cita.\n            id: post.idcita_consulta,\n            fecha: post.fecha,\n            tipo: post.tipoCita,\n            podologoName: post.podologo.nombre,\n            clienteName: post.cliente.nombre,\n            estatus: post.estatusCita,\n            estatusId: post.estatusCita != null ? estatus[estatus.findIndex(function (es) {\n              return es.label == post.estatusCita;\n            })].value : null,\n            servicios: post.servicios.length == 0 ? \"Sin servicios seleccionados\" : post.servicios.map(function (serv) {\n              return serv.nombre + \" : \" + serv.cantidad + \" \";\n            }).toString(),\n            arrayServicios: post.servicios.map(function (serv) {\n              return {\n                servicio: serv.nombre,\n                cantidad: serv.cantidad,\n                idServicioSeleccionado: serv.fk_servicios,\n                costoMomento: serv.costoMomento\n              };\n            }),\n            tipoCitaId: post.tipoCitaID,\n            podologoId: post.podologo.idcat_usuario,\n            preferencia: post.preferencia,\n            clienteId: post.cliente.idcat_clientes,\n            costo: 0,\n            observaciones: null,\n            calificacion: 1,\n            //Calificación valor 0 TEMPORAL hasta que veamos en que punto se va a calificar\n            receta: null,\n            direccion: post.cliente.direccion ? post.cliente.direccion : ''\n          };\n        });\n        var citasEnEspera = citas.filter(function (c) {\n          return c.estatus == \"En agenda\" || c.estatus == \"En espera\";\n        });\n        var citasEnAtencion = citas.filter(function (c) {\n          return c.estatus == \"En atención\";\n        });\n        var citasAtendidas = citas.filter(function (c) {\n          return c.estatus == \"Atendido\";\n        }); //Actualizamos Dashboard\n\n        var podologosDisponibles = values[6].data;\n\n        var dashboard = _toConsumableArray(self.state.dashboard);\n\n        dashboard[0].count = podologosDisponibles.length;\n        dashboard[1].count = citasEnEspera.length;\n        dashboard[2].count = citasEnAtencion.length;\n        console.log('Citas: ' + citas);\n        console.log(clientes);\n        console.log(estatus);\n        console.log(tipoCita);\n        console.log(servicios);\n        console.log(podologos);\n        self.setState({\n          citasEnEspera,\n          citasEnAtencion,\n          citasAtendidas,\n          clientes,\n          estatus,\n          tipoCita,\n          servicios,\n          podologos,\n          mercancia,\n          dashboard\n        });\n      }).catch(function (errors) {\n        console.log(errors);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this6 = this;\n\n      setInterval(function () {\n        _this6.getDataInicial();\n\n        console.info('update');\n      }, 5000);\n    }\n  }]);\n\n  function AppCitas(props) {\n    var _this;\n\n    _classCallCheck(this, AppCitas);\n\n    _this = _super.call(this, props); //Declaramos todos los estados\n\n    _this.urlGetCitas = 'api/citas';\n    _this.urlAddCitas = 'api/citas';\n    _this.urlGetEstatus = 'api/citas/estatus';\n    _this.urlGetTipoCitas = 'api/citas/tipoCita';\n    _this.urlGetClientes = 'api/clientes';\n    _this.urlGetPodologosDisponibles = 'api/citas/podologosDisponibles';\n    _this.urlGetServicios = 'api/servicios';\n    _this.urlGetPodologos = 'api/citas/podologos';\n    _this.urlSetEstatus = 'api/citas/setEstatus';\n    _this.urlUpdateCita = 'api/citas';\n    _this.urlGetMercancia = 'api/mercancia';\n    _this.urlValidaPin = 'api/citas/valida';\n\n    _this.crearCitaService = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cita) {\n        var serviciosBack;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log('[CrearCitaService]' + JSON.stringify(cita));\n                serviciosBack = cita.arrayServicios.map(function (s) {\n                  return {\n                    servicioID: s.idServicioSeleccionado,\n                    costoMomento: s.costoMomento,\n                    cantidad: s.cantidad\n                  };\n                });\n                Fetch(_this.urlAddCitas, {\n                  method: \"POST\",\n                  body: {\n                    clienteID: cita.clienteId,\n                    fecha: cita.fecha,\n                    podologoID: cita.podologoId,\n                    tipoCitaID: cita.tipoCitaId,\n                    estatusCitaID: cita.estatusId,\n                    preferencia: cita.preferencia,\n                    servicios: serviciosBack\n                  }\n                }).then( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n                    var actualizoDir;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            console.log('[CrearCitaService-R]' + JSON.stringify(cita));\n\n                            if (!values.status) {\n                              _context.next = 11;\n                              break;\n                            }\n\n                            if (!(cita.tipoCitaId == 2)) {\n                              _context.next = 8;\n                              break;\n                            }\n\n                            if (!(cita.direccion != '')) {\n                              _context.next = 8;\n                              break;\n                            }\n\n                            _context.next = 6;\n                            return _this.actualizarDireccionCliente(cita.clienteId, cita.direccion);\n\n                          case 6:\n                            actualizoDir = _context.sent;\n                            //actualizamos direccion de cita\n                            console.log('Actualizo DIR:' + actualizoDir);\n\n                          case 8:\n                            //Actualizamos citas y dashboard\n                            _this.obtenerCitasService();\n\n                            _context.next = 12;\n                            break;\n\n                          case 11:\n                            console.log(\"error:\" + values.err);\n\n                          case 12:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.actualizarCitaService = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(cita, accion) {\n        var serviciosBack;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log('[ActualizarCitaService]' + JSON.stringify(cita));\n                serviciosBack = cita.arrayServicios.map(function (s) {\n                  return {\n                    servicioID: s.idServicioSeleccionado,\n                    costoMomento: s.costoMomento,\n                    cantidad: s.cantidad\n                  };\n                });\n                Fetch(_this.urlUpdateCita, {\n                  method: \"PUT\",\n                  body: {\n                    citaID: cita.id,\n                    observaciones: cita.observaciones,\n                    // costo : cita.costo,\n                    calificacion: cita.calificacion,\n                    receta: cita.receta,\n                    observaciones: cita.observaciones,\n                    fecha: cita.fecha,\n                    podologoID: cita.podologoId,\n                    tipoCitaID: cita.tipoCitaId,\n                    preferencia: cita.preferencia,\n                    // tipoPagoID : null,\n                    // estatusPagoID : cita.estatusPagoId,\n                    estatusCitaID: cita.estatusId,\n                    servicios: serviciosBack\n                  }\n                }).then( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values) {\n                    var actualizoDir, mostrarDialogObaservaciones;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            console.log('[ActualizarCitaService-R]' + JSON.stringify(values));\n\n                            if (!values.status) {\n                              _context3.next = 14;\n                              break;\n                            }\n\n                            Alert('success', 'Cita Actualizada');\n\n                            if (!(cita.direccion != '' || cita.direccion != 'Sin dirección registrada')) {\n                              _context3.next = 8;\n                              break;\n                            }\n\n                            _context3.next = 6;\n                            return _this.actualizarDireccionCliente(cita.clienteId, cita.direccion);\n\n                          case 6:\n                            actualizoDir = _context3.sent;\n                            //actualizamos direccion de cita\n                            console.log('Actualizo DIR:' + actualizoDir);\n\n                          case 8:\n                            _this.setState({\n                              generoTicket: true,\n                              onOffTicket: true\n                            });\n\n                            mostrarDialogObaservaciones = accion == 'actualizarDatosCitaSinObservaciones' ? false : true; //Control para saber si mostrar o no el dialog de observaciones\n\n                            _this.hidePinDialogObservaciones(mostrarDialogObaservaciones); //Mandamos llamar el metodo que limpia el pin y esconde el dialogo para Digitar PIN\n\n\n                            _this.obtenerCitasService(); //Actualizamos citas y dashboard\n\n\n                            _context3.next = 16;\n                            break;\n\n                          case 14:\n                            Alert('error', 'Ocurrió un error al actualizar la cita');\n                            console.log(\"error:\" + values.err);\n\n                          case 16:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x5) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.emptyCita = {\n      id: null,\n      podologoName: '',\n      podologoId: '',\n      clienteName: '',\n      clienteId: 0,\n      fecha: moment(Date.now() + 5 * 60000).format('DD/MM/YYYY HH:mm:ss'),\n      //Se toma la fecha del momento y se le agregan 5 min para cuando creen nuevas citas\n      servicio: '',\n      tipo: 'En clínica',\n      tipoCitaId: 1,\n      estatus: 'En agenda',\n      estatusId: 1,\n      servicios: '',\n      arrayServicios: [],\n      servicioSeleccionado: null,\n      costoServicio: null,\n      cantidadServicioSeleccionado: null,\n      idServicioSeleccionado: null,\n      receta: null,\n      observaciones: null,\n      estatusPagoId: null,\n      pin: null,\n      preferencia: false,\n      //Cuando sea nueva siempre va  a ser falso la preferencia\n      direccion: ''\n    };\n\n    _this.obtenerDireccionCliente = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(clienteId) {\n        var direccion, fetch;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                console.log('[Entro a obtener direccion del cliente]');\n                direccion = '';\n                _context5.next = 4;\n                return Fetch(_this.urlGetClientes + '/' + clienteId, {\n                  method: 'GET'\n                }).then(function (values) {\n                  if (values.status) {\n                    direccion = values.data.direccion;\n                    console.log({\n                      direccion\n                    });\n                  } else {\n                    direccion = 'Ocurrio un error al obtener la direccion del cliente';\n                    Alert('error', direccion);\n                  }\n                });\n\n              case 4:\n                fetch = _context5.sent;\n                return _context5.abrupt(\"return\", direccion);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.actualizarDireccionCliente = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(clienteId, direccion) {\n        var fetch;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                console.log('[Entro a CAMBIAR direccion del cliente]');\n                console.log({\n                  clienteId\n                });\n                console.log({\n                  direccion\n                });\n                _context6.next = 5;\n                return Fetch(_this.urlGetClientes + '/update/address', {\n                  method: 'PATCH',\n                  body: {\n                    id: clienteId,\n                    direccion: direccion\n                  }\n                }).then(function (values) {\n                  console.log('[ActualizarDireccionCliente-R]' + JSON.stringify(values));\n\n                  if (values.response == 'address_customer_updated') {\n                    // Alert('success', 'Actualizó la dirección')\n                    return true;\n                  } else {\n                    Alert('error', 'Ocurrio un error al actualizar la dirección');\n                    return false;\n                  }\n                });\n\n              case 5:\n                fetch = _context6.sent;\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x7, _x8) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.onClienteChange = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(e) {\n        var cita, direccion;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                cita = _objectSpread({}, _this.state.cita);\n                cita['clienteName'] = e.label;\n                cita['clienteId'] = e.value; //Aquí votaría antes de cambiar el estado sí quieren agregar un nuevo cliente. \n\n                _context7.next = 5;\n                return _this.obtenerDireccionCliente(e.value);\n\n              case 5:\n                direccion = _context7.sent;\n                cita['direccion'] = direccion == '' ? 'Sin dirección registrada' : direccion; // El valor sin direccion registrada se valida despues para saber si actualizamos o no direccion, ya que modificamos el state y es lo que comparamos\n\n                console.log('Direccion:' + direccion);\n\n                _this.setState({\n                  cita\n                });\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x9) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    _this.onInputChange = function (e, name) {\n      var val = e.target && e.target.value || '';\n      console.log({\n        val\n      });\n\n      var cita = _objectSpread({}, _this.state.cita);\n\n      cita[\"\".concat(name)] = val;\n\n      _this.setState({\n        cita\n      });\n    };\n\n    _this.onPinPadChange = function (value, name) {\n      var val = value;\n      console.log({\n        val\n      });\n\n      var cita = _objectSpread({}, _this.state.cita);\n\n      cita[\"\".concat(name)] = val;\n\n      _this.setState({\n        cita\n      });\n    };\n\n    _this.state = {\n      citasEnEspera: [],\n      citasEnAtencion: [],\n      citasAtendidas: [],\n      citasDialog: false,\n      citaPodologoDialog: false,\n      deleteCitaDialog: false,\n      deleteCitasDialog: false,\n      cita: _this.emptyCita,\n      selectedCitas: null,\n      submitted: false,\n      editarCita: false,\n      globalFilter: null,\n      dashboard: [{\n        title: \"Podologos\",\n        detail: \"Podologos disponibles\",\n        count: \"0\",\n        clase: \"count visitors\"\n      }, {\n        title: \"Citas Espera\",\n        detail: \"Citas en Espera\",\n        count: \"0\",\n        clase: \"count purchases\"\n      }, {\n        title: \"Citas Atención\",\n        detail: \"Citas en Atención\",\n        count: \"0\",\n        clase: \"count revenue\"\n      }],\n      clientes: [],\n      podologos: [],\n      estatus: [],\n      servicios: [],\n      mercancia: [],\n      pinDialog: false,\n      //Variable para saber si se va a mostrar el Dialog de PIN\n      pinDialogBoton: null,\n      //Variable para saber que va a hacer una vez se confirme el PIN\n      dialogAlergias: false,\n      alergiasCliente: null,\n      generoTicket: false,\n      onOffTicket: false,\n      nuevoClienteDialog: false\n    };\n    _this.leftToolbarTemplate = _this.leftToolbarTemplate.bind(_assertThisInitialized(_this));\n    _this.rightToolbarTemplate = _this.rightToolbarTemplate.bind(_assertThisInitialized(_this));\n    _this.imageBodyTemplate = _this.imageBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.priceBodyTemplate = _this.priceBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.ratingBodyTemplate = _this.ratingBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.statusBodyTemplate = _this.statusBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.actionCitasEnEsperaBodyTemplate = _this.actionCitasEnEsperaBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.actionCitasEnAtencionBodyTemplate = _this.actionCitasEnAtencionBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.serviciosActionBodyTemplate = _this.serviciosActionBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.actionSubirCantidadServicioTemplate = _this.actionSubirCantidadServicioTemplate.bind(_assertThisInitialized(_this));\n    _this.openNew = _this.openNew.bind(_assertThisInitialized(_this));\n    _this.hideDialog = _this.hideDialog.bind(_assertThisInitialized(_this));\n    _this.hideDialogObservaciones = _this.hideDialog.bind(_assertThisInitialized(_this));\n    _this.saveCita = _this.saveCita.bind(_assertThisInitialized(_this));\n    _this.editCita = _this.editCita.bind(_assertThisInitialized(_this));\n    _this.confirmCancelarCita = _this.confirmCancelarCita.bind(_assertThisInitialized(_this));\n    _this.deleteCita = _this.deleteCita.bind(_assertThisInitialized(_this));\n    _this.exportCSV = _this.exportCSV.bind(_assertThisInitialized(_this));\n    _this.confirmDeleteSelected = _this.confirmDeleteSelected.bind(_assertThisInitialized(_this));\n    _this.deleteSelectedCitas = _this.deleteSelectedCitas.bind(_assertThisInitialized(_this));\n    _this.hideDeleteCitaDialog = _this.hideDeleteCitaDialog.bind(_assertThisInitialized(_this));\n    _this.hideDeleteCitasDialog = _this.hideDeleteCitasDialog.bind(_assertThisInitialized(_this));\n    _this.onPodologoChange = _this.onPodologoChange.bind(_assertThisInitialized(_this));\n    _this.onClienteChange = _this.onClienteChange.bind(_assertThisInitialized(_this));\n    _this.onEstatusChange = _this.onEstatusChange.bind(_assertThisInitialized(_this));\n    _this.onChangeDate = _this.onChangeDate.bind(_assertThisInitialized(_this));\n    _this.onChangeServicio = _this.onChangeServicio.bind(_assertThisInitialized(_this));\n    _this.onTipoChange = _this.onTipoChange.bind(_assertThisInitialized(_this));\n    _this.onChangePreferencia = _this.onChangePreferencia.bind(_assertThisInitialized(_this));\n    _this.borrarServicio = _this.borrarServicio.bind(_assertThisInitialized(_this));\n    _this.agregarServicio = _this.agregarServicio.bind(_assertThisInitialized(_this));\n    _this.onCantidadServicioChange = _this.onCantidadServicioChange.bind(_assertThisInitialized(_this));\n    _this.addObservaciones = _this.addObservaciones.bind(_assertThisInitialized(_this));\n    _this.saveObservaciones = _this.saveObservaciones.bind(_assertThisInitialized(_this));\n    _this.onChangeProducto = _this.onChangeProducto.bind(_assertThisInitialized(_this));\n    _this.borrarServicio = _this.borrarServicio.bind(_assertThisInitialized(_this));\n    _this.agregarServicio = _this.agregarServicio.bind(_assertThisInitialized(_this));\n    _this.onCantidadServicioChange = _this.onCantidadServicioChange.bind(_assertThisInitialized(_this));\n    _this.atenderCita = _this.atenderCita.bind(_assertThisInitialized(_this));\n    _this.newEmptyCita = _this.newEmptyCita.bind(_assertThisInitialized(_this)); //Metodo para limpiar EmptyCita cada que creen una nueva.\n\n    _this.showValidacionPINDialogAtender = _this.showValidacionPINDialogAtender.bind(_assertThisInitialized(_this));\n    _this.showValidacionPINDialogObservaciones = _this.showValidacionPINDialogObservaciones.bind(_assertThisInitialized(_this));\n    _this.hidePinDialogAtender = _this.hidePinDialogAtender.bind(_assertThisInitialized(_this));\n    _this.hidePinDialogObservaciones = _this.hidePinDialogObservaciones.bind(_assertThisInitialized(_this));\n    _this.hideAlergiasDialog = _this.hideAlergiasDialog.bind(_assertThisInitialized(_this));\n    _this.despuesDeImprimirTicket = _this.despuesDeImprimirTicket.bind(_assertThisInitialized(_this));\n    _this.obtenerDireccionCliente = _this.obtenerDireccionCliente.bind(_assertThisInitialized(_this));\n    _this.actualizarDireccionCliente = _this.actualizarDireccionCliente.bind(_assertThisInitialized(_this));\n    _this.aumentarCantidadServicio = _this.aumentarCantidadServicio.bind(_assertThisInitialized(_this));\n    _this.openNewCliente = _this.openNewCliente.bind(_assertThisInitialized(_this)); //Services\n\n    _this.obtenerCitasService = _this.obtenerCitasService.bind(_assertThisInitialized(_this));\n    _this.actualizarDashboards = _this.actualizarDashboards.bind(_assertThisInitialized(_this));\n    _this.crearCitaService = _this.crearCitaService.bind(_assertThisInitialized(_this));\n    _this.cancelarCitaService = _this.cancelarCitaService.bind(_assertThisInitialized(_this));\n    _this.actualizarCitaService = _this.actualizarCitaService.bind(_assertThisInitialized(_this));\n    _this.tomarCitaService = _this.tomarCitaService.bind(_assertThisInitialized(_this));\n    _this.validacionesAlCrearCita = _this.validacionesAlCrearCita.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /*******Inicia declaración de Handlers ********/\n\n\n  _createClass(AppCitas, [{\n    key: \"newEmptyCita\",\n    value: function newEmptyCita() {\n      this.emptyCita = {\n        id: null,\n        podologoName: '',\n        podologoId: '',\n        preferencia: false,\n        //Cada que limpiamos y creamos una nueva este campo se va a false\n        clienteName: '',\n        clienteId: 0,\n        fecha: moment(Date.now() + 5 * 60000).format('DD/MM/YYYY HH:mm:ss'),\n        //Se toma la fecha del momento y se le agregan 5 min para cuando creen nuevas citas\n        servicio: '',\n        tipo: 'En clínica',\n        tipoCitaId: 1,\n        estatus: 'En agenda',\n        estatusId: 1,\n        servicios: '',\n        arrayServicios: [],\n        servicioSeleccionado: null,\n        costoServicio: null,\n        cantidadServicioSeleccionado: null,\n        idServicioSeleccionado: null,\n        receta: null,\n        observaciones: null,\n        estatusPagoId: null\n      };\n    }\n  }, {\n    key: \"openNew\",\n    value: function openNew() {\n      var _this7 = this;\n\n      this.newEmptyCita(); //Limpiamos cita\n      //Obtenemos podologos para la hora en la que abren la nueva cita      \n\n      Fetch(this.urlGetPodologosDisponibles, {\n        method: \"GET\",\n        params: {\n          'fecha': this.emptyCita.fecha\n        }\n      }).then(function (values) {\n        var podologos = values.data.map(function (post) {\n          return {\n            idP: post.idcat_usuario,\n            label: post.nombre + ' ' + post.apellidoP + ' ' + post.apellidoM,\n            value: post.idcat_usuario\n          };\n        });\n        var cita = _this7.emptyCita;\n\n        if (podologos.length != 0) {\n          //Seleccionamos al primer podologo disponible\n          cita = _objectSpread({}, _this7.emptyCita);\n          cita.podologoId = podologos[0].idP;\n          cita.podologoName = podologos[0].label;\n        } //Actualizamos estados\n\n\n        _this7.setState({\n          cita: cita,\n          podologos: podologos,\n          submitted: false,\n          editarCita: false,\n          citaDialog: true\n        });\n      });\n    }\n  }, {\n    key: \"openNewCliente\",\n    value: function openNewCliente() {\n      this.setState({\n        nuevoClienteDialog: true\n      });\n    }\n  }, {\n    key: \"despuesDeAgregarNuevoCliente\",\n    value: function despuesDeAgregarNuevoCliente(idCliente, nombreCliente) {\n      console.log('[Entro a DESPUES de Agregar un cliente]');\n      console.log({\n        idCliente\n      });\n      console.log({\n        nombreCliente\n      });\n      var cliente = {\n        idC: idCliente,\n        label: nombreCliente,\n        value: idCliente\n      };\n\n      var clientes = _toConsumableArray(this.state.clientes);\n\n      var cita = _objectSpread({}, this.state.cita);\n\n      cita.clienteId = idCliente;\n      cita.clienteName = nombreCliente;\n      clientes.push(cliente);\n      this.setState({\n        nuevoClienteDialog: false,\n        clientes: clientes,\n        cita\n      });\n    }\n  }, {\n    key: \"hideDialog\",\n    value: function hideDialog() {\n      this.setState({\n        submitted: false,\n        citaDialog: false,\n        citaPodologoDialog: false\n      });\n    }\n  }, {\n    key: \"hideDialogObservaciones\",\n    value: function hideDialogObservaciones() {\n      this.setState({\n        generoTicket: false,\n        citaPodologoDialog: false\n      });\n    }\n  }, {\n    key: \"hidePinDialogAtender\",\n    value: function hidePinDialogAtender() {\n      this.setState({\n        cita: this.emptyCita,\n        pinDialog: false\n      });\n    }\n  }, {\n    key: \"hidePinDialogObservaciones\",\n    value: function hidePinDialogObservaciones(hidePodologoDialog) {\n      if (hidePodologoDialog == 'undefined') {\n        hidePodologoDialog = true;\n      }\n\n      var cita = _objectSpread({}, this.state.cita);\n\n      cita['pin'] = null;\n      this.setState({\n        cita,\n        pinDialog: false,\n        citaPodologoDialog: hidePodologoDialog\n      });\n    }\n  }, {\n    key: \"hideAlergiasDialog\",\n    value: function hideAlergiasDialog() {\n      this.setState({\n        alergiasCliente: null,\n        dialogAlergias: false\n      });\n    }\n  }, {\n    key: \"hideDeleteCitaDialog\",\n    value: function hideDeleteCitaDialog() {\n      this.setState({\n        deleteCitaDialog: false\n      });\n    }\n  }, {\n    key: \"hideDeleteCitasDialog\",\n    value: function hideDeleteCitasDialog() {\n      this.setState({\n        deleteCitasDialog: false\n      });\n    }\n  }, {\n    key: \"saveCita\",\n    value: function saveCita() {\n      var state = {\n        submitted: true\n      };\n\n      if (this.validacionesAlCrearCita()) {\n        //TODO: ver que otros campos son obligatorios\n        var cita = _objectSpread({}, this.state.cita);\n\n        if (this.state.cita.id) {\n          //Actualizamos cita\n          cita.estatusPagoId = 1; //TEMPORALmente se maneja estatusPagoId 1 al actualizar. Este campo se va a quitar.\n\n          this.actualizarCitaService(cita, 'actualizarDatosCitaSinObservaciones'); //mandamos el action de que actualizo datos pero no observaciones. \n        } else {\n          //Creamos cita\n          this.crearCitaService(cita);\n          Alert('success', 'Cita Creada');\n        }\n\n        state = _objectSpread(_objectSpread({}, state), {}, {\n          citaDialog: false,\n          cita: this.emptyCita\n        });\n      } else {}\n\n      this.setState(state);\n    }\n  }, {\n    key: \"validacionesAlCrearCita\",\n    value: function validacionesAlCrearCita() {\n      var booleanoValidador = true;\n\n      if (!this.state.cita.podologoId) {\n        Alert('error', 'Debes seleccionar un podologo');\n        booleanoValidador = false;\n      }\n\n      if (!this.state.cita.clienteId) {\n        Alert('error', 'Debes seleccionar un cliente');\n        booleanoValidador = false;\n      }\n\n      if (this.state.cita.arrayServicios.length == 0) {\n        Alert('error', 'Debes seleccionar almenos un servicio');\n        booleanoValidador = false;\n      }\n\n      return booleanoValidador;\n    }\n  }, {\n    key: \"saveObservaciones\",\n    value: function saveObservaciones() {\n      var _this8 = this;\n\n      console.log(\"[saveObservaciones]\"); //TODO:Validación de campos vaciós\n\n      Fetch(this.urlValidaPin, {\n        method: 'POST',\n        body: {\n          pin: parseInt(this.state.cita.pin),\n          citaID: this.state.cita.id\n        }\n      }).then(function (values) {\n        console.log('[SaveObservacionesCitaPINRespuesta]' + JSON.stringify(values));\n\n        if (values.status) {\n          var state = {\n            submitted: true\n          };\n\n          var citaAtendida = _objectSpread({}, _this8.state.cita);\n\n          citaAtendida.estatusId = 4; //Cambiamos el estatus a atendido\n\n          citaAtendida.estatusPagoId = 1; //Cambiamos el estatus de pago a pendiente OJO: TEMPORAL todas estan en pendientes. \n          //Aquí se debería llamar a la función que genera ticket\n\n          state = _objectSpread(_objectSpread({}, state), {}, {\n            citaPodologoDialog: false,\n            //cerrar dialog\n            cita: _objectSpread({}, citaAtendida),\n            generoTicket: true,\n            onOffTicket: true\n          });\n\n          _this8.actualizarCitaService(citaAtendida); //Consumimos el servicio para agregar observaciones, receta y estatus.   \n\n        } else {\n          Alert('error', values.data);\n        } // console.log(values)\n\n      });\n    }\n  }, {\n    key: \"showValidacionPINDialogAtender\",\n    value: function showValidacionPINDialogAtender(cita) {\n      //Metodo para mostrar el Dialog para el pin al atender una cita\n      var state = {\n        citaPodologoDialog: false,\n        pinDialog: true,\n        cita: cita,\n        pinDialogBoton: 'Atender'\n      };\n      this.setState(state);\n    }\n  }, {\n    key: \"showValidacionPINDialogObservaciones\",\n    value: function showValidacionPINDialogObservaciones() {\n      //Metodo para mostrar el Dialog para el pin al realizar observacioes\n      var state = {\n        citaPodologoDialog: false,\n        pinDialog: true,\n        pinDialogBoton: 'Observaciones'\n      };\n      this.setState(state);\n    }\n  }, {\n    key: \"editCita\",\n    value: function editCita(cita) {\n      var _this9 = this;\n\n      console.log(\"[EditCita]cita:\");\n      console.log(cita); //Obtenemos a los podologos disponibles según la fecha seleccionada al editar la cita\n\n      Fetch(this.urlGetPodologosDisponibles, {\n        method: \"GET\",\n        params: {\n          'fecha': this.state.cita.fecha\n        }\n      }).then(function (values) {\n        console.log(\"[EditCita]podologosRequest:\");\n        console.log(values);\n        var podologos = values.data.map(function (post) {\n          return {\n            idP: post.idcat_usuario,\n            label: post.nombre + ' ' + post.apellidoP + ' ' + post.apellidoM,\n            value: post.idcat_usuario\n          };\n        }); //Agregamos al podologo que ya tienen configurado para que salga en las opciones\n\n        if (podologos.findIndex(function (p) {\n          return p.value == cita.podologoId;\n        }) == -1) {\n          podologos.push({\n            label: cita.podologoName,\n            value: cita.podologoId,\n            idP: cita.podologoId\n          });\n        } //Actualizamos estados\n\n\n        _this9.setState({\n          cita: _objectSpread({}, cita),\n          podologos: _toConsumableArray(podologos),\n          editarCita: true,\n          citaDialog: true\n        });\n      });\n    }\n  }, {\n    key: \"addObservaciones\",\n    value: function addObservaciones(cita) {\n      console.log(\"[AddObservaciones]cita:\");\n      console.log(cita);\n      this.setState({\n        cita: _objectSpread({}, cita),\n        submitted: false,\n        editarCita: false,\n        citaDialog: false,\n        citaPodologoDialog: true\n      });\n    }\n  }, {\n    key: \"confirmCancelarCita\",\n    value: function confirmCancelarCita(cita) {\n      this.setState({\n        cita,\n        deleteCitaDialog: true\n      });\n    }\n  }, {\n    key: \"agregarServicio\",\n    value: function agregarServicio() {\n      var cita = _objectSpread({}, this.state.cita);\n\n      var servicio = {\n        servicio: cita.servicioSeleccionado,\n        cantidad: cita.cantidadServicioSeleccionado,\n        idServicioSeleccionado: cita.idServicioSeleccionado,\n        costoMomento: cita.costoServicio\n      };\n      cita.arrayServicios.push(servicio);\n      cita.servicioSeleccionado = null;\n      cita.idServicioSeleccionado = null;\n      cita.cantidadServicioSeleccionado = null;\n      this.setState({\n        cita: cita\n      });\n    }\n  }, {\n    key: \"aumentarCantidadServicio\",\n    value: function aumentarCantidadServicio(servicio, e) {\n      var cita = _objectSpread({}, this.state.cita);\n\n      var index = cita.arrayServicios.findIndex(function (serv) {\n        return serv.servicio == servicio.servicio;\n      });\n      cita.arrayServicios[index]['cantidad'] = e.value;\n      this.setState({\n        cita\n      });\n    }\n  }, {\n    key: \"borrarServicio\",\n    value: function borrarServicio(servicio) {\n      var cita = _objectSpread({}, this.state.cita);\n\n      var index = cita.arrayServicios.findIndex(function (serv) {\n        return serv.servicio == servicio.servicio;\n      });\n      cita.arrayServicios.splice(index, 1);\n      this.setState({\n        cita\n      });\n    }\n  }, {\n    key: \"agregarProducto\",\n    value: function agregarProducto() {\n      var cita = _objectSpread({}, this.state.cita);\n\n      var producto = {\n        producto: cita.productoSeleccionado,\n        cantidad: cita.cantidadProductoSeleccionado,\n        idProductoSeleccionado: cita.idProductoseleccionado,\n        costoMomento: cita.costoProducto\n      };\n      cita.arrayProductos.push(producto);\n      cita.productoSeleccionado = null;\n      cita.idProductoSeleccionado = null;\n      cita.cantidadProductoSeleccionado = null;\n      this.setState({\n        cita: cita\n      });\n    }\n  }, {\n    key: \"borrarProducto\",\n    value: function borrarProducto(producto) {\n      var cita = _objectSpread({}, this.state.cita);\n\n      var index = cita.arrayProductos.findIndex(function (p) {\n        return p.producto == producto.producto;\n      });\n      cita.arrayProducto.splice(index, 1);\n      this.setState({\n        cita\n      });\n    }\n  }, {\n    key: \"deleteCita\",\n    value: function deleteCita() {\n      this.cancelarCitaService(this.state.cita);\n      this.setState({\n        deleteCitaDialog: false,\n        cita: this.emptyCita\n      }); // this.toast.show({severity: 'success',summary: 'Successful',detail: 'Product Deleted',life: 3000});\n\n      Alert('success', 'Cita Cancelada');\n    }\n  }, {\n    key: \"atenderCita\",\n    value: function atenderCita(cita) {\n      var _this10 = this;\n\n      Fetch(this.urlValidaPin, {\n        method: 'POST',\n        body: {\n          pin: parseInt(this.state.cita.pin),\n          citaID: this.state.cita.id\n        }\n      }).then(function (values) {\n        console.log('[AtenderCitaPINRespuesta]' + JSON.stringify(values));\n\n        if (values.status) {\n          _this10.tomarCitaService(cita);\n        } else {\n          Alert('error', values.data);\n        } // console.log(values)\n\n      });\n    }\n  }, {\n    key: \"findIndexById\",\n    value: function findIndexById(id) {\n      var index = -1;\n\n      for (var i = 0; i < this.state.citas.length; i++) {\n        if (this.state.citas[i].id === id) {\n          index = i;\n          break;\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: \"exportCSV\",\n    value: function exportCSV() {\n      this.dt.exportCSV();\n    }\n  }, {\n    key: \"confirmDeleteSelected\",\n    value: function confirmDeleteSelected() {\n      this.setState({\n        deleteCitasDialog: true\n      });\n    }\n  }, {\n    key: \"deleteSelectedCitas\",\n    value: function deleteSelectedCitas() {\n      var _this11 = this;\n\n      var citas = this.state.citas.filter(function (val) {\n        return !_this11.state.selectedCitas.includes(val);\n      });\n      this.setState({\n        citas,\n        deleteCitasDialog: false,\n        selectedCitas: null\n      });\n      this.toast.show({\n        severity: 'success',\n        summary: 'Successful',\n        detail: 'Citas Deleted',\n        life: 3000\n      });\n    }\n  }, {\n    key: \"onPodologoChange\",\n    value: function onPodologoChange(e) {\n      var cita = _objectSpread({}, this.state.cita);\n\n      cita['podologoName'] = e.label;\n      cita['podologoId'] = e.value;\n      this.setState({\n        cita\n      });\n    }\n  }, {\n    key: \"onEstatusChange\",\n    value: function onEstatusChange(e) {\n      var cita = _objectSpread({}, this.state.cita);\n\n      cita['estatus'] = e.label;\n      cita['estatusId'] = e.value;\n      this.setState({\n        cita\n      });\n    }\n  }, {\n    key: \"onChangeDate\",\n    value: function onChangeDate(e) {\n      var _this12 = this;\n\n      var cita = _objectSpread({}, this.state.cita);\n\n      var dateTimeFormat = new Intl.DateTimeFormat('en-GB', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n      var fechaCita = dateTimeFormat.format(e.value).toString().replace(',', '').concat(':00'); //Obtenemos podologos disponibles para esa cambio de horario\n\n      Fetch(this.urlGetPodologosDisponibles, {\n        method: \"GET\",\n        params: {\n          'fecha': fechaCita\n        }\n      }).then(function (values) {\n        var podologos = values.data.map(function (post) {\n          return {\n            idP: post.idcat_usuario,\n            label: post.nombre + ' ' + post.apellidoP + ' ' + post.apellidoM,\n            value: post.idcat_usuario\n          };\n        }); // //Agregamos al podologo que ya tienen configurado para que salga en las opciones  \n        // if(cita.podologoId){\n        //   podologos.push({label: cita.podologoName, value : cita.podologoId, idP : cita.podologoId});\n        // }\n        //Actualizamos campos y estados\n\n        cita['fecha'] = fechaCita;\n        cita['podologoName'] = null;\n        cita['podologoId'] = null;\n        console.log({\n          podologos\n        });\n\n        _this12.setState({\n          cita,\n          podologos\n        });\n      });\n    }\n  }, {\n    key: \"onChangePreferencia\",\n    value: function onChangePreferencia(e) {\n      console.log('Entro a cambiar preferencia');\n      console.log(e.checked);\n\n      var cita = _objectSpread({}, this.state.cita);\n\n      cita['preferencia'] = e.checked;\n      this.setState({\n        cita\n      });\n    }\n  }, {\n    key: \"onChangeServicio\",\n    value: function onChangeServicio(e) {\n      var cita = _objectSpread({}, this.state.cita);\n\n      var servicioSeleccionado = this.state.servicios.filter(function (s) {\n        return s.idS == e.value;\n      });\n      var servicio = {\n        servicio: servicioSeleccionado[0].label,\n        cantidad: 1,\n        idServicioSeleccionado: e.value,\n        costoMomento: servicioSeleccionado[0].precio\n      };\n      cita.arrayServicios.push(servicio);\n      this.setState({\n        cita\n      });\n    }\n  }, {\n    key: \"onCantidadServicioChange\",\n    value: function onCantidadServicioChange(e) {\n      var cita = _objectSpread({}, this.state.cita);\n\n      cita['cantidadServicioSeleccionado'] = e.value;\n      this.setState({\n        cita\n      });\n    }\n  }, {\n    key: \"onChangeProducto\",\n    value: function onChangeProducto(e) {\n      var cita = _objectSpread({}, this.state.cita);\n\n      var servicioSeleccionado = this.state.servicios.filter(function (s) {\n        return s.idS == e.value;\n      });\n      cita['costoProducto'] = servicioSeleccionado[0].precio;\n      cita['productoSeleccionado'] = servicioSeleccionado[0].label;\n      cita['idProductSeleccionado'] = e.value;\n      cita['cantidadProductoSeleccionado'] = 1;\n      this.setState({\n        cita\n      });\n    }\n  }, {\n    key: \"onCantidadProductoChange\",\n    value: function onCantidadProductoChange(e) {\n      var cita = _objectSpread({}, this.state.cita);\n\n      cita['cantidadProductoSeleccionado'] = e.value;\n      this.setState({\n        cita\n      });\n    }\n  }, {\n    key: \"onTipoChange\",\n    value: function onTipoChange(e) {\n      var cita = _objectSpread({}, this.state.cita);\n\n      cita['tipo'] = e.label;\n      cita['tipoCitaId'] = e.value; // if(e.value == 2 && this.cita.direccion == ''){\n      // }\n\n      this.setState({\n        cita\n      });\n    }\n  }, {\n    key: \"leftToolbarTemplate\",\n\n    /*******Inician declaración de los Templates ********/\n    value: function leftToolbarTemplate() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        label: \"Nueva Cita\",\n        icon: \"pi pi-plus\",\n        className: \"p-button-success p-mr-2\",\n        onClick: this.openNew,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: \"Cancelar\",\n        icon: \"pi pi-trash\",\n        className: \"p-button-danger\",\n        onClick: this.confirmDeleteSelected,\n        disabled: !this.state.selectedCitas || !this.state.selectedCitas.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"rightToolbarTemplate\",\n    value: function rightToolbarTemplate() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FileUpload, {\n        mode: \"basic\",\n        accept: \"image/*\",\n        maxFileSize: 1000000,\n        label: \"Import\",\n        chooseLabel: \"Import\",\n        className: \"p-mr-2 p-d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: \"Export\",\n        icon: \"pi pi-upload\",\n        className: \"p-button-help\",\n        onClick: this.exportCSV,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"imageBodyTemplate\",\n    value: function imageBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: \"showcase/demo/images/product/\".concat(rowData.image),\n        alt: rowData.image,\n        className: \"product-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"priceBodyTemplate\",\n    value: function priceBodyTemplate(rowData) {\n      return this.formatCurrency(rowData.price);\n    }\n  }, {\n    key: \"ratingBodyTemplate\",\n    value: function ratingBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(Rating, {\n        value: rowData.rating,\n        readonly: true,\n        cancel: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"statusBodyTemplate\",\n    value: function statusBodyTemplate(rowData) {\n      var estatus = '';\n\n      switch (rowData.estatus) {\n        case 'Atendido':\n          estatus = 'instock';\n          break;\n\n        case 'Cancelado':\n          estatus = 'outofstock';\n          break;\n\n        case 'En Atencion':\n          estatus = 'lowstock';\n          break;\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"product-badge status-\".concat(estatus),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1157,\n          columnNumber: 12\n        }\n      }, rowData.estatus);\n    }\n  }, {\n    key: \"actionSubirCantidadServicioTemplate\",\n    value: function actionSubirCantidadServicioTemplate(rowData) {\n      var _this13 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputNumber, {\n        value: rowData.cantidad,\n        min: 1,\n        max: 15,\n        mode: \"decimal\",\n        showButtons: true,\n        buttonLayout: \"vertical\",\n        style: {\n          width: '2em'\n        },\n        onChange: function onChange(e) {\n          return _this13.aumentarCantidadServicio(rowData, e);\n        },\n        decrementButtonClassName: \"p-button-secondary\",\n        incrementButtonClassName: \"p-button-secondary\",\n        incrementButtonIcon: \"pi pi-plus\",\n        decrementButtonIcon: \"pi pi-minus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"actionCitasEnEsperaBodyTemplate\",\n    value: function actionCitasEnEsperaBodyTemplate(rowData) {\n      var _this14 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-pencil\",\n        className: \"p-button-rounded p-button-warning p-mr-2\",\n        onClick: function onClick() {\n          return _this14.editCita(rowData);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-times\",\n        className: \"p-button-rounded p-button-danger p-mr-2\",\n        onClick: function onClick() {\n          return _this14.confirmCancelarCita(rowData);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-upload\",\n        className: \"p-button-rounded p-button-success p-mr-2\",\n        onClick: function onClick() {\n          return _this14.showValidacionPINDialogAtender(rowData);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"actionCitasEnAtencionBodyTemplate\",\n    value: function actionCitasEnAtencionBodyTemplate(rowData) {\n      var _this15 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-eye\",\n        className: \"p-button-rounded p-button-info p-mr-2\",\n        onClick: function onClick() {\n          return _this15.addObservaciones(rowData);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-pencil\",\n        className: \"p-button-rounded p-button-warning p-mr-2\",\n        onClick: function onClick() {\n          return _this15.editCita(rowData);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-times\",\n        className: \"p-button-rounded p-button-danger p-mr-2\",\n        onClick: function onClick() {\n          return _this15.confirmCancelarCita(rowData);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"serviciosActionBodyTemplate\",\n    value: function serviciosActionBodyTemplate(rowData) {\n      var _this16 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-trash\",\n        className: \"p-button-rounded p-button-warning\",\n        onClick: function onClick() {\n          return _this16.borrarServicio(rowData);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this17 = this;\n\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1201,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"p-m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-input-icon-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1204,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(InputText, {\n        type: \"search\",\n        onInput: function onInput(e) {\n          return _this17.setState({\n            globalFilter: e.target.value\n          });\n        },\n        placeholder: \"Buscar...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 11\n        }\n      })));\n      var citaDialogFooter = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        label: \"Cancelar\",\n        icon: \"pi pi-times\",\n        className: \"p-button-text\",\n        onClick: this.hideDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1211,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: \"Guardar\",\n        icon: \"pi pi-check\",\n        className: \"p-button-text\",\n        onClick: this.saveCita,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1212,\n          columnNumber: 9\n        }\n      })); ////Geberar Ticket configuraciones\n\n      var citaPodologoDialogFooter;\n\n      if (!this.state.generoTicket) {\n        citaPodologoDialogFooter = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n          label: \"Cancelar\",\n          icon: \"pi pi-times\",\n          className: \"p-button-text\",\n          onClick: this.hideDialogObservaciones,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1223,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          label: \"Guardar Observaciones\",\n          icon: \"pi pi-tablet\",\n          className: \"p-button-text\",\n          onClick: this.showValidacionPINDialogObservaciones,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1224,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        citaPodologoDialogFooter = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n          label: \"Cancelar\",\n          icon: \"pi pi-times\",\n          className: \"p-button-text\",\n          onClick: this.hideDialogObservaciones,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1230,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(Tickets, {\n          tipo: \"1\",\n          IdTicket: this.state.cita.id,\n          OnOffProp: this.state.onOffTicket,\n          despuesDeImprimir: function despuesDeImprimir() {\n            return _this17.despuesDeImprimirTicket();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1231,\n            columnNumber: 11\n          }\n        }));\n      } ////Agregar un nuevo cliente configuraciones\n\n\n      var nuevoClienteDialog = null;\n      console.log('[NuevoClienteDialog]' + this.state.nuevoClienteDialog);\n\n      if (this.state.nuevoClienteDialog) {\n        console.log('Entro a Agregar un nuevo cliente');\n        nuevoClienteDialog = /*#__PURE__*/React.createElement(NuevoCliente, {\n          despuesDeAgregar: function despuesDeAgregar(idCliente, nombreCliente) {\n            return _this17.despuesDeAgregarNuevoCliente(idCliente, nombreCliente);\n          },\n          closeNewClienteDialog: function closeNewClienteDialog() {\n            return _this17.setState({\n              nuevoClienteDialog: false\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1242,\n            columnNumber: 26\n          }\n        });\n      }\n\n      var deleteCitaDialogFooter = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        label: \"No\",\n        icon: \"pi pi-times\",\n        className: \"p-button-text\",\n        onClick: this.hideDeleteCitaDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: \"S\\xED\",\n        icon: \"pi pi-check\",\n        className: \"p-button-text\",\n        onClick: this.deleteCita,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252,\n          columnNumber: 9\n        }\n      }));\n      var deleteCitasDialogFooter = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        label: \"No\",\n        icon: \"pi pi-times\",\n        className: \"p-button-text\",\n        onClick: this.hideDeleteCitasDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: \"S\\xED\",\n        icon: \"pi pi-check\",\n        className: \"p-button-text\",\n        onClick: this.deleteSelectedCitas,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 9\n        }\n      }));\n      var PINCitasDialogFooter = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        label: \"Cancelar\",\n        icon: \"pi pi-times\",\n        className: \"p-button-text\",\n        onClick: this.state.pinDialogBoton == 'Atender' ? function () {\n          return _this17.hidePinDialogAtender();\n        } : function () {\n          return _this17.hidePinDialogObservaciones();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: \"Enviar\",\n        icon: \"pi pi-check\",\n        className: \"p-button-text\",\n        onClick: this.state.pinDialogBoton == 'Atender' ? function () {\n          return _this17.atenderCita(_objectSpread({}, _this17.state.cita));\n        } : function () {\n          return _this17.saveObservaciones();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1266,\n          columnNumber: 9\n        }\n      }));\n      var alergiasDialogFooter = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        label: \"Aceptar\",\n        icon: \"pi pi-check\",\n        className: \"p-button-text\",\n        onClick: this.hideAlergiasDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1273,\n          columnNumber: 9\n        }\n      }));\n      /*******TERMINAN los Templates ********/\n\n      /*******Inicia RETURN ********/\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Contenedor, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1283,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(DashBoardCitas, {\n        dashBoard: this.state.dashboard,\n        openNew: function openNew() {\n          return _this17.openNew();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1285,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Accordion, {\n        multiple: true,\n        activeIndex: [0, 1],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1287,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(AccordionTab, {\n        header: \"Citas en Espera\",\n        id: \"tab1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1288,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.citasEnEspera,\n        globalFilter: this.state.globalFilter,\n        sortField: \"fecha\",\n        sortOrder: -1,\n        header: header,\n        paginatorPosition: \"both\",\n        selectionMode: \"single\",\n        paginator: true,\n        rows: 10,\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1291,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"id\",\n        header: \"id\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1293,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"podologoName\",\n        header: \"Podologo\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"clienteName\",\n        header: \"Cliente\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1295,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"fecha\",\n        header: \"Fecha\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1296,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"servicios\",\n        header: \"servicio\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1297,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"tipo\",\n        header: \"Tipo\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1298,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"estatus\",\n        header: \"Estatus\",\n        body: this.statusBodyTemplate,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1299,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        body: this.actionCitasEnEsperaBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1300,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(AccordionTab, {\n        header: \"Citas en atencion\",\n        id: \"tab2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1303,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.citasEnAtencion,\n        globalFilter: this.state.globalFilter,\n        sortField: \"fecha\",\n        sortOrder: -1,\n        header: header,\n        paginatorPosition: \"both\",\n        selectionMode: \"single\",\n        paginator: true,\n        rows: 10,\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1304,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"id\",\n        header: \"id\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1306,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"podologoName\",\n        header: \"Podologo\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1307,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"clienteName\",\n        header: \"Cliente\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1308,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"fecha\",\n        header: \"Fecha\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1309,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"servicios\",\n        header: \"servicio\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1310,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"tipo\",\n        header: \"Tipo\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"estatus\",\n        header: \"Estatus\",\n        body: this.statusBodyTemplate,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1312,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        body: this.actionCitasEnAtencionBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1313,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(AccordionTab, {\n        header: \"Citas Atendidas\",\n        id: \"tab3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1317,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.citasAtendidas,\n        globalFilter: this.state.globalFilter,\n        sortField: \"fecha\",\n        sortOrder: -1,\n        header: header,\n        paginatorPosition: \"both\",\n        selectionMode: \"single\",\n        paginator: true,\n        rows: 10,\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1318,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"id\",\n        header: \"id\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1320,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"podologoName\",\n        header: \"Podologo\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1321,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"clienteName\",\n        header: \"Cliente\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1322,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"fecha\",\n        header: \"Fecha\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1323,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"servicios\",\n        header: \"servicio\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"tipo\",\n        header: \"Tipo\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1325,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"estatus\",\n        header: \"Estatus\",\n        body: this.statusBodyTemplate,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1326,\n          columnNumber: 15\n        }\n      })))), nuevoClienteDialog, \" \", /*#__PURE__*/React.createElement(Dialog, {\n        visible: this.state.citaDialog,\n        style: {\n          width: '450px'\n        },\n        header: \"Detalles de Cita\",\n        modal: true,\n        className: \"p-fluid\",\n        footer: citaDialogFooter,\n        onHide: this.hideDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 14\n        }\n      }, \"Cliente:\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1345,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation p-dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        key: \"DropDownCliente\",\n        placeholder: \"Selecciona un cliente\",\n        value: this.state.cita.clienteId,\n        options: this.state.clientes,\n        onChange: function onChange(e) {\n          return _this17.onClienteChange(e);\n        },\n        dataKey: \"value\",\n        filter: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1348,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1358,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-plus\",\n        className: \"p-button-success p-mr-2\",\n        onClick: this.openNewCliente,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1359,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1364,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1364,\n          columnNumber: 14\n        }\n      }, \"Fecha:\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-calendar-w-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Calendar, {\n        showIcon: true,\n        showTime: true,\n        dateFormat: \"dd/mm/yy\",\n        hourFormat: \"24\",\n        value: new Date(moment(this.state.cita.fecha, 'DD/MM/YYYY HH:mm:ss')),\n        onChange: function onChange(e) {\n          return _this17.onChangeDate(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1366,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1377,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1377,\n          columnNumber: 14\n        }\n      }, \"P\\xF3dologo:\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation p-dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1378,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        key: \"DropDownPodologo\",\n        placeholder: \"Selecciona un Podologo\",\n        value: this.state.cita.podologoId,\n        options: this.state.podologos,\n        onChange: function onChange(e) {\n          return _this17.onPodologoChange(e);\n        },\n        dataKey: \"value\",\n        filter: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1379,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field-checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1389,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        inputId: \"prefCheckBox\",\n        onChange: function onChange(e) {\n          return _this17.onChangePreferencia(e);\n        },\n        checked: this.state.cita.preferencia,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1390,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"prefCheckBox\",\n        className: \"p-checkbox-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1391,\n          columnNumber: 13\n        }\n      }, \"Preferencia\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: window.rolUsuario == 1 ? {\n          display: 'block'\n        } : window.rolUsuario == 4 ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1394,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1395,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1395,\n          columnNumber: 14\n        }\n      }, \"Servicios:\")), /*#__PURE__*/React.createElement(Servicios, {\n        cita: this.state.cita,\n        servicios: this.state.servicios,\n        onChangeServicio: function onChangeServicio(e) {\n          return _this17.onChangeServicio(e);\n        },\n        onCantidadServicioChange: function onCantidadServicioChange(e) {\n          return _this17.onCantidadServicioChange(e);\n        },\n        agregarServicio: function agregarServicio() {\n          return _this17.agregarServicio();\n        },\n        globalFilter: this.globalFilter,\n        serviciosActionBodyTemplate: this.serviciosActionBodyTemplate,\n        actionSubirCantidadServicioTemplate: this.actionSubirCantidadServicioTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1396,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1411,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1411,\n          columnNumber: 14\n        }\n      }, \"Tipo Cita:\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1412,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-formgrid p-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1413,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field-radiobutton p-col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1414,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(RadioButton, {\n        id: \"Tipo1\",\n        name: \"tipo\",\n        value: 1,\n        onChange: this.onTipoChange,\n        checked: this.state.cita.tipo === 'En clínica',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1415,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"Tipo1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1416,\n          columnNumber: 17\n        }\n      }, \"Local\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field-radiobutton p-col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1418,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(RadioButton, {\n        id: \"Tipo2\",\n        name: \"tipo\",\n        value: 2,\n        onChange: this.onTipoChange,\n        checked: this.state.cita.tipo === 'A comicilio',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1419,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"Tipo2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1420,\n          columnNumber: 17\n        }\n      }, \"A Domicilio\")))), /*#__PURE__*/React.createElement(\"div\", {\n        style: this.state.cita.tipoCitaId == 2 ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1427,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1427,\n          columnNumber: 16\n        }\n      }, \"Direcci\\xF3n:\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1428,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"direccion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1429,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(InputTextarea, {\n        value: this.state.cita.direccion,\n        onChange: function onChange(e) {\n          return _this17.onInputChange(e, 'direccion');\n        },\n        rows: 5,\n        cols: 30,\n        autoResize: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1437,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1437,\n          columnNumber: 14\n        }\n      }, \"Estatus:\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation p-dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1438,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.cita.estatusId,\n        options: this.state.estatus,\n        onChange: function onChange(e) {\n          return _this17.onEstatusChange(e);\n        },\n        filter: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1439,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Dialog, {\n        visible: this.state.citaPodologoDialog,\n        style: {\n          width: '450px'\n        },\n        header: \"Detalles de Cita\",\n        modal: true,\n        className: \"p-fluid\",\n        footer: citaPodologoDialogFooter,\n        onHide: this.hideDialogObservaciones,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1448,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1457,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1457,\n          columnNumber: 14\n        }\n      }, \"Cliente:\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1458,\n          columnNumber: 11\n        }\n      }, this.state.cita.clienteName), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1459,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1459,\n          columnNumber: 14\n        }\n      }, \"Fecha:\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1460,\n          columnNumber: 11\n        }\n      }, this.state.cita.fecha), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1461,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1461,\n          columnNumber: 14\n        }\n      }, \"P\\xF3dologo:\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 11\n        }\n      }, this.state.cita.podologoName), /*#__PURE__*/React.createElement(Panel, {\n        header: \"Observaciones Pod\\xF3logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"observaciones\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 15\n        }\n      }, \"Observaciones\"), /*#__PURE__*/React.createElement(InputTextarea, {\n        value: this.state.cita.observaciones,\n        onChange: function onChange(e) {\n          return _this17.onInputChange(e, 'observaciones');\n        },\n        rows: 5,\n        cols: 30,\n        autoResize: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1466,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1472,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"receta\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1473,\n          columnNumber: 15\n        }\n      }, \"Receta\"), /*#__PURE__*/React.createElement(InputTextarea, {\n        value: this.state.cita.receta,\n        onChange: function onChange(e) {\n          return _this17.onInputChange(e, 'receta');\n        },\n        rows: 5,\n        cols: 30,\n        autoResize: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        style: window.rolUsuario == 1 ? {\n          display: 'block'\n        } : window.rolUsuario == 4 ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1481,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1482,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1482,\n          columnNumber: 14\n        }\n      }, \"Servicios:\")), /*#__PURE__*/React.createElement(Servicios, {\n        cita: this.state.cita,\n        servicios: this.state.servicios,\n        onChangeServicio: function onChangeServicio(e) {\n          return _this17.onChangeServicio(e);\n        },\n        onCantidadServicioChange: function onCantidadServicioChange(e) {\n          return _this17.onCantidadServicioChange(e);\n        },\n        agregarServicio: function agregarServicio() {\n          return _this17.agregarServicio();\n        },\n        globalFilter: this.globalFilter,\n        serviciosActionBodyTemplate: this.serviciosActionBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1483,\n          columnNumber: 11\n        }\n      }))), /*#__PURE__*/React.createElement(Dialog, {\n        visible: this.state.pinDialog,\n        style: {\n          width: '450px'\n        },\n        header: \"Validaci\\xF3n\",\n        modal: true,\n        className: \"p-fluid\",\n        footer: PINCitasDialogFooter,\n        onHide: this.state.pinDialogBoton == 'Observaciones' ? function () {\n          return _this17.hidePinDialogObservaciones;\n        } : function () {\n          return _this17.hidePinDialogAtender;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1507,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1515,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1515,\n          columnNumber: 14\n        }\n      }, \"P\\xF3dologo:\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1516,\n          columnNumber: 11\n        }\n      }, this.state.cita.podologoName), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1518,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"pin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1519,\n          columnNumber: 13\n        }\n      }, \"Digita tu PIN\"), /*#__PURE__*/React.createElement(NumPad.Number, {\n        onChange: function onChange(value) {\n          return _this17.onPinPadChange(value, 'pin');\n        },\n        placeholder: '',\n        negative: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1520,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InputText, {\n        type: \"password\",\n        keyfilter: \"int\",\n        value: this.state.cita['pin'] == null ? \"\" : this.state.cita['pin'] // onChange={(e) => this.onInputChange(e,'pin')}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1525,\n          columnNumber: 13\n        }\n      })))), /*#__PURE__*/React.createElement(Dialog, {\n        visible: this.state.dialogAlergias // Aquí podríamos hacer duble check y verificar si es null las alergia y no mostrarlo\n        ,\n        style: {\n          width: '450px'\n        },\n        header: \"Informaci\\xF3n del Cliente\",\n        modal: true,\n        className: \"p-fluid\",\n        footer: alergiasDialogFooter,\n        onHide: function onHide() {\n          return _this17.hideAlergiasDialog();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1539,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1547,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1547,\n          columnNumber: 14\n        }\n      }, \"Alergias:\")), /*#__PURE__*/React.createElement(InputTextarea, {\n        value: this.state.alergiasCliente == null ? \"Sin alergias registradas\" : this.state.alergiasCliente,\n        rows: 5,\n        cols: 30,\n        autoResize: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1548,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Dialog, {\n        visible: this.state.deleteCitaDialog,\n        style: {\n          width: '450px'\n        },\n        header: \"Confirm\",\n        modal: true,\n        footer: deleteCitaDialogFooter,\n        onHide: this.hideDeleteCitaDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1556,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"confirmation-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1557,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-exclamation-triangle p-mr-3\",\n        style: {\n          fontSize: '2rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1558,\n          columnNumber: 13\n        }\n      }), this.state.cita && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 31\n        }\n      }, \"\\xBFEst\\xE1s seguro que quieres cancelar esta cita: \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 83\n        }\n      }, this.state.cita.podologoName), \" - \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 123\n        }\n      }, this.state.cita.clienteName), \" - \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 162\n        }\n      }, this.state.cita.fecha), \"?\"))), /*#__PURE__*/React.createElement(Dialog, {\n        visible: this.state.deleteCitasDialog,\n        style: {\n          width: '450px'\n        },\n        header: \"Confirm\",\n        modal: true,\n        footer: deleteCitasDialogFooter,\n        onHide: this.hideDeleteCitasDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1563,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"confirmation-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1564,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-exclamation-triangle p-mr-3\",\n        style: {\n          fontSize: '2rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1565,\n          columnNumber: 13\n        }\n      }), this.state.cita && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1566,\n          columnNumber: 31\n        }\n      }, \"\\xBFEstas seguro que quieres cancelar estas citas?\"))));\n    }\n  }]);\n\n  return AppCitas;\n}(Component);\n\nexport { AppCitas as default };","map":{"version":3,"sources":["/Users/leonardogutierrezjuarez/Documents/examenFront/src/moduloCitas/AppCitas.js"],"names":["React","Component","DataTable","Column","Button","FileUpload","Rating","InputTextarea","RadioButton","Dialog","InputText","Calendar","Dropdown","Panel","DashBoardCitas","Servicios","Accordion","AccordionTab","Checkbox","axios","moment","Fetch","Contenedor","Alert","Tickets","InputNumber","NuevoCliente","NumPad","AppCitas","console","log","urlGetCitas","then","values","estatus","state","citas","data","map","post","id","idcita_consulta","fecha","tipo","tipoCita","podologoName","podologo","nombre","preferencia","clienteName","cliente","estatusCita","estatusId","findIndex","es","label","value","servicios","length","serv","cantidad","toString","arrayServicios","servicio","idServicioSeleccionado","fk_servicios","costoMomento","costo","tipoCitaId","tipoCitaID","podologoId","idcat_usuario","clienteId","idcat_clientes","calificacion","direccion","citasEnEspera","filter","c","citasEnAtencion","citasAtendidas","setState","actualizarDashboards","dateTimeFormat","Intl","DateTimeFormat","year","day","month","hour","minute","second","hour12","fechaActual","format","Date","now","replace","urlGetPodologosDisponibles","method","params","podologosDisponibles","dashboard","count","cita","urlSetEstatus","body","citaID","estatusID","status","obtenerCitasService","err","urlGetClientes","emptyCita","pinDialog","dialogAlergias","generoTicket","citaPodologoDialog","onOffTicket","obtenerCitas","obtenerClientes","obtenerEstatus","urlGetEstatus","obtenerTipoCita","urlGetTipoCitas","obtenerServicios","urlGetServicios","obtenerPodologos","urlGetPodologos","obtenerPodologosDosponibles","obtenerMercancia","urlGetMercancia","self","all","clientes","idC","apellidoP","apellidoM","idE","idcat_cita_status","descripcion","idT","idcat_tipo_cita","idS","idservicios","precio","podologos","idP","mercancia","idmedicamentos","observaciones","receta","catch","errors","setInterval","getDataInicial","info","props","urlAddCitas","urlUpdateCita","urlValidaPin","crearCitaService","JSON","stringify","serviciosBack","s","servicioID","clienteID","podologoID","estatusCitaID","actualizarDireccionCliente","actualizoDir","actualizarCitaService","accion","mostrarDialogObaservaciones","hidePinDialogObservaciones","servicioSeleccionado","costoServicio","cantidadServicioSeleccionado","estatusPagoId","pin","obtenerDireccionCliente","fetch","response","onClienteChange","e","onInputChange","name","val","target","onPinPadChange","citasDialog","deleteCitaDialog","deleteCitasDialog","selectedCitas","submitted","editarCita","globalFilter","title","detail","clase","pinDialogBoton","alergiasCliente","nuevoClienteDialog","leftToolbarTemplate","bind","rightToolbarTemplate","imageBodyTemplate","priceBodyTemplate","ratingBodyTemplate","statusBodyTemplate","actionCitasEnEsperaBodyTemplate","actionCitasEnAtencionBodyTemplate","serviciosActionBodyTemplate","actionSubirCantidadServicioTemplate","openNew","hideDialog","hideDialogObservaciones","saveCita","editCita","confirmCancelarCita","deleteCita","exportCSV","confirmDeleteSelected","deleteSelectedCitas","hideDeleteCitaDialog","hideDeleteCitasDialog","onPodologoChange","onEstatusChange","onChangeDate","onChangeServicio","onTipoChange","onChangePreferencia","borrarServicio","agregarServicio","onCantidadServicioChange","addObservaciones","saveObservaciones","onChangeProducto","atenderCita","newEmptyCita","showValidacionPINDialogAtender","showValidacionPINDialogObservaciones","hidePinDialogAtender","hideAlergiasDialog","despuesDeImprimirTicket","aumentarCantidadServicio","openNewCliente","cancelarCitaService","tomarCitaService","validacionesAlCrearCita","citaDialog","idCliente","nombreCliente","push","hidePodologoDialog","booleanoValidador","parseInt","citaAtendida","p","index","splice","producto","productoSeleccionado","cantidadProductoSeleccionado","idProductoSeleccionado","idProductoseleccionado","costoProducto","arrayProductos","arrayProducto","i","dt","includes","toast","show","severity","summary","life","fechaCita","concat","checked","rowData","image","formatCurrency","price","rating","width","header","citaDialogFooter","citaPodologoDialogFooter","despuesDeAgregarNuevoCliente","deleteCitaDialogFooter","deleteCitasDialogFooter","PINCitasDialogFooter","alergiasDialogFooter","window","rolUsuario","display","fontSize"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {Button} from 'primereact/button';\nimport {FileUpload} from 'primereact/fileupload';\nimport {Rating} from 'primereact/rating';\nimport {InputTextarea} from 'primereact/inputtextarea';\nimport {RadioButton} from 'primereact/radiobutton';\nimport {Dialog} from 'primereact/dialog';\nimport {InputText} from 'primereact/inputtext';\nimport {Calendar} from 'primereact/calendar';\nimport {Dropdown} from 'primereact/dropdown';\nimport {Panel} from 'primereact/panel';\nimport DashBoardCitas from './components/DashBoardCitas/DashBoardCitas';\nimport Servicios from './components/Servicios/Servicios';\nimport {Accordion,AccordionTab} from 'primereact/accordion';\nimport {Checkbox} from 'primereact/checkbox';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Fetch from '../componentsPrincipales/Fetch/FetchN.js'\nimport Contenedor,{Alert} from '../componentsPrincipales/Alert.jsx'\nimport Tickets from '../moduloTickets/components/tools.js';\nimport {InputNumber} from 'primereact/inputnumber';\nimport NuevoCliente from './components/NuevoCliente/NuevoCliente.js';\nimport NumPad from 'react-numpad';\n\n\nexport default class AppCitas extends Component {\n\n  urlGetCitas='api/citas';\n  urlAddCitas='api/citas'\n  urlGetEstatus='api/citas/estatus';\n  urlGetTipoCitas='api/citas/tipoCita';\n  urlGetClientes='api/clientes';\n  urlGetPodologosDisponibles='api/citas/podologosDisponibles';\n  urlGetServicios='api/servicios';\n  urlGetPodologos='api/citas/podologos';\n  urlSetEstatus='api/citas/setEstatus';\n  urlUpdateCita='api/citas';\n  urlGetMercancia='api/mercancia';\n  urlValidaPin='api/citas/valida';\n\n\n  obtenerCitasService() {\n    console.log(['Entro A Obtener las CITAS']);\n    Fetch(this.urlGetCitas).then(values => {\n      //TODO: Parsear datos de mercacias, receta, cita.\n      let estatus=this.state.estatus;\n      const citas=values.data.map(post => ({\n        id: post.idcita_consulta,\n        fecha: post.fecha,\n        tipo: post.tipoCita,\n        podologoName: post.podologo.nombre,\n        preferencia: post.preferencia,\n        clienteName: post.cliente.nombre,\n        estatus: post.estatusCita,\n        estatusId: post.estatusCita!=null? estatus[estatus.findIndex(es => es.label==post.estatusCita)].value:null,\n        servicios: post.servicios.length==0? \"Sin servicios seleccionados\":(post.servicios.map(serv =>\n        (\n          serv.nombre+\" : \"+serv.cantidad+\" \"\n        )\n        ).toString()),\n        arrayServicios: (post.servicios.map(serv =>\n        ({\n          servicio: serv.nombre,\n          cantidad: serv.cantidad,\n          idServicioSeleccionado: serv.fk_servicios,\n          costoMomento: serv.costoMomento\n        })\n        )),\n        costo: 0,\n        tipoCitaId: post.tipoCitaID,\n        podologoId: post.podologo.idcat_usuario,\n        clienteId: post.cliente.idcat_clientes,\n        calificacion: 1, //Calificación valor 0 TEMPORAL hasta que veamos en que punto se va a calificar para que funcione el put\n        direccion: post.cliente.direccion? post.cliente.direccion:''\n      }));\n\n      const citasEnEspera=citas.filter(c => c.estatus==\"En agenda\"||c.estatus==\"En espera\");\n      const citasEnAtencion=citas.filter(c => c.estatus==\"En atención\");\n      const citasAtendidas=citas.filter(c => c.estatus==\"Atendido\");\n      this.setState({citasEnEspera,citasEnAtencion,citasAtendidas});\n      this.actualizarDashboards();\n    });\n  }\n\n  actualizarDashboards() {\n    const dateTimeFormat=new Intl.DateTimeFormat('en-GB',{year: 'numeric',day: '2-digit',month: '2-digit',hour: '2-digit',minute: '2-digit',second: '2-digit',hour12: false})\n    const fechaActual=dateTimeFormat.format(Date.now()).toString().replace(',','');\n    console.log('Entro a actualizar Dashboards');\n    const citasEnEspera=this.state.citasEnEspera;\n    const citasEnAtencion=this.state.citasEnAtencion;\n    Fetch(this.urlGetPodologosDisponibles,{\n      method: \"GET\",\n      params: {'fecha': fechaActual}\n    }).then(values => {\n      const podologosDisponibles=values.data\n      let dashboard=[...this.state.dashboard]\n      dashboard[0].count=podologosDisponibles.length\n      dashboard[1].count=citasEnEspera.length\n      dashboard[2].count=citasEnAtencion.length\n      this.setState({dashboard})\n      console.log('Actualizo Dashboards');\n    });\n\n  };\n\n  crearCitaService=async (cita) => {\n    console.log('[CrearCitaService]'+JSON.stringify(cita))\n    const serviciosBack=cita.arrayServicios.map(s =>\n    ({\n      servicioID: s.idServicioSeleccionado,\n      costoMomento: s.costoMomento,\n      cantidad: s.cantidad\n    })\n    )\n\n    Fetch(this.urlAddCitas,{\n      method: \"POST\",\n      body: {\n        clienteID: cita.clienteId,\n        fecha: cita.fecha,\n        podologoID: cita.podologoId,\n        tipoCitaID: cita.tipoCitaId,\n        estatusCitaID: cita.estatusId,\n        preferencia: cita.preferencia,\n        servicios: serviciosBack\n      }\n    }).then(async (values) => {\n      console.log('[CrearCitaService-R]'+JSON.stringify(cita))\n      if(values.status) {\n        if(cita.tipoCitaId==2) {\n          if(cita.direccion!='') {\n            const actualizoDir=await this.actualizarDireccionCliente(cita.clienteId,cita.direccion); //actualizamos direccion de cita\n            console.log('Actualizo DIR:'+actualizoDir);\n          }\n        }\n        //Actualizamos citas y dashboard\n        this.obtenerCitasService()\n      } else {\n        console.log(\"error:\"+values.err)\n      }\n    });\n  }\n\n  actualizarCitaService=async (cita,accion) => {\n    console.log('[ActualizarCitaService]'+JSON.stringify(cita))\n\n    const serviciosBack=cita.arrayServicios.map(s =>\n    ({\n      servicioID: s.idServicioSeleccionado,\n      costoMomento: s.costoMomento,\n      cantidad: s.cantidad\n    })\n    )\n\n\n    Fetch(this.urlUpdateCita,{\n      method: \"PUT\",\n      body:\n      {\n        citaID: cita.id,\n        observaciones: cita.observaciones,\n        // costo : cita.costo,\n        calificacion: cita.calificacion,\n        receta: cita.receta,\n        observaciones: cita.observaciones,\n        fecha: cita.fecha,\n        podologoID: cita.podologoId,\n        tipoCitaID: cita.tipoCitaId,\n        preferencia: cita.preferencia,\n        // tipoPagoID : null,\n        // estatusPagoID : cita.estatusPagoId,\n        estatusCitaID: cita.estatusId,\n        servicios: serviciosBack\n      }\n    }).then(async (values) => {\n      console.log('[ActualizarCitaService-R]'+JSON.stringify(values))\n      if(values.status) {\n        Alert('success','Cita Actualizada');\n        if(cita.direccion!=''||cita.direccion!='Sin dirección registrada') {\n          const actualizoDir=await this.actualizarDireccionCliente(cita.clienteId,cita.direccion); //actualizamos direccion de cita\n          console.log('Actualizo DIR:'+actualizoDir);\n        }\n        this.setState({generoTicket: true,onOffTicket: true});\n        const mostrarDialogObaservaciones=accion=='actualizarDatosCitaSinObservaciones'? false:true; //Control para saber si mostrar o no el dialog de observaciones\n        this.hidePinDialogObservaciones(mostrarDialogObaservaciones); //Mandamos llamar el metodo que limpia el pin y esconde el dialogo para Digitar PIN\n        this.obtenerCitasService(); //Actualizamos citas y dashboard\n\n      } else {\n        Alert('error','Ocurrió un error al actualizar la cita');\n        console.log(\"error:\"+values.err)\n      }\n    });\n  }\n\n  cancelarCitaService(cita) {\n\n    Fetch(this.urlSetEstatus,{\n      method: \"PATCH\",\n      body:\n      {\n        citaID: cita.id,\n        estatusID: 5 //Estatus cancelado\n      }\n    }).then(values => {\n      if(values.status) {\n        //Toast de cita actualizada y actualizar dashboards\n        this.obtenerCitasService();\n\n      } else {\n        console.log(\"error:\"+values.err)\n      }\n    })\n  }\n\n\n  tomarCitaService(cita) {\n\n    Fetch(this.urlSetEstatus,{\n      method: 'PATCH',\n      body: {\n        citaID: cita.id,\n        estatusID: 3 //Estatus en Atención\n      }\n    }).then(values => {\n      if(values.status) {\n        //Toast de cita actualizada y actualizar dashboards\n\n        Alert('success','Cita en Atención');\n\n        //Obtenemos alergias del cliente\n        Fetch(this.urlGetClientes,{\n          method: \"GET\",\n          params: {'id': this.state.cita.clienteId}\n        }).then(values => {\n          if(values.status) {\n            this.setState({\n              cita: this.emptyCita, //Borra el pin que se puso\n              pinDialog: false, //Deja de Mostrar el Dialog Pin\n              dialogAlergias: true\n            });\n\n            this.obtenerCitasService();\n          } else {\n            Alert('error','Ocurrió un error al obtener informacion del cliente');\n            console.log(\"error:\"+values.err)\n          }\n        })\n\n\n\n\n      } else {\n        Alert('error',values.err);\n        console.log(\"error:\"+values.err)\n      }\n    })\n  }\n\n  despuesDeImprimirTicket() {\n    this.setState({\n      generoTicket: false,\n      citaPodologoDialog: false,\n      onOffTicket: false,\n    })\n  }\n\n  getDataInicial() {\n    const dateTimeFormat=new Intl.DateTimeFormat('en-GB',{year: 'numeric',day: '2-digit',month: '2-digit',hour: '2-digit',minute: '2-digit',second: '2-digit',hour12: false})\n    const fechaActual=dateTimeFormat.format(Date.now()).toString().replace(',','');\n    const obtenerCitas=Fetch(this.urlGetCitas)\n    const obtenerClientes=Fetch(this.urlGetClientes);\n    const obtenerEstatus=Fetch(this.urlGetEstatus);\n    const obtenerTipoCita=Fetch(this.urlGetTipoCitas);\n    const obtenerServicios=Fetch(this.urlGetServicios);\n    const obtenerPodologos=Fetch(this.urlGetPodologos);\n    const obtenerPodologosDosponibles=Fetch(this.urlGetPodologosDisponibles,{method: \"GET\",params: {'fecha': fechaActual}});\n    const obtenerMercancia=Fetch(this.urlGetMercancia);\n\n    let self=this;\n\n    axios.all([obtenerCitas,obtenerClientes,obtenerEstatus,obtenerTipoCita,obtenerServicios,obtenerPodologos,obtenerPodologosDosponibles,obtenerMercancia]).then(values => {\n      console.log(values);\n\n      const clientes=values[1].data.map(post => ({\n        idC: post.idcat_clientes,\n        label: post.nombre+' '+post.apellidoP+' '+post.apellidoM,\n        value: post.idcat_clientes,\n      }));\n\n      const estatus=values[2].data.map(post => ({\n        idE: post.idcat_cita_status,\n        label: post.descripcion,\n        value: post.idcat_cita_status,\n      }));\n\n      const tipoCita=values[3].data.map(post => ({\n        idT: post.idcat_tipo_cita,\n        label: post.descripcion,\n        value: post.idcat_tipo_cita,\n      }));\n\n      const servicios=values[4].data.map(post => ({\n        idS: post.idservicios,\n        label: post.nombre,\n        value: post.idservicios,\n        precio: post.precio\n      }));\n\n      const podologos=values[5].data.map(post => ({\n        idP: post.idcat_usuario,\n        label: post.nombre+' '+post.apellidoP+' '+post.apellidoM,\n        value: post.idcat_usuario,\n      }));\n\n      const mercancia=values[6].data.map(post => ({\n        idP: post.idmedicamentos,\n        label: post.nombre,\n        value: post.idmedicamentos,\n      }));\n\n      const citas=values[0].data.map(post => ({\n        //TODO: Parsear datos de mercacias, receta, cita.\n        id: post.idcita_consulta,\n        fecha: post.fecha,\n        tipo: post.tipoCita,\n        podologoName: post.podologo.nombre,\n        clienteName: post.cliente.nombre,\n        estatus: post.estatusCita,\n        estatusId: post.estatusCita!=null? estatus[estatus.findIndex(es => es.label==post.estatusCita)].value:null,\n        servicios: post.servicios.length==0? \"Sin servicios seleccionados\":(post.servicios.map(serv =>\n        (\n          serv.nombre+\" : \"+serv.cantidad+\" \"\n        )\n        ).toString()),\n        arrayServicios: (post.servicios.map(serv =>\n        ({\n          servicio: serv.nombre,\n          cantidad: serv.cantidad,\n          idServicioSeleccionado: serv.fk_servicios,\n          costoMomento: serv.costoMomento\n        })\n        )),\n        tipoCitaId: post.tipoCitaID,\n        podologoId: post.podologo.idcat_usuario,\n        preferencia: post.preferencia,\n        clienteId: post.cliente.idcat_clientes,\n        costo: 0,\n        observaciones: null,\n        calificacion: 1, //Calificación valor 0 TEMPORAL hasta que veamos en que punto se va a calificar\n        receta: null,\n        direccion: post.cliente.direccion? post.cliente.direccion:''\n      }));\n\n      const citasEnEspera=citas.filter(c => c.estatus==\"En agenda\"||c.estatus==\"En espera\");\n      const citasEnAtencion=citas.filter(c => c.estatus==\"En atención\");\n      const citasAtendidas=citas.filter(c => c.estatus==\"Atendido\");\n\n\n\n      //Actualizamos Dashboard\n      const podologosDisponibles=values[6].data;\n      let dashboard=[...self.state.dashboard];\n      dashboard[0].count=podologosDisponibles.length;\n      dashboard[1].count=citasEnEspera.length;\n      dashboard[2].count=citasEnAtencion.length;\n\n\n      console.log('Citas: '+citas);\n      console.log(clientes);\n      console.log(estatus);\n      console.log(tipoCita);\n      console.log(servicios);\n      console.log(podologos);\n\n      self.setState({citasEnEspera,citasEnAtencion,citasAtendidas,clientes,estatus,tipoCita,servicios,podologos,mercancia,dashboard});\n\n    }).catch(errors => {\n\n      console.log(errors);\n    });\n\n\n\n  }\n\n  componentDidMount() {\n\n    setInterval(() => {\n      this.getDataInicial()\n      console.info('update')\n    },5000);\n  }\n\n  emptyCita={\n    id: null,\n    podologoName: '',\n    podologoId: '',\n    clienteName: '',\n    clienteId: 0,\n    fecha: moment((Date.now()+5*60000)).format('DD/MM/YYYY HH:mm:ss'),//Se toma la fecha del momento y se le agregan 5 min para cuando creen nuevas citas\n    servicio: '',\n    tipo: 'En clínica',\n    tipoCitaId: 1,\n    estatus: 'En agenda',\n    estatusId: 1,\n    servicios: '',\n    arrayServicios: [],\n    servicioSeleccionado: null,\n    costoServicio: null,\n    cantidadServicioSeleccionado: null,\n    idServicioSeleccionado: null,\n    receta: null,\n    observaciones: null,\n    estatusPagoId: null,\n    pin: null,\n    preferencia: false, //Cuando sea nueva siempre va  a ser falso la preferencia\n    direccion: ''\n  };\n\n\n\n\n  constructor(props) {\n    super(props);\n    //Declaramos todos los estados\n    this.state={\n      citasEnEspera: [],\n      citasEnAtencion: [],\n      citasAtendidas: [],\n      citasDialog: false,\n      citaPodologoDialog: false,\n      deleteCitaDialog: false,\n      deleteCitasDialog: false,\n      cita: this.emptyCita,\n      selectedCitas: null,\n      submitted: false,\n      editarCita: false,\n      globalFilter: null,\n      dashboard: [{title: \"Podologos\",detail: \"Podologos disponibles\",count: \"0\",clase: \"count visitors\"},{title: \"Citas Espera\",detail: \"Citas en Espera\",count: \"0\",clase: \"count purchases\"},{title: \"Citas Atención\",detail: \"Citas en Atención\",count: \"0\",clase: \"count revenue\"}],\n      clientes: [],\n      podologos: [],\n      estatus: [],\n      servicios: [],\n      mercancia: [],\n      pinDialog: false, //Variable para saber si se va a mostrar el Dialog de PIN\n      pinDialogBoton: null, //Variable para saber que va a hacer una vez se confirme el PIN\n      dialogAlergias: false,\n      alergiasCliente: null,\n      generoTicket: false,\n      onOffTicket: false,\n      nuevoClienteDialog: false,\n    }\n\n\n\n\n    this.leftToolbarTemplate=this.leftToolbarTemplate.bind(this);\n    this.rightToolbarTemplate=this.rightToolbarTemplate.bind(this);\n    this.imageBodyTemplate=this.imageBodyTemplate.bind(this);\n    this.priceBodyTemplate=this.priceBodyTemplate.bind(this);\n    this.ratingBodyTemplate=this.ratingBodyTemplate.bind(this);\n    this.statusBodyTemplate=this.statusBodyTemplate.bind(this);\n    this.actionCitasEnEsperaBodyTemplate=this.actionCitasEnEsperaBodyTemplate.bind(this);\n    this.actionCitasEnAtencionBodyTemplate=this.actionCitasEnAtencionBodyTemplate.bind(this);\n    this.serviciosActionBodyTemplate=this.serviciosActionBodyTemplate.bind(this);\n    this.actionSubirCantidadServicioTemplate=this.actionSubirCantidadServicioTemplate.bind(this);\n\n    this.openNew=this.openNew.bind(this);\n    this.hideDialog=this.hideDialog.bind(this);\n    this.hideDialogObservaciones=this.hideDialog.bind(this);\n    this.saveCita=this.saveCita.bind(this);\n    this.editCita=this.editCita.bind(this);\n    this.confirmCancelarCita=this.confirmCancelarCita.bind(this);\n    this.deleteCita=this.deleteCita.bind(this);\n    this.exportCSV=this.exportCSV.bind(this);\n    this.confirmDeleteSelected=this.confirmDeleteSelected.bind(this);\n    this.deleteSelectedCitas=this.deleteSelectedCitas.bind(this);\n    this.hideDeleteCitaDialog=this.hideDeleteCitaDialog.bind(this);\n    this.hideDeleteCitasDialog=this.hideDeleteCitasDialog.bind(this);\n    this.onPodologoChange=this.onPodologoChange.bind(this);\n    this.onClienteChange=this.onClienteChange.bind(this);\n    this.onEstatusChange=this.onEstatusChange.bind(this);\n    this.onChangeDate=this.onChangeDate.bind(this);\n    this.onChangeServicio=this.onChangeServicio.bind(this);\n    this.onTipoChange=this.onTipoChange.bind(this);\n    this.onChangePreferencia=this.onChangePreferencia.bind(this);\n    this.borrarServicio=this.borrarServicio.bind(this);\n    this.agregarServicio=this.agregarServicio.bind(this);\n    this.onCantidadServicioChange=this.onCantidadServicioChange.bind(this);\n    this.addObservaciones=this.addObservaciones.bind(this);\n    this.saveObservaciones=this.saveObservaciones.bind(this);\n    this.onChangeProducto=this.onChangeProducto.bind(this);\n    this.borrarServicio=this.borrarServicio.bind(this);\n    this.agregarServicio=this.agregarServicio.bind(this);\n    this.onCantidadServicioChange=this.onCantidadServicioChange.bind(this);\n    this.atenderCita=this.atenderCita.bind(this);\n    this.newEmptyCita=this.newEmptyCita.bind(this);//Metodo para limpiar EmptyCita cada que creen una nueva.\n    this.showValidacionPINDialogAtender=this.showValidacionPINDialogAtender.bind(this);\n    this.showValidacionPINDialogObservaciones=this.showValidacionPINDialogObservaciones.bind(this);\n    this.hidePinDialogAtender=this.hidePinDialogAtender.bind(this);\n    this.hidePinDialogObservaciones=this.hidePinDialogObservaciones.bind(this);\n    this.hideAlergiasDialog=this.hideAlergiasDialog.bind(this);\n    this.despuesDeImprimirTicket=this.despuesDeImprimirTicket.bind(this);\n    this.obtenerDireccionCliente=this.obtenerDireccionCliente.bind(this);\n    this.actualizarDireccionCliente=this.actualizarDireccionCliente.bind(this);\n    this.aumentarCantidadServicio=this.aumentarCantidadServicio.bind(this);\n    this.openNewCliente=this.openNewCliente.bind(this);\n\n    //Services\n    this.obtenerCitasService=this.obtenerCitasService.bind(this);\n    this.actualizarDashboards=this.actualizarDashboards.bind(this);\n    this.crearCitaService=this.crearCitaService.bind(this);\n    this.cancelarCitaService=this.cancelarCitaService.bind(this);\n    this.actualizarCitaService=this.actualizarCitaService.bind(this);\n    this.tomarCitaService=this.tomarCitaService.bind(this);\n    this.validacionesAlCrearCita=this.validacionesAlCrearCita.bind(this);\n  }\n\n  /*******Inicia declaración de Handlers ********/\n  newEmptyCita() {\n    this.emptyCita={\n      id: null,\n      podologoName: '',\n      podologoId: '',\n      preferencia: false, //Cada que limpiamos y creamos una nueva este campo se va a false\n      clienteName: '',\n      clienteId: 0,\n      fecha: moment((Date.now()+5*60000)).format('DD/MM/YYYY HH:mm:ss'),//Se toma la fecha del momento y se le agregan 5 min para cuando creen nuevas citas\n      servicio: '',\n      tipo: 'En clínica',\n      tipoCitaId: 1,\n      estatus: 'En agenda',\n      estatusId: 1,\n      servicios: '',\n      arrayServicios: [],\n      servicioSeleccionado: null,\n      costoServicio: null,\n      cantidadServicioSeleccionado: null,\n      idServicioSeleccionado: null,\n      receta: null,\n      observaciones: null,\n      estatusPagoId: null\n    }\n  }\n\n  openNew() {\n    this.newEmptyCita();//Limpiamos cita\n\n    //Obtenemos podologos para la hora en la que abren la nueva cita      \n    Fetch(this.urlGetPodologosDisponibles,{\n      method: \"GET\",\n      params: {'fecha': this.emptyCita.fecha}\n    }).then(values => {\n      const podologos=values.data.map(post => ({\n        idP: post.idcat_usuario,\n        label: post.nombre+' '+post.apellidoP+' '+post.apellidoM,\n        value: post.idcat_usuario,\n      }));\n      let cita=this.emptyCita\n\n      if(podologos.length!=0) { //Seleccionamos al primer podologo disponible\n        cita={...this.emptyCita}\n        cita.podologoId=podologos[0].idP\n        cita.podologoName=podologos[0].label\n      }\n\n      //Actualizamos estados\n      this.setState({\n        cita: cita,\n        podologos: podologos,\n        submitted: false,\n        editarCita: false,\n        citaDialog: true\n      });\n\n    });\n  }\n\n  openNewCliente() {\n    this.setState({\n      nuevoClienteDialog: true\n    })\n  }\n\n  despuesDeAgregarNuevoCliente(idCliente,nombreCliente) {\n    console.log('[Entro a DESPUES de Agregar un cliente]');\n    console.log({idCliente})\n    console.log({nombreCliente})\n    const cliente={\n      idC: idCliente,\n      label: nombreCliente,\n      value: idCliente,\n    };\n\n    let clientes=[...this.state.clientes]\n    let cita={...this.state.cita}\n\n    cita.clienteId=idCliente\n    cita.clienteName=nombreCliente\n\n    clientes.push(cliente);\n\n    this.setState({\n      nuevoClienteDialog: false,\n      clientes: clientes,\n      cita\n    })\n  }\n\n  hideDialog() {\n    this.setState({\n      submitted: false,\n      citaDialog: false,\n      citaPodologoDialog: false\n    });\n  }\n\n  hideDialogObservaciones() {\n    this.setState({\n      generoTicket: false,\n      citaPodologoDialog: false\n    })\n  }\n\n  hidePinDialogAtender() {\n    this.setState({\n      cita: this.emptyCita,\n      pinDialog: false,\n    })\n  }\n\n\n  hidePinDialogObservaciones(hidePodologoDialog) {\n    if(hidePodologoDialog=='undefined') {hidePodologoDialog=true}\n    let cita={...this.state.cita};\n    cita['pin']=null;\n    this.setState({\n      cita,\n      pinDialog: false,\n      citaPodologoDialog: hidePodologoDialog\n    })\n  }\n\n  hideAlergiasDialog() {\n    this.setState({\n      alergiasCliente: null,\n      dialogAlergias: false\n    })\n  }\n\n\n  hideDeleteCitaDialog() {\n    this.setState({deleteCitaDialog: false});\n  }\n\n  hideDeleteCitasDialog() {\n    this.setState({deleteCitasDialog: false});\n  }\n\n  saveCita() {\n    let state={submitted: true};\n\n    if(this.validacionesAlCrearCita()) {//TODO: ver que otros campos son obligatorios\n\n      let cita={...this.state.cita};\n\n      if(this.state.cita.id) {\n        //Actualizamos cita\n        cita.estatusPagoId=1; //TEMPORALmente se maneja estatusPagoId 1 al actualizar. Este campo se va a quitar.\n        this.actualizarCitaService(cita,'actualizarDatosCitaSinObservaciones'); //mandamos el action de que actualizo datos pero no observaciones. \n\n\n\n\n      }\n      else {\n        //Creamos cita\n        this.crearCitaService(cita);\n        Alert('success','Cita Creada');\n\n      }\n\n      state={\n        ...state,\n        citaDialog: false,\n        cita: this.emptyCita\n      };\n    } else {\n\n\n    }\n\n    this.setState(state);\n  }\n\n  validacionesAlCrearCita() {\n    let booleanoValidador=true;\n\n    if(!this.state.cita.podologoId) {\n      Alert('error','Debes seleccionar un podologo');\n      booleanoValidador=false;\n    }\n\n    if(!this.state.cita.clienteId) {\n      Alert('error','Debes seleccionar un cliente');\n      booleanoValidador=false;\n    }\n\n    if(this.state.cita.arrayServicios.length==0) {\n      Alert('error','Debes seleccionar almenos un servicio');\n      booleanoValidador=false;\n    }\n\n    return booleanoValidador;\n  }\n\n  saveObservaciones() {\n    console.log(\"[saveObservaciones]\");\n    //TODO:Validación de campos vaciós\n\n\n    Fetch(this.urlValidaPin,{\n      method: 'POST',\n      body: {\n        pin: parseInt(this.state.cita.pin),\n        citaID: this.state.cita.id\n      }\n    }).then(values => {\n      console.log('[SaveObservacionesCitaPINRespuesta]'+JSON.stringify(values))\n      if(values.status) {\n\n        let state={submitted: true};\n        let citaAtendida={...this.state.cita}\n        citaAtendida.estatusId=4; //Cambiamos el estatus a atendido\n        citaAtendida.estatusPagoId=1; //Cambiamos el estatus de pago a pendiente OJO: TEMPORAL todas estan en pendientes. \n\n        //Aquí se debería llamar a la función que genera ticket\n\n\n        state={\n          ...state,\n          citaPodologoDialog: false, //cerrar dialog\n          cita: {...citaAtendida},\n          generoTicket: true,\n          onOffTicket: true\n        }\n\n        this.actualizarCitaService(citaAtendida);//Consumimos el servicio para agregar observaciones, receta y estatus.   \n\n      } else {\n        Alert('error',values.data);\n      }\n      // console.log(values)\n    }\n    )\n\n  }\n\n  showValidacionPINDialogAtender(cita) { //Metodo para mostrar el Dialog para el pin al atender una cita\n    let state={\n      citaPodologoDialog: false,\n      pinDialog: true,\n      cita: cita,\n      pinDialogBoton: 'Atender'\n    }\n\n    this.setState(state);\n  }\n\n\n  showValidacionPINDialogObservaciones() { //Metodo para mostrar el Dialog para el pin al realizar observacioes\n    let state={\n      citaPodologoDialog: false,\n      pinDialog: true,\n      pinDialogBoton: 'Observaciones'\n    }\n\n    this.setState(state);\n\n  }\n\n\n  editCita(cita) {\n    console.log(\"[EditCita]cita:\");\n    console.log(cita);\n\n    //Obtenemos a los podologos disponibles según la fecha seleccionada al editar la cita\n    Fetch(this.urlGetPodologosDisponibles,{\n      method: \"GET\",\n      params: {'fecha': this.state.cita.fecha}\n    }).then(values => {\n      console.log(\"[EditCita]podologosRequest:\");\n      console.log(values);\n      const podologos=values.data.map(post => ({\n        idP: post.idcat_usuario,\n        label: post.nombre+' '+post.apellidoP+' '+post.apellidoM,\n        value: post.idcat_usuario,\n      }));\n\n      //Agregamos al podologo que ya tienen configurado para que salga en las opciones\n      if(podologos.findIndex(p => p.value==cita.podologoId)==-1) {\n        podologos.push({label: cita.podologoName,value: cita.podologoId,idP: cita.podologoId});\n      }\n\n      //Actualizamos estados\n      this.setState({\n        cita: {...cita},\n        podologos: [...podologos],\n        editarCita: true,\n        citaDialog: true\n      });\n    });\n  }\n\n\n  addObservaciones(cita) {\n    console.log(\"[AddObservaciones]cita:\");\n    console.log(cita);\n    this.setState({\n      cita: {...cita},\n      submitted: false,\n      editarCita: false,\n      citaDialog: false,\n      citaPodologoDialog: true\n    });\n  }\n\n  confirmCancelarCita(cita) {\n    this.setState({\n      cita,\n      deleteCitaDialog: true\n    });\n  }\n\n  agregarServicio() {\n    let cita={...this.state.cita};\n    let servicio={servicio: cita.servicioSeleccionado,cantidad: cita.cantidadServicioSeleccionado,idServicioSeleccionado: cita.idServicioSeleccionado,costoMomento: cita.costoServicio}\n    cita.arrayServicios.push(servicio);\n    cita.servicioSeleccionado=null;\n    cita.idServicioSeleccionado=null;\n    cita.cantidadServicioSeleccionado=null;\n    this.setState({cita: cita});\n  }\n\n  aumentarCantidadServicio(servicio,e) {\n    let cita={...this.state.cita};\n    const index=cita.arrayServicios.findIndex(serv => serv.servicio==servicio.servicio);\n    cita.arrayServicios[index]['cantidad']=e.value;\n    this.setState({cita});\n  }\n\n  borrarServicio(servicio) {\n    let cita={...this.state.cita};\n    const index=cita.arrayServicios.findIndex(serv => serv.servicio==servicio.servicio);\n    cita.arrayServicios.splice(index,1);\n    this.setState({cita});\n  }\n\n  agregarProducto() {\n    let cita={...this.state.cita};\n    let producto={producto: cita.productoSeleccionado,cantidad: cita.cantidadProductoSeleccionado,idProductoSeleccionado: cita.idProductoseleccionado,costoMomento: cita.costoProducto}\n    cita.arrayProductos.push(producto);\n    cita.productoSeleccionado=null;\n    cita.idProductoSeleccionado=null;\n    cita.cantidadProductoSeleccionado=null;\n    this.setState({cita: cita});\n  }\n\n  borrarProducto(producto) {\n    let cita={...this.state.cita};\n    const index=cita.arrayProductos.findIndex(p => p.producto==producto.producto);\n    cita.arrayProducto.splice(index,1);\n    this.setState({cita});\n  }\n\n\n  deleteCita() {\n    this.cancelarCitaService(this.state.cita);\n    this.setState({\n      deleteCitaDialog: false,\n      cita: this.emptyCita\n    });\n    // this.toast.show({severity: 'success',summary: 'Successful',detail: 'Product Deleted',life: 3000});\n    Alert('success','Cita Cancelada');\n\n  }\n\n  atenderCita(cita) {\n\n\n    Fetch(this.urlValidaPin,{\n      method: 'POST',\n      body: {\n        pin: parseInt(this.state.cita.pin),\n        citaID: this.state.cita.id\n      }\n    }).then(values => {\n      console.log('[AtenderCitaPINRespuesta]'+JSON.stringify(values))\n      if(values.status) {\n        this.tomarCitaService(cita);\n\n\n\n      } else {\n        Alert('error',values.data);\n      }\n      // console.log(values)\n    }\n    )\n\n  }\n\n  obtenerDireccionCliente=async (clienteId) => {\n    console.log('[Entro a obtener direccion del cliente]');\n    let direccion='';\n    const fetch=await Fetch(this.urlGetClientes+'/'+clienteId,{\n      method: 'GET'\n    }).then(values => {\n      if(values.status) {\n        direccion=values.data.direccion;\n        console.log({direccion});\n\n      } else {\n        direccion='Ocurrio un error al obtener la direccion del cliente'\n        Alert('error',direccion);\n\n      }\n    })\n    return direccion;\n  }\n\n\n  actualizarDireccionCliente=async (clienteId,direccion) => {\n    console.log('[Entro a CAMBIAR direccion del cliente]');\n    console.log({clienteId});\n    console.log({direccion});\n    const fetch=await Fetch(this.urlGetClientes+'/update/address',{\n      method: 'PATCH',\n      body: {\n        id: clienteId,\n        direccion: direccion\n      }\n    }).then(values => {\n      console.log('[ActualizarDireccionCliente-R]'+JSON.stringify(values))\n      if(values.response=='address_customer_updated') {\n        // Alert('success', 'Actualizó la dirección')\n        return true;\n\n      } else {\n        Alert('error','Ocurrio un error al actualizar la dirección');\n        return false;\n      }\n    })\n  }\n\n  findIndexById(id) {\n    let index=-1;\n    for(let i=0;i<this.state.citas.length;i++) {\n      if(this.state.citas[i].id===id) {\n        index=i;\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  exportCSV() {\n    this.dt.exportCSV();\n  }\n\n  confirmDeleteSelected() {\n    this.setState({deleteCitasDialog: true});\n  }\n\n  deleteSelectedCitas() {\n    let citas=this.state.citas.filter(val => !this.state.selectedCitas.includes(val));\n    this.setState({\n      citas,\n      deleteCitasDialog: false,\n      selectedCitas: null\n    });\n    this.toast.show({severity: 'success',summary: 'Successful',detail: 'Citas Deleted',life: 3000});\n  }\n\n  onPodologoChange(e) {\n    let cita={...this.state.cita};\n    cita['podologoName']=e.label;\n    cita['podologoId']=e.value;\n    this.setState({cita});\n  }\n\n  onClienteChange=async (e) => {\n    let cita={...this.state.cita};\n    cita['clienteName']=e.label;\n    cita['clienteId']=e.value;\n    //Aquí votaría antes de cambiar el estado sí quieren agregar un nuevo cliente. \n    const direccion=await this.obtenerDireccionCliente(e.value);\n    cita['direccion']=direccion==''? 'Sin dirección registrada':direccion; // El valor sin direccion registrada se valida despues para saber si actualizamos o no direccion, ya que modificamos el state y es lo que comparamos\n    console.log('Direccion:'+direccion)\n    this.setState({cita});\n  }\n\n  onEstatusChange(e) {\n    let cita={...this.state.cita};\n    cita['estatus']=e.label;\n    cita['estatusId']=e.value;\n    this.setState({cita});\n  }\n\n  onChangeDate(e) {\n    let cita={...this.state.cita};\n    const dateTimeFormat=new Intl.DateTimeFormat('en-GB',{year: 'numeric',month: '2-digit',day: '2-digit',hour: '2-digit',minute: '2-digit',hour12: false})\n    let fechaCita=dateTimeFormat.format(e.value).toString().replace(',','').concat(':00');\n    //Obtenemos podologos disponibles para esa cambio de horario\n    Fetch(this.urlGetPodologosDisponibles,{\n      method: \"GET\",\n      params: {'fecha': fechaCita}\n    }).then(values => {\n      const podologos=values.data.map(post => ({\n        idP: post.idcat_usuario,\n        label: post.nombre+' '+post.apellidoP+' '+post.apellidoM,\n        value: post.idcat_usuario,\n      }));\n\n      // //Agregamos al podologo que ya tienen configurado para que salga en las opciones  \n      // if(cita.podologoId){\n      //   podologos.push({label: cita.podologoName, value : cita.podologoId, idP : cita.podologoId});\n      // }\n      //Actualizamos campos y estados\n      cita['fecha']=fechaCita;\n      cita['podologoName']=null;\n      cita['podologoId']=null;\n      console.log({podologos});\n\n      this.setState({cita,podologos});\n    });\n  }\n\n  onChangePreferencia(e) {\n    console.log('Entro a cambiar preferencia');\n    console.log(e.checked);\n    let cita={...this.state.cita};\n    cita['preferencia']=e.checked;\n    this.setState({cita});\n  }\n\n  onChangeServicio(e) {\n    let cita={...this.state.cita};\n    let servicioSeleccionado=this.state.servicios.filter(s => s.idS==e.value)\n    let servicio={servicio: servicioSeleccionado[0].label,cantidad: 1,idServicioSeleccionado: e.value,costoMomento: servicioSeleccionado[0].precio}\n    cita.arrayServicios.push(servicio);\n    this.setState({cita});\n  }\n\n  onCantidadServicioChange(e) {\n    let cita={...this.state.cita};\n    cita['cantidadServicioSeleccionado']=e.value;\n    this.setState({cita});\n  }\n\n  onChangeProducto(e) {\n    let cita={...this.state.cita};\n    let servicioSeleccionado=this.state.servicios.filter(s => s.idS==e.value)\n    cita['costoProducto']=servicioSeleccionado[0].precio;\n    cita['productoSeleccionado']=servicioSeleccionado[0].label;\n    cita['idProductSeleccionado']=e.value;\n    cita['cantidadProductoSeleccionado']=1;\n    this.setState({cita});\n  }\n\n  onCantidadProductoChange(e) {\n    let cita={...this.state.cita};\n    cita['cantidadProductoSeleccionado']=e.value;\n    this.setState({cita});\n  }\n\n  onTipoChange(e) {\n    let cita={...this.state.cita};\n    cita['tipo']=e.label;\n    cita['tipoCitaId']=e.value;\n    // if(e.value == 2 && this.cita.direccion == ''){\n\n    // }\n    this.setState({cita});\n  }\n\n\n  onInputChange=(e,name) => {\n    const val=(e.target&&e.target.value)||'';\n    console.log({val});\n    let cita={...this.state.cita};\n    cita[`${name}`]=val;\n    this.setState({cita});\n  }\n\n  onPinPadChange=(value, name)=> {\n    const val= value\n    console.log({val});\n    let cita={...this.state.cita};\n    cita[`${name}`]=val;\n    this.setState({cita});\n  }\n\n  /*******Inician declaración de los Templates ********/\n\n  leftToolbarTemplate() {\n    return (\n      <>\n        <Button label=\"Nueva Cita\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\n        <Button label=\"Cancelar\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={this.confirmDeleteSelected} disabled={!this.state.selectedCitas||!this.state.selectedCitas.length} />\n      </>\n    )\n  }\n\n  rightToolbarTemplate() {\n    return (\n      <>\n        <FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" />\n        <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} />\n      </>\n    )\n  }\n\n  imageBodyTemplate(rowData) {\n    return <img src={`showcase/demo/images/product/${rowData.image}`} alt={rowData.image} className=\"product-image\" />\n  }\n\n  priceBodyTemplate(rowData) {\n    return this.formatCurrency(rowData.price);\n  }\n\n  ratingBodyTemplate(rowData) {\n    return <Rating value={rowData.rating} readonly cancel={false} />;\n  }\n\n  statusBodyTemplate(rowData) {\n    let estatus=''\n    switch(rowData.estatus) {\n\n      case 'Atendido':\n        estatus='instock'\n        break;\n\n      case 'Cancelado':\n        estatus='outofstock'\n        break;\n\n      case 'En Atencion':\n        estatus='lowstock'\n        break;\n    }\n\n    return <span className={`product-badge status-${estatus}`}>{rowData.estatus}</span>;\n  }\n\n  actionSubirCantidadServicioTemplate(rowData) {\n    return (\n      <>\n        <InputNumber value={rowData.cantidad} min={1} max={15} mode=\"decimal\" showButtons buttonLayout=\"vertical\" style={{width: '2em'}} onChange={(e) => this.aumentarCantidadServicio(rowData,e)}\n          decrementButtonClassName=\"p-button-secondary\" incrementButtonClassName=\"p-button-secondary\" incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\" />\n      </>\n    );\n  }\n\n\n  actionCitasEnEsperaBodyTemplate(rowData) {\n    return (\n      <>\n        <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning p-mr-2\" onClick={() => this.editCita(rowData)} />\n        <Button icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-mr-2\" onClick={() => this.confirmCancelarCita(rowData)} />\n        <Button icon=\"pi pi-upload\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => this.showValidacionPINDialogAtender(rowData)} />\n      </>\n    );\n  }\n\n  actionCitasEnAtencionBodyTemplate(rowData) {\n    return (\n      <>\n        <Button icon=\"pi pi-eye\" className=\"p-button-rounded p-button-info p-mr-2\" onClick={() => this.addObservaciones(rowData)} />\n        <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning p-mr-2\" onClick={() => this.editCita(rowData)} />\n        <Button icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-mr-2\" onClick={() => this.confirmCancelarCita(rowData)} />\n      </>\n    );\n  }\n\n  serviciosActionBodyTemplate(rowData) {\n    return (\n      <>\n        <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.borrarServicio(rowData)} />\n      </>\n    );\n  }\n\n\n  render() {\n    const header=(\n      <div className=\"table-header\">\n        <h5 className=\"p-m-0\"></h5>\n        <span className=\"p-input-icon-left\">\n          <i className=\"pi pi-search\" />\n          <InputText type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Buscar...\" />\n        </span>\n      </div>\n    );\n    const citaDialogFooter=(\n      <>\n        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\n        <Button label=\"Guardar\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveCita} />\n      </>\n    );\n\n    ////Geberar Ticket configuraciones\n    let citaPodologoDialogFooter;\n\n    if(!this.state.generoTicket) {\n\n      citaPodologoDialogFooter=(\n        <>\n          <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialogObservaciones} />\n          <Button label=\"Guardar Observaciones\" icon=\"pi pi-tablet\" className=\"p-button-text\" onClick={this.showValidacionPINDialogObservaciones} />\n        </>\n      );\n    } else {\n      citaPodologoDialogFooter=(\n        <>\n          <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialogObservaciones} />\n          <Tickets tipo=\"1\" IdTicket={this.state.cita.id} OnOffProp={this.state.onOffTicket} despuesDeImprimir={() => this.despuesDeImprimirTicket()} />\n        </>\n      );\n    }\n\n    ////Agregar un nuevo cliente configuraciones\n    let nuevoClienteDialog=null\n    console.log('[NuevoClienteDialog]'+this.state.nuevoClienteDialog)\n\n    if(this.state.nuevoClienteDialog) {\n      console.log('Entro a Agregar un nuevo cliente')\n      nuevoClienteDialog=<NuevoCliente\n        despuesDeAgregar={(idCliente,nombreCliente) => this.despuesDeAgregarNuevoCliente(idCliente,nombreCliente)}\n        closeNewClienteDialog={() => this.setState({nuevoClienteDialog: false})}\n      />\n    }\n\n\n    const deleteCitaDialogFooter=(\n      <>\n        <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteCitaDialog} />\n        <Button label=\"Sí\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteCita} />\n      </>\n    );\n    const deleteCitasDialogFooter=(\n      <>\n        <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteCitasDialog} />\n        <Button label=\"Sí\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedCitas} />\n      </>\n    );\n\n    const PINCitasDialogFooter=(\n      <>\n        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.state.pinDialogBoton=='Atender'?\n          () => this.hidePinDialogAtender():() => this.hidePinDialogObservaciones()} />\n        <Button label=\"Enviar\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.state.pinDialogBoton=='Atender'?\n          () => this.atenderCita({...this.state.cita}):() => this.saveObservaciones()} />\n      </>\n    );\n\n    const alergiasDialogFooter=(\n      <>\n        <Button label=\"Aceptar\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.hideAlergiasDialog} />\n      </>\n    );\n    /*******TERMINAN los Templates ********/\n\n\n    /*******Inicia RETURN ********/\n    return (\n      <div>\n        {/* Contenedor de Alerts */}\n        <Contenedor />\n\n        <DashBoardCitas dashBoard={this.state.dashboard} openNew={() => this.openNew()} />\n\n        <Accordion multiple activeIndex={[0,1]}>\n          <AccordionTab header=\"Citas en Espera\" id=\"tab1\" >\n\n\n            <DataTable value={this.state.citasEnEspera} globalFilter={this.state.globalFilter} sortField=\"fecha\" sortOrder={-1} header={header} paginatorPosition=\"both\" selectionMode=\"single\" paginator={true} rows={10}\n              responsive={true}>\n              <Column field=\"id\" header=\"id\" sortable={true} />\n              <Column field=\"podologoName\" header=\"Podologo\" sortable={true} />\n              <Column field=\"clienteName\" header=\"Cliente\" sortable={true} />\n              <Column field=\"fecha\" header=\"Fecha\" sortable={true} />\n              <Column field=\"servicios\" header=\"servicio\" sortable={true} />\n              <Column field=\"tipo\" header=\"Tipo\" sortable={true} />\n              <Column field=\"estatus\" header=\"Estatus\" body={this.statusBodyTemplate} sortable={true} />\n              <Column body={this.actionCitasEnEsperaBodyTemplate}></Column>\n            </DataTable>\n          </AccordionTab>\n          <AccordionTab header=\"Citas en atencion\" id=\"tab2\">\n            <DataTable value={this.state.citasEnAtencion} globalFilter={this.state.globalFilter} sortField=\"fecha\" sortOrder={-1} header={header} paginatorPosition=\"both\" selectionMode=\"single\" paginator={true} rows={10}\n              responsive={true}>\n              <Column field=\"id\" header=\"id\" sortable={true} />\n              <Column field=\"podologoName\" header=\"Podologo\" sortable={true} />\n              <Column field=\"clienteName\" header=\"Cliente\" sortable={true} />\n              <Column field=\"fecha\" header=\"Fecha\" sortable={true} />\n              <Column field=\"servicios\" header=\"servicio\" sortable={true} />\n              <Column field=\"tipo\" header=\"Tipo\" sortable={true} />\n              <Column field=\"estatus\" header=\"Estatus\" body={this.statusBodyTemplate} sortable={true} />\n              <Column body={this.actionCitasEnAtencionBodyTemplate}></Column>\n            </DataTable>\n          </AccordionTab>\n\n          <AccordionTab header=\"Citas Atendidas\" id=\"tab3\">\n            <DataTable value={this.state.citasAtendidas} globalFilter={this.state.globalFilter} sortField=\"fecha\" sortOrder={-1} header={header} paginatorPosition=\"both\" selectionMode=\"single\" paginator={true} rows={10}\n              responsive={true}>\n              <Column field=\"id\" header=\"id\" sortable={true} />\n              <Column field=\"podologoName\" header=\"Podologo\" sortable={true} />\n              <Column field=\"clienteName\" header=\"Cliente\" sortable={true} />\n              <Column field=\"fecha\" header=\"Fecha\" sortable={true} />\n              <Column field=\"servicios\" header=\"servicio\" sortable={true} />\n              <Column field=\"tipo\" header=\"Tipo\" sortable={true} />\n              <Column field=\"estatus\" header=\"Estatus\" body={this.statusBodyTemplate} sortable={true} />\n            </DataTable>\n          </AccordionTab>\n        </Accordion>\n\n        {nuevoClienteDialog} {/* dialog para agregar nuevos clientes */}\n\n\n        {/* Dialog para nuevas citas y editar citas */}\n        <Dialog\n          visible={this.state.citaDialog}\n          style={{width: '450px'}}\n          header=\"Detalles de Cita\"\n          modal\n          className=\"p-fluid\"\n          footer={citaDialogFooter}\n          onHide={this.hideDialog}>\n\n          <p><b>Cliente:</b></p>\n          <div className=\"p-grid\">\n            <div className=\"p-col-10\">\n              <div className=\"content-section implementation p-dropdown\">\n                <Dropdown\n                  key=\"DropDownCliente\"\n                  placeholder=\"Selecciona un cliente\"\n                  value={this.state.cita.clienteId}\n                  options={this.state.clientes}\n                  onChange={(e) => this.onClienteChange(e)}\n                  dataKey=\"value\"\n                  filter />\n              </div>\n            </div>\n            <div className=\"p-col-1\">\n              <Button icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={this.openNewCliente} />\n            </div>\n          </div>\n\n\n          <p><b>Fecha:</b></p>\n          <div className=\"p-calendar-w-btn\">\n            <Calendar showIcon={true}\n              showTime\n              dateFormat='dd/mm/yy'\n              hourFormat=\"24\"\n              value={\n                new Date(moment(this.state.cita.fecha,'DD/MM/YYYY HH:mm:ss'))\n              }\n              onChange={(e) => this.onChangeDate(e)}>\n            </Calendar>\n          </div>\n\n          <p><b>Pódologo:</b></p>\n          <div className=\"content-section implementation p-dropdown\">\n            <Dropdown\n              key=\"DropDownPodologo\"\n              placeholder=\"Selecciona un Podologo\"\n              value={this.state.cita.podologoId}\n              options={this.state.podologos}\n              onChange={(e) => this.onPodologoChange(e)}\n              dataKey=\"value\"\n              filter />\n          </div>\n\n          <div className='p-field-checkbox'>\n            <Checkbox inputId='prefCheckBox' onChange={e => this.onChangePreferencia(e)} checked={this.state.cita.preferencia}></Checkbox>\n            <label htmlFor=\"prefCheckBox\" className=\"p-checkbox-label\">Preferencia</label>\n          </div>\n\n          <div style={window.rolUsuario == 1 ?  {display:'block'} :  window.rolUsuario == 4 ? {display:'block'} : {display:'none'}}>\n          <p><b>Servicios:</b></p>\n          <Servicios\n            cita={this.state.cita}\n            servicios={this.state.servicios}\n            onChangeServicio={(e) => this.onChangeServicio(e)}\n            onCantidadServicioChange={(e) => this.onCantidadServicioChange(e)}\n            agregarServicio={() => this.agregarServicio()}\n            globalFilter={this.globalFilter}\n            serviciosActionBodyTemplate={this.serviciosActionBodyTemplate}\n            actionSubirCantidadServicioTemplate={this.actionSubirCantidadServicioTemplate}\n          />\n          </div>\n\n\n\n\n          <p><b>Tipo Cita:</b></p>\n          <div className=\"p-field\">\n            <div className=\"p-formgrid p-grid\">\n              <div className=\"p-field-radiobutton p-col-6\">\n                <RadioButton id=\"Tipo1\" name=\"tipo\" value={1} onChange={this.onTipoChange} checked={this.state.cita.tipo==='En clínica'} />\n                <label htmlFor=\"Tipo1\">Local</label>\n              </div>\n              <div className=\"p-field-radiobutton p-col-6\">\n                <RadioButton id=\"Tipo2\" name=\"tipo\" value={2} onChange={this.onTipoChange} checked={this.state.cita.tipo==='A comicilio'} />\n                <label htmlFor=\"Tipo2\">A Domicilio</label>\n              </div>\n            </div>\n          </div>\n\n          {/* mostrar Direccion dependiendo del tipoCitas */}\n          <div style={this.state.cita.tipoCitaId==2? {display: 'block'}:{display: 'none'}}>\n            <p><b>Dirección:</b></p>\n            <div className=\"p-field\">\n              <label htmlFor=\"direccion\"></label>\n              <InputTextarea\n                value={this.state.cita.direccion}\n                onChange={(e) => this.onInputChange(e,'direccion')}\n                rows={5} cols={30} autoResize />\n            </div>\n          </div>\n\n          <p><b>Estatus:</b></p>\n          <div className=\"content-section implementation p-dropdown\">\n            <Dropdown\n              value={this.state.cita.estatusId}\n              options={this.state.estatus}\n              onChange={(e) => this.onEstatusChange(e)}\n              filter />\n          </div>\n        </Dialog>\n\n        {/* Dialog para editar observaciones, dar receta y agregar uso del producto*/}\n        <Dialog\n          visible={this.state.citaPodologoDialog}\n          style={{width: '450px'}}\n          header=\"Detalles de Cita\"\n          modal\n          className=\"p-fluid\"\n          footer={citaPodologoDialogFooter}\n          onHide={this.hideDialogObservaciones}>\n\n          <p><b>Cliente:</b></p>\n          <p>{this.state.cita.clienteName}</p>\n          <p><b>Fecha:</b></p>\n          <p>{this.state.cita.fecha}</p>\n          <p><b>Pódologo:</b></p>\n          <p>{this.state.cita.podologoName}</p>\n          <Panel header=\"Observaciones Podólogo\">\n            <div className=\"p-field\">\n              <label htmlFor=\"observaciones\">Observaciones</label>\n              <InputTextarea\n                value={this.state.cita.observaciones}\n                onChange={(e) => this.onInputChange(e,'observaciones')}\n                rows={5} cols={30} autoResize />\n            </div>\n\n            <div className=\"p-field\">\n              <label htmlFor=\"receta\">Receta</label>\n              <InputTextarea\n                value={this.state.cita.receta}\n                onChange={(e) => this.onInputChange(e,'receta')}\n                rows={5} cols={30} autoResize />\n            </div>\n          </Panel>\n\n          <div style={window.rolUsuario == 1 ?  {display:'block'} :  window.rolUsuario == 4 ? {display:'block'} : {display:'none'}}>\n          <p><b>Servicios:</b></p>\n          <Servicios\n            cita={this.state.cita}\n            servicios={this.state.servicios}\n            onChangeServicio={(e) => this.onChangeServicio(e)}\n            onCantidadServicioChange={(e) => this.onCantidadServicioChange(e)}\n            agregarServicio={() => this.agregarServicio()}\n            globalFilter={this.globalFilter}\n            serviciosActionBodyTemplate={this.serviciosActionBodyTemplate}\n          />\n          </div>\n\n          {/* <p><b>Estatus:</b></p>\n          <div className=\"content-section implementation p-dropdown\">\n          <Dropdown  \n          value={this.state.cita.estatusId}\n          options={this.state.estatus} \n          onChange={(e) => this.onEstatusChange(e)} \n          filter />\n          </div> */}\n\n        </Dialog>\n        {/* fin Dialog para editar observaciones, dar receta y agregar uso del producto*/}\n\n        {/*Dialog para Digitar PIN*/}\n        <Dialog\n          visible={this.state.pinDialog}\n          style={{width: '450px'}}\n          header=\"Validación\"\n          modal\n          className=\"p-fluid\"\n          footer={PINCitasDialogFooter}\n          onHide={this.state.pinDialogBoton=='Observaciones'? () => this.hidePinDialogObservaciones:() => this.hidePinDialogAtender}>\n          <p><b>Pódologo:</b></p>\n          <p>{this.state.cita.podologoName}</p>\n\n          <div className=\"p-field\">\n            <label htmlFor=\"pin\">Digita tu PIN</label>\n            <NumPad.Number\n            onChange={(value) => this.onPinPadChange(value,'pin')}\n            placeholder={''}\n            negative = {false}>\n            \n            <InputText\n              type='password'\n              keyfilter='int'\n              value= {this.state.cita['pin'] == null ? \"\" : this.state.cita['pin'] } \n              // onChange={(e) => this.onInputChange(e,'pin')}\n            />\n            </NumPad.Number>\n\n          </div>\n        </Dialog>\n        {/* fin Dialog para DigitarPIN*/}\n\n\n        {/*Dialog para Monstrar Alergias*/}\n        <Dialog\n          visible={this.state.dialogAlergias}// Aquí podríamos hacer duble check y verificar si es null las alergia y no mostrarlo\n          style={{width: '450px'}}\n          header=\"Información del Cliente\"\n          modal\n          className=\"p-fluid\"\n          footer={alergiasDialogFooter}\n          onHide={() => this.hideAlergiasDialog()}>\n          <p><b>Alergias:</b></p>\n          <InputTextarea\n            value={this.state.alergiasCliente==null? \"Sin alergias registradas\":this.state.alergiasCliente}\n            rows={5} cols={30} autoResize disabled />\n        </Dialog>\n        {/*Dialog para Monstrar Alergias*/}\n\n\n\n        <Dialog visible={this.state.deleteCitaDialog} style={{width: '450px'}} header=\"Confirm\" modal footer={deleteCitaDialogFooter} onHide={this.hideDeleteCitaDialog}>\n          <div className=\"confirmation-content\">\n            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{fontSize: '2rem'}} />\n            {this.state.cita&&<span>¿Estás seguro que quieres cancelar esta cita: <b>{this.state.cita.podologoName}</b> - <b>{this.state.cita.clienteName}</b> - <b>{this.state.cita.fecha}</b>?</span>}\n          </div>\n        </Dialog>\n\n        <Dialog visible={this.state.deleteCitasDialog} style={{width: '450px'}} header=\"Confirm\" modal footer={deleteCitasDialogFooter} onHide={this.hideDeleteCitasDialog}>\n          <div className=\"confirmation-content\">\n            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{fontSize: '2rem'}} />\n            {this.state.cita&&<span>¿Estas seguro que quieres cancelar estas citas?</span>}\n          </div>\n        </Dialog>\n\n      </div>\n\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}