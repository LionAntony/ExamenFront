{"ast":null,"code":"import _slicedToArray from \"/Users/leonardogutierrezjuarez/Documents/examen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/leonardogutierrezjuarez/Documents/examen/src/componentsPrincipales/Calendario/Calendario.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Dialog } from 'primereact/dialog';\nimport AppCitas from '../../moduloCitas/AppCitas.js';\nimport Fetch from '../Fetch/FetchN.js';\n\nvar MyCalendar = function MyCalendar() {\n  BigCalendar.setLocalizer(BigCalendar.momentLocalizer(moment));\n  var currDate = new Date();\n  var currYear = currDate.getFullYear();\n  var currMonth = currDate.getMonth();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Events = _useState2[0],\n      setEvents = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      citaPodologoDialog = _useState4[0],\n      setcitaPodologoDialog = _useState4[1];\n\n  var handleSelect = function handleSelect(_ref) {\n    var start = _ref.start,\n        end = _ref.end;\n    setcitaPodologoDialog(true);\n  };\n\n  var obtenerCitasService = function obtenerCitasService() {\n    Fetch('api/citas').then(function (values) {\n      var citas = values.data.map(function (post) {\n        return {\n          title: \"\".concat(post.podologo.nombre, \" - \").concat(post.cliente.nombre),\n          start: new Date(\"\".concat(post.fecha.split(\" \")[0].split(\"/\")[2], \"/\").concat(post.fecha.split(\" \")[0].split(\"/\")[1], \"/\").concat(post.fecha.split(\" \")[0].split(\"/\")[0], \" \").concat(post.fecha.split(\" \")[1].split(\":\")[0], \":\").concat(post.fecha.split(\" \")[1].split(\":\")[1], \":\").concat(post.fecha.split(\" \")[1].split(\":\")[2])),\n          end: new Date(new Date(\"\".concat(post.fecha.split(\" \")[0].split(\"/\")[2], \"/\").concat(post.fecha.split(\" \")[0].split(\"/\")[1], \"/\").concat(post.fecha.split(\" \")[0].split(\"/\")[0], \" \").concat(post.fecha.split(\" \")[1].split(\":\")[0], \":\").concat(post.fecha.split(\" \")[1].split(\":\")[1], \":\").concat(post.fecha.split(\" \")[1].split(\":\")[2])) + 1000 * 60 * 60 * 24 * 7),\n          color: post.podologo.color\n        };\n      });\n      setEvents(citas);\n    });\n  };\n\n  useEffect(function () {\n    obtenerCitasService();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animated\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    visible: citaPodologoDialog,\n    style: {\n      width: '60%'\n    },\n    header: \"Detalles de Cita\",\n    modal: true,\n    className: \"p-fluid\",\n    onHide: function onHide() {\n      return setcitaPodologoDialog(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppCitas, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-calendar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), \"Calendar\", ' '), /*#__PURE__*/React.createElement(CardBody, {\n    style: {\n      height: '40em'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BigCalendar // lassName=\"d-sm-down-none\"\n  , {\n    selectable: true,\n    onSelectEvent: function onSelectEvent(event) {\n      return alert(event.title);\n    },\n    onSelectSlot: handleSelect,\n    eventPropGetter: function eventPropGetter(event, start, end, isSelected) {\n      var backgroundColor = '#' + event.color; // console.log(\"evento\")\n      // console.log(event.color);\n      // console.log('backgroundColor');\n      // var simbolos,color;\n      // simbolos=\"0123456789ABCDEF\";\n      // color=\"#\";\n      // for(var i=0;i<6;i++) {\n      //   color=color+simbolos[Math.floor(Math.random(1)*16)];\n      // }\n\n      var style = {\n        backgroundColor: backgroundColor,\n        // borderRadius: '1000px',\n        // opacity: 1,\n        // color: 'black',\n        border: '0px',\n        // display: 'block'\n        whitespace: 'normal'\n      };\n      return {\n        style: style\n      };\n    },\n    events: Events,\n    views: ['month', 'week', 'day', 'work_week', 'agenda'],\n    step: 30,\n    defaultDate: new Date(currYear, currMonth, 1),\n    defaultView: \"month\",\n    toolbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["/Users/leonardogutierrezjuarez/Documents/examen/src/componentsPrincipales/Calendario/Calendario.js"],"names":["React","useState","useEffect","Card","CardBody","CardHeader","BigCalendar","moment","Dialog","AppCitas","Fetch","MyCalendar","setLocalizer","momentLocalizer","currDate","Date","currYear","getFullYear","currMonth","getMonth","Events","setEvents","citaPodologoDialog","setcitaPodologoDialog","handleSelect","start","end","obtenerCitasService","then","values","citas","data","map","post","title","podologo","nombre","cliente","fecha","split","color","width","height","event","alert","isSelected","backgroundColor","style","border","whitespace"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Card,CardBody,CardHeader} from 'reactstrap';\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport {Dialog} from 'primereact/dialog';\nimport AppCitas from '../../moduloCitas/AppCitas.js'\nimport Fetch from '../Fetch/FetchN.js'\n\nconst MyCalendar=() => {\n  BigCalendar.setLocalizer(\n    BigCalendar.momentLocalizer(moment),\n  );\n  const currDate=new Date();\n  const currYear=currDate.getFullYear();\n  const currMonth=currDate.getMonth();\n  const [Events,setEvents]=useState([])\n  const [citaPodologoDialog,setcitaPodologoDialog]=useState(false)\n\n  let handleSelect=({start,end}) => {\n    setcitaPodologoDialog(true)\n  }\n\n\n  let obtenerCitasService=() => {\n\n    Fetch('api/citas')\n      .then(values => {\n        const citas=values.data.map(post => ({\n          title: `${post.podologo.nombre} - ${post.cliente.nombre}`,\n          start: new Date(`${post.fecha.split(\" \")[0].split(\"/\")[2]}/${post.fecha.split(\" \")[0].split(\"/\")[1]}/${post.fecha.split(\" \")[0].split(\"/\")[0]} ${post.fecha.split(\" \")[1].split(\":\")[0]}:${post.fecha.split(\" \")[1].split(\":\")[1]}:${post.fecha.split(\" \")[1].split(\":\")[2]}`),\n          end: new Date(new Date(`${post.fecha.split(\" \")[0].split(\"/\")[2]}/${post.fecha.split(\" \")[0].split(\"/\")[1]}/${post.fecha.split(\" \")[0].split(\"/\")[0]} ${post.fecha.split(\" \")[1].split(\":\")[0]}:${post.fecha.split(\" \")[1].split(\":\")[1]}:${post.fecha.split(\" \")[1].split(\":\")[2]}`)+(1000*60*60*24*7)),\n          color: post.podologo.color\n        }\n        ));\n        setEvents(citas);\n      });\n  }\n\n  useEffect(() => {\n    obtenerCitasService()\n  },[]);\n\n  return (\n    <div className=\"animated\">\n      <Dialog\n        visible={citaPodologoDialog}\n        style={{width: '60%'}}\n        header=\"Detalles de Cita\"\n        modal\n        className=\"p-fluid\"\n        onHide={() => setcitaPodologoDialog(false)}\n      >\n        <AppCitas></AppCitas>\n      </Dialog>\n      <Card>\n        <CardHeader>\n          <i className=\"icon-calendar\"></i>Calendar{' '}\n        </CardHeader>\n        <CardBody style={{height: '40em'}}>\n          <BigCalendar\n            // lassName=\"d-sm-down-none\"\n            selectable\n            onSelectEvent={event => alert(event.title)}\n            onSelectSlot={handleSelect}\n            eventPropGetter={function(event,start,end,isSelected) {\n              var backgroundColor='#'+event.color;\n              // console.log(\"evento\")\n              // console.log(event.color);\n              // console.log('backgroundColor');\n              // var simbolos,color;\n              // simbolos=\"0123456789ABCDEF\";\n              // color=\"#\";\n\n              // for(var i=0;i<6;i++) {\n              //   color=color+simbolos[Math.floor(Math.random(1)*16)];\n              // }\n              var style={\n                backgroundColor: backgroundColor,\n                // borderRadius: '1000px',\n                // opacity: 1,\n                // color: 'black',\n                border: '0px',\n                // display: 'block'\n                whitespace: 'normal'\n              };\n              return {\n                style: style\n              };\n            }}\n            events={Events}\n            views={['month','week','day','work_week','agenda']}\n            step={30}\n            defaultDate={new Date(currYear,currMonth,1)}\n            defaultView='month'\n            toolbar={true}\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default MyCalendar;\n"]},"metadata":{},"sourceType":"module"}